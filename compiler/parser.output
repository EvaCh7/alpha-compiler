State 104 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 $@1: /* empty */

    3 statements: statements $@1 statement
    4           | statement

    5 statement: expression SEMICOLON
    6          | ifstmt
    7          | whilestmt
    8          | forstmt
    9          | returnstmt
   10          | BREAK SEMICOLON
   11          | CONTINUE SEMICOLON
   12          | block
   13          | funcdef
   14          | SEMICOLON

   15 expression: assignexpr
   16           | expression PLUS expression
   17           | expression MINUS expression
   18           | expression MULT expression
   19           | expression DIV expression
   20           | expression MOD expression
   21           | expression GREATER_THAN expression
   22           | expression GREATER_OR_EQUAL expression
   23           | expression LESS_THAN expression
   24           | expression LESS_OR_EQUAL expression
   25           | expression EQUALS_EQUALS expression
   26           | expression NOT_EQUALS expression

   27 $@2: /* empty */

   28 expression: expression AND $@2 M expression

   29 $@3: /* empty */

   30 expression: expression OR $@3 M expression
   31           | term

   32 M: /* empty */

   33 term: LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
   34     | MINUS expression
   35     | NOT expression
   36     | PLUS_PLUS lvalue
   37     | lvalue PLUS_PLUS
   38     | MINUS_MINUS lvalue
   39     | lvalue MINUS_MINUS
   40     | primary

   41 $@4: /* empty */

   42 assignexpr: lvalue $@4 EQUALS expression

   43 primary: lvalue
   44        | call
   45        | objectdef
   46        | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS
   47        | const

   48 lvalue: ID
   49       | LOCAL ID
   50       | DOUBLE_COLON ID
   51       | member

   52 member: lvalue DOT ID
   53       | lvalue LEFT_BRACE expression RIGHT_BRACE
   54       | call DOT ID
   55       | call LEFT_BRACE expression RIGHT_BRACE

   56 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS
   57     | lvalue callsuffix
   58     | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   59 callsuffix: normcall
   60           | methodcall

   61 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   62 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   63 elist: expression
   64      | expression COMMA elist
   65      | /* empty */

   66 objectdef: LEFT_BRACE elist RIGHT_BRACE
   67          | LEFT_BRACE indexed RIGHT_BRACE

   68 indexed: indexedelem
   69        | indexedelem COMMA indexed

   70 indexedelem: LEFT_BRACKET expression COLON expression RIGHT_BRACKET

   71 block: blockstart blockend
   72      | blockstart blockstmt blockend

   73 blockstart: LEFT_BRACKET

   74 blockend: RIGHT_BRACKET

   75 blockstmt: statement
   76          | statement blockstmt

   77 $@5: /* empty */

   78 $@6: /* empty */

   79 funcdef: funcstart LEFT_PARENTHESIS $@5 idlist RIGHT_PARENTHESIS $@6 block

   80 funcstart: FUNCTION ID
   81          | FUNCTION

   82 const: NUM
   83      | STRING
   84      | NIL
   85      | TRUE
   86      | FALSE

   87 idlist: arg
   88       | arg COMMA idlist
   89       | /* empty */

   90 arg: ID

   91 ifstmt: ifprefix statement
   92       | ifprefix statement elseprefix statement

   93 elseprefix: ELSE

   94 $@7: /* empty */

   95 ifprefix: IF LEFT_PARENTHESIS $@7 expression RIGHT_PARENTHESIS

   96 whilestart: WHILE

   97 $@8: /* empty */

   98 whilecond: LEFT_PARENTHESIS $@8 expression RIGHT_PARENTHESIS

   99 whilestmt: whilestart whilecond statement

  100 forprefix: forstart elist SEMICOLON M expression SEMICOLON

  101 forstart: FOR LEFT_PARENTHESIS

  102 forstmt: forprefix N elist RIGHT_PARENTHESIS N statement N

  103 N: /* empty */

  104 returnstmt: RETURN SEMICOLON
  105           | RETURN expression SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
NUM (258) 82
ID (259) 48 49 50 52 54 62 80 90
STRING (260) 83
IF (261) 95
ELSE (262) 93
WHILE (263) 96
FOR (264) 101
FUNCTION (265) 80 81
RETURN (266) 104 105
BREAK (267) 10
CONTINUE (268) 11
AND (269) 28
NOT (270) 35
OR (271) 30
LOCAL (272) 49
TRUE (273) 85
FALSE (274) 86
NIL (275) 84
LEFT_BRACE (276) 53 55 66 67
RIGHT_BRACE (277) 53 55 66 67
LEFT_BRACKET (278) 70 73
RIGHT_BRACKET (279) 70 74
LEFT_PARENTHESIS (280) 33 46 56 58 61 62 79 95 98 101
RIGHT_PARENTHESIS (281) 33 46 56 58 61 62 79 95 98 102
SEMICOLON (282) 5 10 11 14 100 104 105
COMMA (283) 64 69 88
COLON (284) 70
DOUBLE_COLON (285) 50
DOT (286) 52 54
DOUBLE_DOT (287) 62
EQUALS (288) 42
PLUS (289) 16
MINUS (290) 17 34
MULT (291) 18
DIV (292) 19
MOD (293) 20
EQUALS_EQUALS (294) 25
NOT_EQUALS (295) 26
PLUS_PLUS (296) 36 37
MINUS_MINUS (297) 38 39
GREATER_THAN (298) 21
LESS_THAN (299) 23
GREATER_OR_EQUAL (300) 22
LESS_OR_EQUAL (301) 24
UMINUS (302)


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
program (49)
    on left: 1, on right: 0
statements (50)
    on left: 3 4, on right: 1 3
$@1 (51)
    on left: 2, on right: 3
statement (52)
    on left: 5 6 7 8 9 10 11 12 13 14, on right: 3 4 75 76 91 92 99
    102
expression (53)
    on left: 15 16 17 18 19 20 21 22 23 24 25 26 28 30 31, on right:
    5 16 17 18 19 20 21 22 23 24 25 26 28 30 33 34 35 42 53 55 63 64
    70 95 98 100 105
$@2 (54)
    on left: 27, on right: 28
$@3 (55)
    on left: 29, on right: 30
M (56)
    on left: 32, on right: 28 30 100
term (57)
    on left: 33 34 35 36 37 38 39 40, on right: 31
assignexpr (58)
    on left: 42, on right: 15
$@4 (59)
    on left: 41, on right: 42
primary (60)
    on left: 43 44 45 46 47, on right: 40
lvalue (61)
    on left: 48 49 50 51, on right: 36 37 38 39 42 43 52 53 57
member (62)
    on left: 52 53 54 55, on right: 51
call (63)
    on left: 56 57 58, on right: 44 54 55 56
callsuffix (64)
    on left: 59 60, on right: 57
normcall (65)
    on left: 61, on right: 59
methodcall (66)
    on left: 62, on right: 60
elist (67)
    on left: 63 64 65, on right: 56 58 61 62 64 66 100 102
objectdef (68)
    on left: 66 67, on right: 45
indexed (69)
    on left: 68 69, on right: 67 69
indexedelem (70)
    on left: 70, on right: 68 69
block (71)
    on left: 71 72, on right: 12 79
blockstart (72)
    on left: 73, on right: 71 72
blockend (73)
    on left: 74, on right: 71 72
blockstmt (74)
    on left: 75 76, on right: 72 76
funcdef (75)
    on left: 79, on right: 13 46 58
$@5 (76)
    on left: 77, on right: 79
$@6 (77)
    on left: 78, on right: 79
funcstart (78)
    on left: 80 81, on right: 79
const (79)
    on left: 82 83 84 85 86, on right: 47
idlist (80)
    on left: 87 88 89, on right: 79 88
arg (81)
    on left: 90, on right: 87 88
ifstmt (82)
    on left: 91 92, on right: 6
elseprefix (83)
    on left: 93, on right: 92
ifprefix (84)
    on left: 95, on right: 91 92
$@7 (85)
    on left: 94, on right: 95
whilestart (86)
    on left: 96, on right: 99
whilecond (87)
    on left: 98, on right: 99
$@8 (88)
    on left: 97, on right: 98
whilestmt (89)
    on left: 99, on right: 7
forprefix (90)
    on left: 100, on right: 102
forstart (91)
    on left: 101, on right: 100
forstmt (92)
    on left: 102, on right: 8
N (93)
    on left: 103, on right: 102
returnstmt (94)
    on left: 104 105, on right: 9


state 0

    0 $accept: . program $end

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    IF                shift, and go to state 4
    WHILE             shift, and go to state 5
    FOR               shift, and go to state 6
    FUNCTION          shift, and go to state 7
    RETURN            shift, and go to state 8
    BREAK             shift, and go to state 9
    CONTINUE          shift, and go to state 10
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    SEMICOLON         shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    program     go to state 24
    statements  go to state 25
    statement   go to state 26
    expression  go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    blockstart  go to state 36
    funcdef     go to state 37
    funcstart   go to state 38
    const       go to state 39
    ifstmt      go to state 40
    ifprefix    go to state 41
    whilestart  go to state 42
    whilestmt   go to state 43
    forprefix   go to state 44
    forstart    go to state 45
    forstmt     go to state 46
    returnstmt  go to state 47


state 1

   82 const: NUM .

    $default  reduce using rule 82 (const)


state 2

   48 lvalue: ID .

    $default  reduce using rule 48 (lvalue)


state 3

   83 const: STRING .

    $default  reduce using rule 83 (const)


state 4

   95 ifprefix: IF . LEFT_PARENTHESIS $@7 expression RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 48


state 5

   96 whilestart: WHILE .

    $default  reduce using rule 96 (whilestart)


state 6

  101 forstart: FOR . LEFT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 49


state 7

   80 funcstart: FUNCTION . ID
   81          | FUNCTION .

    ID  shift, and go to state 50

    $default  reduce using rule 81 (funcstart)


state 8

  104 returnstmt: RETURN . SEMICOLON
  105           | RETURN . expression SEMICOLON

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    SEMICOLON         shift, and go to state 51
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 52
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 9

   10 statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 53


state 10

   11 statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 54


state 11

   35 term: NOT . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 55
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 12

   49 lvalue: LOCAL . ID

    ID  shift, and go to state 56


state 13

   85 const: TRUE .

    $default  reduce using rule 85 (const)


state 14

   86 const: FALSE .

    $default  reduce using rule 86 (const)


state 15

   84 const: NIL .

    $default  reduce using rule 84 (const)


state 16

   66 objectdef: LEFT_BRACE . elist RIGHT_BRACE
   67          | LEFT_BRACE . indexed RIGHT_BRACE

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_BRACKET      shift, and go to state 57
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    $default  reduce using rule 65 (elist)

    expression   go to state 58
    term         go to state 28
    assignexpr   go to state 29
    primary      go to state 30
    lvalue       go to state 31
    member       go to state 32
    call         go to state 33
    elist        go to state 59
    objectdef    go to state 34
    indexed      go to state 60
    indexedelem  go to state 61
    const        go to state 39


state 17

   73 blockstart: LEFT_BRACKET .

    $default  reduce using rule 73 (blockstart)


state 18

   33 term: LEFT_PARENTHESIS . expression RIGHT_PARENTHESIS
   46 primary: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS
   58 call: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    FUNCTION          shift, and go to state 7
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 62
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 63
    funcstart   go to state 38
    const       go to state 39


state 19

   14 statement: SEMICOLON .

    $default  reduce using rule 14 (statement)


state 20

   50 lvalue: DOUBLE_COLON . ID

    ID  shift, and go to state 64


state 21

   34 term: MINUS . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 65
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 22

   36 term: PLUS_PLUS . lvalue

    ID                shift, and go to state 2
    LOCAL             shift, and go to state 12
    LEFT_PARENTHESIS  shift, and go to state 66
    DOUBLE_COLON      shift, and go to state 20

    lvalue  go to state 67
    member  go to state 32
    call    go to state 68


state 23

   38 term: MINUS_MINUS . lvalue

    ID                shift, and go to state 2
    LOCAL             shift, and go to state 12
    LEFT_PARENTHESIS  shift, and go to state 66
    DOUBLE_COLON      shift, and go to state 20

    lvalue  go to state 69
    member  go to state 32
    call    go to state 68


state 24

    0 $accept: program . $end

    $end  shift, and go to state 70


state 25

    1 program: statements .
    3 statements: statements . $@1 statement

    $end      reduce using rule 1 (program)
    $default  reduce using rule 2 ($@1)

    $@1  go to state 71


state 26

    4 statements: statement .

    $default  reduce using rule 4 (statements)


state 27

    5 statement: expression . SEMICOLON
   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   28           | expression . AND $@2 M expression
   30           | expression . OR $@3 M expression

    AND               shift, and go to state 72
    OR                shift, and go to state 73
    SEMICOLON         shift, and go to state 74
    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS_EQUALS     shift, and go to state 80
    NOT_EQUALS        shift, and go to state 81
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85


state 28

   31 expression: term .

    $default  reduce using rule 31 (expression)


state 29

   15 expression: assignexpr .

    $default  reduce using rule 15 (expression)


state 30

   40 term: primary .

    $default  reduce using rule 40 (term)


state 31

   37 term: lvalue . PLUS_PLUS
   39     | lvalue . MINUS_MINUS
   42 assignexpr: lvalue . $@4 EQUALS expression
   43 primary: lvalue .
   52 member: lvalue . DOT ID
   53       | lvalue . LEFT_BRACE expression RIGHT_BRACE
   57 call: lvalue . callsuffix

    LEFT_BRACE        shift, and go to state 86
    LEFT_PARENTHESIS  shift, and go to state 87
    DOT               shift, and go to state 88
    DOUBLE_DOT        shift, and go to state 89
    PLUS_PLUS         shift, and go to state 90
    MINUS_MINUS       shift, and go to state 91

    EQUALS    reduce using rule 41 ($@4)
    $default  reduce using rule 43 (primary)

    $@4         go to state 92
    callsuffix  go to state 93
    normcall    go to state 94
    methodcall  go to state 95


state 32

   51 lvalue: member .

    $default  reduce using rule 51 (lvalue)


state 33

   44 primary: call .
   54 member: call . DOT ID
   55       | call . LEFT_BRACE expression RIGHT_BRACE
   56 call: call . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_BRACE        shift, and go to state 96
    LEFT_PARENTHESIS  shift, and go to state 97
    DOT               shift, and go to state 98

    $default  reduce using rule 44 (primary)


state 34

   45 primary: objectdef .

    $default  reduce using rule 45 (primary)


state 35

   12 statement: block .

    $default  reduce using rule 12 (statement)


state 36

   71 block: blockstart . blockend
   72      | blockstart . blockstmt blockend

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    IF                shift, and go to state 4
    WHILE             shift, and go to state 5
    FOR               shift, and go to state 6
    FUNCTION          shift, and go to state 7
    RETURN            shift, and go to state 8
    BREAK             shift, and go to state 9
    CONTINUE          shift, and go to state 10
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_BRACKET      shift, and go to state 17
    RIGHT_BRACKET     shift, and go to state 99
    LEFT_PARENTHESIS  shift, and go to state 18
    SEMICOLON         shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    statement   go to state 100
    expression  go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    blockstart  go to state 36
    blockend    go to state 101
    blockstmt   go to state 102
    funcdef     go to state 37
    funcstart   go to state 38
    const       go to state 39
    ifstmt      go to state 40
    ifprefix    go to state 41
    whilestart  go to state 42
    whilestmt   go to state 43
    forprefix   go to state 44
    forstart    go to state 45
    forstmt     go to state 46
    returnstmt  go to state 47


state 37

   13 statement: funcdef .

    $default  reduce using rule 13 (statement)


state 38

   79 funcdef: funcstart . LEFT_PARENTHESIS $@5 idlist RIGHT_PARENTHESIS $@6 block

    LEFT_PARENTHESIS  shift, and go to state 103


state 39

   47 primary: const .

    $default  reduce using rule 47 (primary)


state 40

    6 statement: ifstmt .

    $default  reduce using rule 6 (statement)


state 41

   91 ifstmt: ifprefix . statement
   92       | ifprefix . statement elseprefix statement

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    IF                shift, and go to state 4
    WHILE             shift, and go to state 5
    FOR               shift, and go to state 6
    FUNCTION          shift, and go to state 7
    RETURN            shift, and go to state 8
    BREAK             shift, and go to state 9
    CONTINUE          shift, and go to state 10
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    SEMICOLON         shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    statement   go to state 104
    expression  go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    blockstart  go to state 36
    funcdef     go to state 37
    funcstart   go to state 38
    const       go to state 39
    ifstmt      go to state 40
    ifprefix    go to state 41
    whilestart  go to state 42
    whilestmt   go to state 43
    forprefix   go to state 44
    forstart    go to state 45
    forstmt     go to state 46
    returnstmt  go to state 47


state 42

   99 whilestmt: whilestart . whilecond statement

    LEFT_PARENTHESIS  shift, and go to state 105

    whilecond  go to state 106


state 43

    7 statement: whilestmt .

    $default  reduce using rule 7 (statement)


state 44

  102 forstmt: forprefix . N elist RIGHT_PARENTHESIS N statement N

    $default  reduce using rule 103 (N)

    N  go to state 107


state 45

  100 forprefix: forstart . elist SEMICOLON M expression SEMICOLON

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    $default  reduce using rule 65 (elist)

    expression  go to state 58
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 108
    objectdef   go to state 34
    const       go to state 39


state 46

    8 statement: forstmt .

    $default  reduce using rule 8 (statement)


state 47

    9 statement: returnstmt .

    $default  reduce using rule 9 (statement)


state 48

   95 ifprefix: IF LEFT_PARENTHESIS . $@7 expression RIGHT_PARENTHESIS

    $default  reduce using rule 94 ($@7)

    $@7  go to state 109


state 49

  101 forstart: FOR LEFT_PARENTHESIS .

    $default  reduce using rule 101 (forstart)


state 50

   80 funcstart: FUNCTION ID .

    $default  reduce using rule 80 (funcstart)


state 51

  104 returnstmt: RETURN SEMICOLON .

    $default  reduce using rule 104 (returnstmt)


state 52

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   28           | expression . AND $@2 M expression
   30           | expression . OR $@3 M expression
  105 returnstmt: RETURN expression . SEMICOLON

    AND               shift, and go to state 72
    OR                shift, and go to state 73
    SEMICOLON         shift, and go to state 110
    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS_EQUALS     shift, and go to state 80
    NOT_EQUALS        shift, and go to state 81
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85


state 53

   10 statement: BREAK SEMICOLON .

    $default  reduce using rule 10 (statement)


state 54

   11 statement: CONTINUE SEMICOLON .

    $default  reduce using rule 11 (statement)


state 55

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   28           | expression . AND $@2 M expression
   30           | expression . OR $@3 M expression
   35 term: NOT expression .

    $default  reduce using rule 35 (term)


state 56

   49 lvalue: LOCAL ID .

    $default  reduce using rule 49 (lvalue)


state 57

   70 indexedelem: LEFT_BRACKET . expression COLON expression RIGHT_BRACKET

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 111
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 58

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   28           | expression . AND $@2 M expression
   30           | expression . OR $@3 M expression
   63 elist: expression .
   64      | expression . COMMA elist

    AND               shift, and go to state 72
    OR                shift, and go to state 73
    COMMA             shift, and go to state 112
    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS_EQUALS     shift, and go to state 80
    NOT_EQUALS        shift, and go to state 81
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85

    $default  reduce using rule 63 (elist)


state 59

   66 objectdef: LEFT_BRACE elist . RIGHT_BRACE

    RIGHT_BRACE  shift, and go to state 113


state 60

   67 objectdef: LEFT_BRACE indexed . RIGHT_BRACE

    RIGHT_BRACE  shift, and go to state 114


state 61

   68 indexed: indexedelem .
   69        | indexedelem . COMMA indexed

    COMMA  shift, and go to state 115

    $default  reduce using rule 68 (indexed)


state 62

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   28           | expression . AND $@2 M expression
   30           | expression . OR $@3 M expression
   33 term: LEFT_PARENTHESIS expression . RIGHT_PARENTHESIS

    AND                shift, and go to state 72
    OR                 shift, and go to state 73
    RIGHT_PARENTHESIS  shift, and go to state 116
    PLUS               shift, and go to state 75
    MINUS              shift, and go to state 76
    MULT               shift, and go to state 77
    DIV                shift, and go to state 78
    MOD                shift, and go to state 79
    EQUALS_EQUALS      shift, and go to state 80
    NOT_EQUALS         shift, and go to state 81
    GREATER_THAN       shift, and go to state 82
    LESS_THAN          shift, and go to state 83
    GREATER_OR_EQUAL   shift, and go to state 84
    LESS_OR_EQUAL      shift, and go to state 85


state 63

   46 primary: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS
   58 call: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 117


state 64

   50 lvalue: DOUBLE_COLON ID .

    $default  reduce using rule 50 (lvalue)


state 65

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   28           | expression . AND $@2 M expression
   30           | expression . OR $@3 M expression
   34 term: MINUS expression .

    $default  reduce using rule 34 (term)


state 66

   58 call: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    FUNCTION  shift, and go to state 7

    funcdef    go to state 118
    funcstart  go to state 38


state 67

   36 term: PLUS_PLUS lvalue .
   52 member: lvalue . DOT ID
   53       | lvalue . LEFT_BRACE expression RIGHT_BRACE
   57 call: lvalue . callsuffix

    LEFT_BRACE        shift, and go to state 86
    LEFT_PARENTHESIS  shift, and go to state 87
    DOT               shift, and go to state 88
    DOUBLE_DOT        shift, and go to state 89

    $default  reduce using rule 36 (term)

    callsuffix  go to state 93
    normcall    go to state 94
    methodcall  go to state 95


state 68

   54 member: call . DOT ID
   55       | call . LEFT_BRACE expression RIGHT_BRACE
   56 call: call . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_BRACE        shift, and go to state 96
    LEFT_PARENTHESIS  shift, and go to state 97
    DOT               shift, and go to state 98


state 69

   38 term: MINUS_MINUS lvalue .
   52 member: lvalue . DOT ID
   53       | lvalue . LEFT_BRACE expression RIGHT_BRACE
   57 call: lvalue . callsuffix

    LEFT_BRACE        shift, and go to state 86
    LEFT_PARENTHESIS  shift, and go to state 87
    DOT               shift, and go to state 88
    DOUBLE_DOT        shift, and go to state 89

    $default  reduce using rule 38 (term)

    callsuffix  go to state 93
    normcall    go to state 94
    methodcall  go to state 95


state 70

    0 $accept: program $end .

    $default  accept


state 71

    3 statements: statements $@1 . statement

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    IF                shift, and go to state 4
    WHILE             shift, and go to state 5
    FOR               shift, and go to state 6
    FUNCTION          shift, and go to state 7
    RETURN            shift, and go to state 8
    BREAK             shift, and go to state 9
    CONTINUE          shift, and go to state 10
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    SEMICOLON         shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    statement   go to state 119
    expression  go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    blockstart  go to state 36
    funcdef     go to state 37
    funcstart   go to state 38
    const       go to state 39
    ifstmt      go to state 40
    ifprefix    go to state 41
    whilestart  go to state 42
    whilestmt   go to state 43
    forprefix   go to state 44
    forstart    go to state 45
    forstmt     go to state 46
    returnstmt  go to state 47


state 72

   28 expression: expression AND . $@2 M expression

    $default  reduce using rule 27 ($@2)

    $@2  go to state 120


state 73

   30 expression: expression OR . $@3 M expression

    $default  reduce using rule 29 ($@3)

    $@3  go to state 121


state 74

    5 statement: expression SEMICOLON .

    $default  reduce using rule 5 (statement)


state 75

   16 expression: expression PLUS . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 122
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 76

   17 expression: expression MINUS . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 123
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 77

   18 expression: expression MULT . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 124
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 78

   19 expression: expression DIV . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 125
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 79

   20 expression: expression MOD . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 126
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 80

   25 expression: expression EQUALS_EQUALS . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 127
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 81

   26 expression: expression NOT_EQUALS . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 128
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 82

   21 expression: expression GREATER_THAN . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 129
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 83

   23 expression: expression LESS_THAN . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 130
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 84

   22 expression: expression GREATER_OR_EQUAL . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 131
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 85

   24 expression: expression LESS_OR_EQUAL . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 132
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 86

   53 member: lvalue LEFT_BRACE . expression RIGHT_BRACE

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 133
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 87

   61 normcall: LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    $default  reduce using rule 65 (elist)

    expression  go to state 58
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 134
    objectdef   go to state 34
    const       go to state 39


state 88

   52 member: lvalue DOT . ID

    ID  shift, and go to state 135


state 89

   62 methodcall: DOUBLE_DOT . ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    ID  shift, and go to state 136


state 90

   37 term: lvalue PLUS_PLUS .

    $default  reduce using rule 37 (term)


state 91

   39 term: lvalue MINUS_MINUS .

    $default  reduce using rule 39 (term)


state 92

   42 assignexpr: lvalue $@4 . EQUALS expression

    EQUALS  shift, and go to state 137


state 93

   57 call: lvalue callsuffix .

    $default  reduce using rule 57 (call)


state 94

   59 callsuffix: normcall .

    $default  reduce using rule 59 (callsuffix)


state 95

   60 callsuffix: methodcall .

    $default  reduce using rule 60 (callsuffix)


state 96

   55 member: call LEFT_BRACE . expression RIGHT_BRACE

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 138
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 97

   56 call: call LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    $default  reduce using rule 65 (elist)

    expression  go to state 58
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 139
    objectdef   go to state 34
    const       go to state 39


state 98

   54 member: call DOT . ID

    ID  shift, and go to state 140


state 99

   74 blockend: RIGHT_BRACKET .

    $default  reduce using rule 74 (blockend)


state 100

   75 blockstmt: statement .
   76          | statement . blockstmt

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    IF                shift, and go to state 4
    WHILE             shift, and go to state 5
    FOR               shift, and go to state 6
    FUNCTION          shift, and go to state 7
    RETURN            shift, and go to state 8
    BREAK             shift, and go to state 9
    CONTINUE          shift, and go to state 10
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    SEMICOLON         shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    $default  reduce using rule 75 (blockstmt)

    statement   go to state 100
    expression  go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    blockstart  go to state 36
    blockstmt   go to state 141
    funcdef     go to state 37
    funcstart   go to state 38
    const       go to state 39
    ifstmt      go to state 40
    ifprefix    go to state 41
    whilestart  go to state 42
    whilestmt   go to state 43
    forprefix   go to state 44
    forstart    go to state 45
    forstmt     go to state 46
    returnstmt  go to state 47


state 101

   71 block: blockstart blockend .

    $default  reduce using rule 71 (block)


state 102

   72 block: blockstart blockstmt . blockend

    RIGHT_BRACKET  shift, and go to state 99

    blockend  go to state 142


state 103

   79 funcdef: funcstart LEFT_PARENTHESIS . $@5 idlist RIGHT_PARENTHESIS $@6 block

    $default  reduce using rule 77 ($@5)

    $@5  go to state 143


state 104

   91 ifstmt: ifprefix statement .
   92       | ifprefix statement . elseprefix statement

    ELSE  shift, and go to state 144

    ELSE      [reduce using rule 91 (ifstmt)]
    $default  reduce using rule 91 (ifstmt)

    elseprefix  go to state 145


state 105

   98 whilecond: LEFT_PARENTHESIS . $@8 expression RIGHT_PARENTHESIS

    $default  reduce using rule 97 ($@8)

    $@8  go to state 146


state 106

   99 whilestmt: whilestart whilecond . statement

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    IF                shift, and go to state 4
    WHILE             shift, and go to state 5
    FOR               shift, and go to state 6
    FUNCTION          shift, and go to state 7
    RETURN            shift, and go to state 8
    BREAK             shift, and go to state 9
    CONTINUE          shift, and go to state 10
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    SEMICOLON         shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    statement   go to state 147
    expression  go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    blockstart  go to state 36
    funcdef     go to state 37
    funcstart   go to state 38
    const       go to state 39
    ifstmt      go to state 40
    ifprefix    go to state 41
    whilestart  go to state 42
    whilestmt   go to state 43
    forprefix   go to state 44
    forstart    go to state 45
    forstmt     go to state 46
    returnstmt  go to state 47


state 107

  102 forstmt: forprefix N . elist RIGHT_PARENTHESIS N statement N

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    $default  reduce using rule 65 (elist)

    expression  go to state 58
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 148
    objectdef   go to state 34
    const       go to state 39


state 108

  100 forprefix: forstart elist . SEMICOLON M expression SEMICOLON

    SEMICOLON  shift, and go to state 149


state 109

   95 ifprefix: IF LEFT_PARENTHESIS $@7 . expression RIGHT_PARENTHESIS

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 150
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 110

  105 returnstmt: RETURN expression SEMICOLON .

    $default  reduce using rule 105 (returnstmt)


state 111

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   28           | expression . AND $@2 M expression
   30           | expression . OR $@3 M expression
   70 indexedelem: LEFT_BRACKET expression . COLON expression RIGHT_BRACKET

    AND               shift, and go to state 72
    OR                shift, and go to state 73
    COLON             shift, and go to state 151
    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS_EQUALS     shift, and go to state 80
    NOT_EQUALS        shift, and go to state 81
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85


state 112

   64 elist: expression COMMA . elist

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    $default  reduce using rule 65 (elist)

    expression  go to state 58
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 152
    objectdef   go to state 34
    const       go to state 39


state 113

   66 objectdef: LEFT_BRACE elist RIGHT_BRACE .

    $default  reduce using rule 66 (objectdef)


state 114

   67 objectdef: LEFT_BRACE indexed RIGHT_BRACE .

    $default  reduce using rule 67 (objectdef)


state 115

   69 indexed: indexedelem COMMA . indexed

    LEFT_BRACKET  shift, and go to state 57

    indexed      go to state 153
    indexedelem  go to state 61


state 116

   33 term: LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .

    $default  reduce using rule 33 (term)


state 117

   46 primary: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS .
   58 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 154

    $default  reduce using rule 46 (primary)


state 118

   58 call: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 155


state 119

    3 statements: statements $@1 statement .

    $default  reduce using rule 3 (statements)


state 120

   28 expression: expression AND $@2 . M expression

    $default  reduce using rule 32 (M)

    M  go to state 156


state 121

   30 expression: expression OR $@3 . M expression

    $default  reduce using rule 32 (M)

    M  go to state 157


state 122

   16 expression: expression . PLUS expression
   16           | expression PLUS expression .
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   28           | expression . AND $@2 M expression
   30           | expression . OR $@3 M expression

    MULT  shift, and go to state 77
    DIV   shift, and go to state 78
    MOD   shift, and go to state 79

    $default  reduce using rule 16 (expression)


state 123

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   17           | expression MINUS expression .
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   28           | expression . AND $@2 M expression
   30           | expression . OR $@3 M expression

    MULT  shift, and go to state 77
    DIV   shift, and go to state 78
    MOD   shift, and go to state 79

    $default  reduce using rule 17 (expression)


state 124

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   18           | expression MULT expression .
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   28           | expression . AND $@2 M expression
   30           | expression . OR $@3 M expression

    $default  reduce using rule 18 (expression)


state 125

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   19           | expression DIV expression .
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   28           | expression . AND $@2 M expression
   30           | expression . OR $@3 M expression

    $default  reduce using rule 19 (expression)


state 126

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   20           | expression MOD expression .
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   28           | expression . AND $@2 M expression
   30           | expression . OR $@3 M expression

    $default  reduce using rule 20 (expression)


state 127

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   25           | expression EQUALS_EQUALS expression .
   26           | expression . NOT_EQUALS expression
   28           | expression . AND $@2 M expression
   30           | expression . OR $@3 M expression

    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85

    EQUALS_EQUALS  error (nonassociative)
    NOT_EQUALS     error (nonassociative)

    $default  reduce using rule 25 (expression)


state 128

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   26           | expression NOT_EQUALS expression .
   28           | expression . AND $@2 M expression
   30           | expression . OR $@3 M expression

    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85

    EQUALS_EQUALS  error (nonassociative)
    NOT_EQUALS     error (nonassociative)

    $default  reduce using rule 26 (expression)


state 129

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   21           | expression GREATER_THAN expression .
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   28           | expression . AND $@2 M expression
   30           | expression . OR $@3 M expression

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    MULT   shift, and go to state 77
    DIV    shift, and go to state 78
    MOD    shift, and go to state 79

    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)

    $default  reduce using rule 21 (expression)


state 130

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   23           | expression LESS_THAN expression .
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   28           | expression . AND $@2 M expression
   30           | expression . OR $@3 M expression

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    MULT   shift, and go to state 77
    DIV    shift, and go to state 78
    MOD    shift, and go to state 79

    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)

    $default  reduce using rule 23 (expression)


state 131

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   22           | expression GREATER_OR_EQUAL expression .
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   28           | expression . AND $@2 M expression
   30           | expression . OR $@3 M expression

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    MULT   shift, and go to state 77
    DIV    shift, and go to state 78
    MOD    shift, and go to state 79

    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)

    $default  reduce using rule 22 (expression)


state 132

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   24           | expression LESS_OR_EQUAL expression .
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   28           | expression . AND $@2 M expression
   30           | expression . OR $@3 M expression

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    MULT   shift, and go to state 77
    DIV    shift, and go to state 78
    MOD    shift, and go to state 79

    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)

    $default  reduce using rule 24 (expression)


state 133

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   28           | expression . AND $@2 M expression
   30           | expression . OR $@3 M expression
   53 member: lvalue LEFT_BRACE expression . RIGHT_BRACE

    AND               shift, and go to state 72
    OR                shift, and go to state 73
    RIGHT_BRACE       shift, and go to state 158
    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS_EQUALS     shift, and go to state 80
    NOT_EQUALS        shift, and go to state 81
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85


state 134

   61 normcall: LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 159


state 135

   52 member: lvalue DOT ID .

    $default  reduce using rule 52 (member)


state 136

   62 methodcall: DOUBLE_DOT ID . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 160


state 137

   42 assignexpr: lvalue $@4 EQUALS . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 161
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 138

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   28           | expression . AND $@2 M expression
   30           | expression . OR $@3 M expression
   55 member: call LEFT_BRACE expression . RIGHT_BRACE

    AND               shift, and go to state 72
    OR                shift, and go to state 73
    RIGHT_BRACE       shift, and go to state 162
    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS_EQUALS     shift, and go to state 80
    NOT_EQUALS        shift, and go to state 81
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85


state 139

   56 call: call LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 163


state 140

   54 member: call DOT ID .

    $default  reduce using rule 54 (member)


state 141

   76 blockstmt: statement blockstmt .

    $default  reduce using rule 76 (blockstmt)


state 142

   72 block: blockstart blockstmt blockend .

    $default  reduce using rule 72 (block)


state 143

   79 funcdef: funcstart LEFT_PARENTHESIS $@5 . idlist RIGHT_PARENTHESIS $@6 block

    ID  shift, and go to state 164

    $default  reduce using rule 89 (idlist)

    idlist  go to state 165
    arg     go to state 166


state 144

   93 elseprefix: ELSE .

    $default  reduce using rule 93 (elseprefix)


state 145

   92 ifstmt: ifprefix statement elseprefix . statement

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    IF                shift, and go to state 4
    WHILE             shift, and go to state 5
    FOR               shift, and go to state 6
    FUNCTION          shift, and go to state 7
    RETURN            shift, and go to state 8
    BREAK             shift, and go to state 9
    CONTINUE          shift, and go to state 10
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    SEMICOLON         shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    statement   go to state 167
    expression  go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    blockstart  go to state 36
    funcdef     go to state 37
    funcstart   go to state 38
    const       go to state 39
    ifstmt      go to state 40
    ifprefix    go to state 41
    whilestart  go to state 42
    whilestmt   go to state 43
    forprefix   go to state 44
    forstart    go to state 45
    forstmt     go to state 46
    returnstmt  go to state 47


state 146

   98 whilecond: LEFT_PARENTHESIS $@8 . expression RIGHT_PARENTHESIS

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 168
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 147

   99 whilestmt: whilestart whilecond statement .

    $default  reduce using rule 99 (whilestmt)


state 148

  102 forstmt: forprefix N elist . RIGHT_PARENTHESIS N statement N

    RIGHT_PARENTHESIS  shift, and go to state 169


state 149

  100 forprefix: forstart elist SEMICOLON . M expression SEMICOLON

    $default  reduce using rule 32 (M)

    M  go to state 170


state 150

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   28           | expression . AND $@2 M expression
   30           | expression . OR $@3 M expression
   95 ifprefix: IF LEFT_PARENTHESIS $@7 expression . RIGHT_PARENTHESIS

    AND                shift, and go to state 72
    OR                 shift, and go to state 73
    RIGHT_PARENTHESIS  shift, and go to state 171
    PLUS               shift, and go to state 75
    MINUS              shift, and go to state 76
    MULT               shift, and go to state 77
    DIV                shift, and go to state 78
    MOD                shift, and go to state 79
    EQUALS_EQUALS      shift, and go to state 80
    NOT_EQUALS         shift, and go to state 81
    GREATER_THAN       shift, and go to state 82
    LESS_THAN          shift, and go to state 83
    GREATER_OR_EQUAL   shift, and go to state 84
    LESS_OR_EQUAL      shift, and go to state 85


state 151

   70 indexedelem: LEFT_BRACKET expression COLON . expression RIGHT_BRACKET

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 172
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 152

   64 elist: expression COMMA elist .

    $default  reduce using rule 64 (elist)


state 153

   69 indexed: indexedelem COMMA indexed .

    $default  reduce using rule 69 (indexed)


state 154

   58 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    $default  reduce using rule 65 (elist)

    expression  go to state 58
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 173
    objectdef   go to state 34
    const       go to state 39


state 155

   58 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 154


state 156

   28 expression: expression AND $@2 M . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 174
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 157

   30 expression: expression OR $@3 M . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 175
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 158

   53 member: lvalue LEFT_BRACE expression RIGHT_BRACE .

    $default  reduce using rule 53 (member)


state 159

   61 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 61 (normcall)


state 160

   62 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    $default  reduce using rule 65 (elist)

    expression  go to state 58
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 176
    objectdef   go to state 34
    const       go to state 39


state 161

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   28           | expression . AND $@2 M expression
   30           | expression . OR $@3 M expression
   42 assignexpr: lvalue $@4 EQUALS expression .

    AND               shift, and go to state 72
    OR                shift, and go to state 73
    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS_EQUALS     shift, and go to state 80
    NOT_EQUALS        shift, and go to state 81
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85

    $default  reduce using rule 42 (assignexpr)


state 162

   55 member: call LEFT_BRACE expression RIGHT_BRACE .

    $default  reduce using rule 55 (member)


state 163

   56 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 56 (call)


state 164

   90 arg: ID .

    $default  reduce using rule 90 (arg)


state 165

   79 funcdef: funcstart LEFT_PARENTHESIS $@5 idlist . RIGHT_PARENTHESIS $@6 block

    RIGHT_PARENTHESIS  shift, and go to state 177


state 166

   87 idlist: arg .
   88       | arg . COMMA idlist

    COMMA  shift, and go to state 178

    $default  reduce using rule 87 (idlist)


state 167

   92 ifstmt: ifprefix statement elseprefix statement .

    $default  reduce using rule 92 (ifstmt)


state 168

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   28           | expression . AND $@2 M expression
   30           | expression . OR $@3 M expression
   98 whilecond: LEFT_PARENTHESIS $@8 expression . RIGHT_PARENTHESIS

    AND                shift, and go to state 72
    OR                 shift, and go to state 73
    RIGHT_PARENTHESIS  shift, and go to state 179
    PLUS               shift, and go to state 75
    MINUS              shift, and go to state 76
    MULT               shift, and go to state 77
    DIV                shift, and go to state 78
    MOD                shift, and go to state 79
    EQUALS_EQUALS      shift, and go to state 80
    NOT_EQUALS         shift, and go to state 81
    GREATER_THAN       shift, and go to state 82
    LESS_THAN          shift, and go to state 83
    GREATER_OR_EQUAL   shift, and go to state 84
    LESS_OR_EQUAL      shift, and go to state 85


state 169

  102 forstmt: forprefix N elist RIGHT_PARENTHESIS . N statement N

    $default  reduce using rule 103 (N)

    N  go to state 180


state 170

  100 forprefix: forstart elist SEMICOLON M . expression SEMICOLON

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 181
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 171

   95 ifprefix: IF LEFT_PARENTHESIS $@7 expression RIGHT_PARENTHESIS .

    $default  reduce using rule 95 (ifprefix)


state 172

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   28           | expression . AND $@2 M expression
   30           | expression . OR $@3 M expression
   70 indexedelem: LEFT_BRACKET expression COLON expression . RIGHT_BRACKET

    AND               shift, and go to state 72
    OR                shift, and go to state 73
    RIGHT_BRACKET     shift, and go to state 182
    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS_EQUALS     shift, and go to state 80
    NOT_EQUALS        shift, and go to state 81
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85


state 173

   58 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 183


state 174

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   28           | expression . AND $@2 M expression
   28           | expression AND $@2 M expression .
   30           | expression . OR $@3 M expression

    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS_EQUALS     shift, and go to state 80
    NOT_EQUALS        shift, and go to state 81
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85

    $default  reduce using rule 28 (expression)


state 175

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   28           | expression . AND $@2 M expression
   30           | expression . OR $@3 M expression
   30           | expression OR $@3 M expression .

    AND               shift, and go to state 72
    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS_EQUALS     shift, and go to state 80
    NOT_EQUALS        shift, and go to state 81
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85

    $default  reduce using rule 30 (expression)


state 176

   62 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 184


state 177

   79 funcdef: funcstart LEFT_PARENTHESIS $@5 idlist RIGHT_PARENTHESIS . $@6 block

    $default  reduce using rule 78 ($@6)

    $@6  go to state 185


state 178

   88 idlist: arg COMMA . idlist

    ID  shift, and go to state 164

    $default  reduce using rule 89 (idlist)

    idlist  go to state 186
    arg     go to state 166


state 179

   98 whilecond: LEFT_PARENTHESIS $@8 expression RIGHT_PARENTHESIS .

    $default  reduce using rule 98 (whilecond)


state 180

  102 forstmt: forprefix N elist RIGHT_PARENTHESIS N . statement N

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    IF                shift, and go to state 4
    WHILE             shift, and go to state 5
    FOR               shift, and go to state 6
    FUNCTION          shift, and go to state 7
    RETURN            shift, and go to state 8
    BREAK             shift, and go to state 9
    CONTINUE          shift, and go to state 10
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    SEMICOLON         shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    statement   go to state 187
    expression  go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    blockstart  go to state 36
    funcdef     go to state 37
    funcstart   go to state 38
    const       go to state 39
    ifstmt      go to state 40
    ifprefix    go to state 41
    whilestart  go to state 42
    whilestmt   go to state 43
    forprefix   go to state 44
    forstart    go to state 45
    forstmt     go to state 46
    returnstmt  go to state 47


state 181

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   28           | expression . AND $@2 M expression
   30           | expression . OR $@3 M expression
  100 forprefix: forstart elist SEMICOLON M expression . SEMICOLON

    AND               shift, and go to state 72
    OR                shift, and go to state 73
    SEMICOLON         shift, and go to state 188
    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS_EQUALS     shift, and go to state 80
    NOT_EQUALS        shift, and go to state 81
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85


state 182

   70 indexedelem: LEFT_BRACKET expression COLON expression RIGHT_BRACKET .

    $default  reduce using rule 70 (indexedelem)


state 183

   58 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 58 (call)


state 184

   62 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 62 (methodcall)


state 185

   79 funcdef: funcstart LEFT_PARENTHESIS $@5 idlist RIGHT_PARENTHESIS $@6 . block

    LEFT_BRACKET  shift, and go to state 17

    block       go to state 189
    blockstart  go to state 36


state 186

   88 idlist: arg COMMA idlist .

    $default  reduce using rule 88 (idlist)


state 187

  102 forstmt: forprefix N elist RIGHT_PARENTHESIS N statement . N

    $default  reduce using rule 103 (N)

    N  go to state 190


state 188

  100 forprefix: forstart elist SEMICOLON M expression SEMICOLON .

    $default  reduce using rule 100 (forprefix)


state 189

   79 funcdef: funcstart LEFT_PARENTHESIS $@5 idlist RIGHT_PARENTHESIS $@6 block .

    $default  reduce using rule 79 (funcdef)


state 190

  102 forstmt: forprefix N elist RIGHT_PARENTHESIS N statement N .

    $default  reduce using rule 102 (forstmt)
