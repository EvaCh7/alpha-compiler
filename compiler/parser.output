State 104 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 $@1: /* empty */

    3 statements: statements $@1 statement
    4           | /* empty */

    5 statement: expression SEMICOLON
    6          | ifstmt
    7          | whilestmt
    8          | forstmt
    9          | returnstmt
   10          | BREAK SEMICOLON
   11          | CONTINUE SEMICOLON
   12          | block
   13          | funcdef
   14          | SEMICOLON

   15 expression: assignexpr
   16           | expression PLUS expression
   17           | expression MINUS expression
   18           | expression MULT expression
   19           | expression DIV expression
   20           | expression MOD expression
   21           | expression GREATER_THAN expression
   22           | expression GREATER_OR_EQUAL expression
   23           | expression LESS_THAN expression
   24           | expression LESS_OR_EQUAL expression
   25           | expression EQUALS_EQUALS expression
   26           | expression NOT_EQUALS expression
   27           | expression AND M expression
   28           | expression OR M expression
   29           | term

   30 M: /* empty */

   31 term: LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
   32     | UMINUS expression
   33     | NOT expression
   34     | PLUS_PLUS lvalue
   35     | lvalue PLUS_PLUS
   36     | MINUS_MINUS lvalue
   37     | lvalue MINUS_MINUS
   38     | primary

   39 $@2: /* empty */

   40 assignexpr: lvalue $@2 EQUALS expression

   41 primary: lvalue
   42        | call
   43        | objectdef
   44        | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS
   45        | const

   46 lvalue: ID
   47       | LOCAL ID
   48       | DOUBLE_COLON ID
   49       | member

   50 member: lvalue DOT ID
   51       | lvalue LEFT_BRACE expression RIGHT_BRACE
   52       | call DOT ID
   53       | call LEFT_BRACE expression RIGHT_BRACE

   54 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS
   55     | lvalue callsuffix
   56     | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   57 callsuffix: normcall
   58           | methodcall

   59 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   60 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   61 elist: expression
   62      | expression COMMA elist
   63      | /* empty */

   64 objectdef: LEFT_BRACE elist RIGHT_BRACE
   65          | LEFT_BRACE indexed RIGHT_BRACE

   66 indexed: indexedelem
   67        | indexedelem COMMA indexed

   68 indexedelem: LEFT_BRACKET expression COLON expression RIGHT_BRACKET

   69 block: blockstart blockend
   70      | blockstart blockstmt blockend

   71 blockstart: LEFT_BRACKET

   72 blockend: RIGHT_BRACKET

   73 blockstmt: statement
   74          | statement blockstmt

   75 $@3: /* empty */

   76 $@4: /* empty */

   77 funcdef: funcstart LEFT_PARENTHESIS $@3 idlist RIGHT_PARENTHESIS $@4 block

   78 funcstart: FUNCTION ID
   79          | FUNCTION

   80 const: NUM
   81      | STRING
   82      | NIL
   83      | TRUE
   84      | FALSE

   85 idlist: arg
   86       | arg COMMA idlist
   87       | /* empty */

   88 arg: ID

   89 ifstmt: ifprefix statement
   90       | ifprefix statement ELSE statement

   91 $@5: /* empty */

   92 ifprefix: IF LEFT_PARENTHESIS $@5 expression RIGHT_PARENTHESIS

   93 whilestmt: whilestart expression RIGHT_PARENTHESIS statement

   94 whilestart: WHILE LEFT_PARENTHESIS

   95 forstmt: forstart elist SEMICOLON expression SEMICOLON elist RIGHT_PARENTHESIS statement

   96 forstart: FOR LEFT_PARENTHESIS

   97 returnstmt: RETURN SEMICOLON
   98           | RETURN expression SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
NUM (258) 80
ID (259) 46 47 48 50 52 60 78 88
STRING (260) 81
IF (261) 92
ELSE (262) 90
WHILE (263) 94
FOR (264) 96
FUNCTION (265) 78 79
RETURN (266) 97 98
BREAK (267) 10
CONTINUE (268) 11
AND (269) 27
NOT (270) 33
OR (271) 28
LOCAL (272) 47
TRUE (273) 83
FALSE (274) 84
NIL (275) 82
LEFT_BRACE (276) 51 53 64 65
RIGHT_BRACE (277) 51 53 64 65
LEFT_BRACKET (278) 68 71
RIGHT_BRACKET (279) 68 72
LEFT_PARENTHESIS (280) 31 44 54 56 59 60 77 92 94 96
RIGHT_PARENTHESIS (281) 31 44 54 56 59 60 77 92 93 95
SEMICOLON (282) 5 10 11 14 95 97 98
COMMA (283) 62 67 86
COLON (284) 68
DOUBLE_COLON (285) 48
DOT (286) 50 52
DOUBLE_DOT (287) 60
EQUALS (288) 40
PLUS (289) 16
MINUS (290) 17
MULT (291) 18
DIV (292) 19
MOD (293) 20
EQUALS_EQUALS (294) 25
NOT_EQUALS (295) 26
PLUS_PLUS (296) 34 35
MINUS_MINUS (297) 36 37
GREATER_THAN (298) 21
LESS_THAN (299) 23
GREATER_OR_EQUAL (300) 22
LESS_OR_EQUAL (301) 24
UMINUS (302) 32


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
program (49)
    on left: 1, on right: 0
statements (50)
    on left: 3 4, on right: 1 3
$@1 (51)
    on left: 2, on right: 3
statement (52)
    on left: 5 6 7 8 9 10 11 12 13 14, on right: 3 73 74 89 90 93 95
expression (53)
    on left: 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29, on right:
    5 16 17 18 19 20 21 22 23 24 25 26 27 28 31 32 33 40 51 53 61 62
    68 92 93 95 98
M (54)
    on left: 30, on right: 27 28
term (55)
    on left: 31 32 33 34 35 36 37 38, on right: 29
assignexpr (56)
    on left: 40, on right: 15
$@2 (57)
    on left: 39, on right: 40
primary (58)
    on left: 41 42 43 44 45, on right: 38
lvalue (59)
    on left: 46 47 48 49, on right: 34 35 36 37 40 41 50 51 55
member (60)
    on left: 50 51 52 53, on right: 49
call (61)
    on left: 54 55 56, on right: 42 52 53 54
callsuffix (62)
    on left: 57 58, on right: 55
normcall (63)
    on left: 59, on right: 57
methodcall (64)
    on left: 60, on right: 58
elist (65)
    on left: 61 62 63, on right: 54 56 59 60 62 64 95
objectdef (66)
    on left: 64 65, on right: 43
indexed (67)
    on left: 66 67, on right: 65 67
indexedelem (68)
    on left: 68, on right: 66 67
block (69)
    on left: 69 70, on right: 12 77
blockstart (70)
    on left: 71, on right: 69 70
blockend (71)
    on left: 72, on right: 69 70
blockstmt (72)
    on left: 73 74, on right: 70 74
funcdef (73)
    on left: 77, on right: 13 44 56
$@3 (74)
    on left: 75, on right: 77
$@4 (75)
    on left: 76, on right: 77
funcstart (76)
    on left: 78 79, on right: 77
const (77)
    on left: 80 81 82 83 84, on right: 45
idlist (78)
    on left: 85 86 87, on right: 77 86
arg (79)
    on left: 88, on right: 85 86
ifstmt (80)
    on left: 89 90, on right: 6
ifprefix (81)
    on left: 92, on right: 89 90
$@5 (82)
    on left: 91, on right: 92
whilestmt (83)
    on left: 93, on right: 7
whilestart (84)
    on left: 94, on right: 93
forstmt (85)
    on left: 95, on right: 8
forstart (86)
    on left: 96, on right: 95
returnstmt (87)
    on left: 97 98, on right: 9


state 0

    0 $accept: . program $end

    $default  reduce using rule 4 (statements)

    program     go to state 1
    statements  go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    1 program: statements .
    3 statements: statements . $@1 statement

    $end      reduce using rule 1 (program)
    $default  reduce using rule 2 ($@1)

    $@1  go to state 4


state 3

    0 $accept: program $end .

    $default  accept


state 4

    3 statements: statements $@1 . statement

    NUM               shift, and go to state 5
    ID                shift, and go to state 6
    STRING            shift, and go to state 7
    IF                shift, and go to state 8
    WHILE             shift, and go to state 9
    FOR               shift, and go to state 10
    FUNCTION          shift, and go to state 11
    RETURN            shift, and go to state 12
    BREAK             shift, and go to state 13
    CONTINUE          shift, and go to state 14
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    SEMICOLON         shift, and go to state 23
    DOUBLE_COLON      shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26
    UMINUS            shift, and go to state 27

    statement   go to state 28
    expression  go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    blockstart  go to state 38
    funcdef     go to state 39
    funcstart   go to state 40
    const       go to state 41
    ifstmt      go to state 42
    ifprefix    go to state 43
    whilestmt   go to state 44
    whilestart  go to state 45
    forstmt     go to state 46
    forstart    go to state 47
    returnstmt  go to state 48


state 5

   80 const: NUM .

    $default  reduce using rule 80 (const)


state 6

   46 lvalue: ID .

    $default  reduce using rule 46 (lvalue)


state 7

   81 const: STRING .

    $default  reduce using rule 81 (const)


state 8

   92 ifprefix: IF . LEFT_PARENTHESIS $@5 expression RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 49


state 9

   94 whilestart: WHILE . LEFT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 50


state 10

   96 forstart: FOR . LEFT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 51


state 11

   78 funcstart: FUNCTION . ID
   79          | FUNCTION .

    ID  shift, and go to state 52

    $default  reduce using rule 79 (funcstart)


state 12

   97 returnstmt: RETURN . SEMICOLON
   98           | RETURN . expression SEMICOLON

    NUM               shift, and go to state 5
    ID                shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    SEMICOLON         shift, and go to state 53
    DOUBLE_COLON      shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26
    UMINUS            shift, and go to state 27

    expression  go to state 54
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 41


state 13

   10 statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 55


state 14

   11 statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 56


state 15

   33 term: NOT . expression

    NUM               shift, and go to state 5
    ID                shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26
    UMINUS            shift, and go to state 27

    expression  go to state 57
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 41


state 16

   47 lvalue: LOCAL . ID

    ID  shift, and go to state 58


state 17

   83 const: TRUE .

    $default  reduce using rule 83 (const)


state 18

   84 const: FALSE .

    $default  reduce using rule 84 (const)


state 19

   82 const: NIL .

    $default  reduce using rule 82 (const)


state 20

   64 objectdef: LEFT_BRACE . elist RIGHT_BRACE
   65          | LEFT_BRACE . indexed RIGHT_BRACE

    NUM               shift, and go to state 5
    ID                shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    LEFT_BRACKET      shift, and go to state 59
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26
    UMINUS            shift, and go to state 27

    $default  reduce using rule 63 (elist)

    expression   go to state 60
    term         go to state 30
    assignexpr   go to state 31
    primary      go to state 32
    lvalue       go to state 33
    member       go to state 34
    call         go to state 35
    elist        go to state 61
    objectdef    go to state 36
    indexed      go to state 62
    indexedelem  go to state 63
    const        go to state 41


state 21

   71 blockstart: LEFT_BRACKET .

    $default  reduce using rule 71 (blockstart)


state 22

   31 term: LEFT_PARENTHESIS . expression RIGHT_PARENTHESIS
   44 primary: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS
   56 call: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    NUM               shift, and go to state 5
    ID                shift, and go to state 6
    STRING            shift, and go to state 7
    FUNCTION          shift, and go to state 11
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26
    UMINUS            shift, and go to state 27

    expression  go to state 64
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    funcdef     go to state 65
    funcstart   go to state 40
    const       go to state 41


state 23

   14 statement: SEMICOLON .

    $default  reduce using rule 14 (statement)


state 24

   48 lvalue: DOUBLE_COLON . ID

    ID  shift, and go to state 66


state 25

   34 term: PLUS_PLUS . lvalue

    ID                shift, and go to state 6
    LOCAL             shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 67
    DOUBLE_COLON      shift, and go to state 24

    lvalue  go to state 68
    member  go to state 34
    call    go to state 69


state 26

   36 term: MINUS_MINUS . lvalue

    ID                shift, and go to state 6
    LOCAL             shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 67
    DOUBLE_COLON      shift, and go to state 24

    lvalue  go to state 70
    member  go to state 34
    call    go to state 69


state 27

   32 term: UMINUS . expression

    NUM               shift, and go to state 5
    ID                shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26
    UMINUS            shift, and go to state 27

    expression  go to state 71
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 41


state 28

    3 statements: statements $@1 statement .

    $default  reduce using rule 3 (statements)


state 29

    5 statement: expression . SEMICOLON
   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   27           | expression . AND M expression
   28           | expression . OR M expression

    AND               shift, and go to state 72
    OR                shift, and go to state 73
    SEMICOLON         shift, and go to state 74
    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS_EQUALS     shift, and go to state 80
    NOT_EQUALS        shift, and go to state 81
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85


state 30

   29 expression: term .

    $default  reduce using rule 29 (expression)


state 31

   15 expression: assignexpr .

    $default  reduce using rule 15 (expression)


state 32

   38 term: primary .

    $default  reduce using rule 38 (term)


state 33

   35 term: lvalue . PLUS_PLUS
   37     | lvalue . MINUS_MINUS
   40 assignexpr: lvalue . $@2 EQUALS expression
   41 primary: lvalue .
   50 member: lvalue . DOT ID
   51       | lvalue . LEFT_BRACE expression RIGHT_BRACE
   55 call: lvalue . callsuffix

    LEFT_BRACE        shift, and go to state 86
    LEFT_PARENTHESIS  shift, and go to state 87
    DOT               shift, and go to state 88
    DOUBLE_DOT        shift, and go to state 89
    PLUS_PLUS         shift, and go to state 90
    MINUS_MINUS       shift, and go to state 91

    EQUALS    reduce using rule 39 ($@2)
    $default  reduce using rule 41 (primary)

    $@2         go to state 92
    callsuffix  go to state 93
    normcall    go to state 94
    methodcall  go to state 95


state 34

   49 lvalue: member .

    $default  reduce using rule 49 (lvalue)


state 35

   42 primary: call .
   52 member: call . DOT ID
   53       | call . LEFT_BRACE expression RIGHT_BRACE
   54 call: call . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_BRACE        shift, and go to state 96
    LEFT_PARENTHESIS  shift, and go to state 97
    DOT               shift, and go to state 98

    $default  reduce using rule 42 (primary)


state 36

   43 primary: objectdef .

    $default  reduce using rule 43 (primary)


state 37

   12 statement: block .

    $default  reduce using rule 12 (statement)


state 38

   69 block: blockstart . blockend
   70      | blockstart . blockstmt blockend

    NUM               shift, and go to state 5
    ID                shift, and go to state 6
    STRING            shift, and go to state 7
    IF                shift, and go to state 8
    WHILE             shift, and go to state 9
    FOR               shift, and go to state 10
    FUNCTION          shift, and go to state 11
    RETURN            shift, and go to state 12
    BREAK             shift, and go to state 13
    CONTINUE          shift, and go to state 14
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    LEFT_BRACKET      shift, and go to state 21
    RIGHT_BRACKET     shift, and go to state 99
    LEFT_PARENTHESIS  shift, and go to state 22
    SEMICOLON         shift, and go to state 23
    DOUBLE_COLON      shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26
    UMINUS            shift, and go to state 27

    statement   go to state 100
    expression  go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    blockstart  go to state 38
    blockend    go to state 101
    blockstmt   go to state 102
    funcdef     go to state 39
    funcstart   go to state 40
    const       go to state 41
    ifstmt      go to state 42
    ifprefix    go to state 43
    whilestmt   go to state 44
    whilestart  go to state 45
    forstmt     go to state 46
    forstart    go to state 47
    returnstmt  go to state 48


state 39

   13 statement: funcdef .

    $default  reduce using rule 13 (statement)


state 40

   77 funcdef: funcstart . LEFT_PARENTHESIS $@3 idlist RIGHT_PARENTHESIS $@4 block

    LEFT_PARENTHESIS  shift, and go to state 103


state 41

   45 primary: const .

    $default  reduce using rule 45 (primary)


state 42

    6 statement: ifstmt .

    $default  reduce using rule 6 (statement)


state 43

   89 ifstmt: ifprefix . statement
   90       | ifprefix . statement ELSE statement

    NUM               shift, and go to state 5
    ID                shift, and go to state 6
    STRING            shift, and go to state 7
    IF                shift, and go to state 8
    WHILE             shift, and go to state 9
    FOR               shift, and go to state 10
    FUNCTION          shift, and go to state 11
    RETURN            shift, and go to state 12
    BREAK             shift, and go to state 13
    CONTINUE          shift, and go to state 14
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    SEMICOLON         shift, and go to state 23
    DOUBLE_COLON      shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26
    UMINUS            shift, and go to state 27

    statement   go to state 104
    expression  go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    blockstart  go to state 38
    funcdef     go to state 39
    funcstart   go to state 40
    const       go to state 41
    ifstmt      go to state 42
    ifprefix    go to state 43
    whilestmt   go to state 44
    whilestart  go to state 45
    forstmt     go to state 46
    forstart    go to state 47
    returnstmt  go to state 48


state 44

    7 statement: whilestmt .

    $default  reduce using rule 7 (statement)


state 45

   93 whilestmt: whilestart . expression RIGHT_PARENTHESIS statement

    NUM               shift, and go to state 5
    ID                shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26
    UMINUS            shift, and go to state 27

    expression  go to state 105
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 41


state 46

    8 statement: forstmt .

    $default  reduce using rule 8 (statement)


state 47

   95 forstmt: forstart . elist SEMICOLON expression SEMICOLON elist RIGHT_PARENTHESIS statement

    NUM               shift, and go to state 5
    ID                shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26
    UMINUS            shift, and go to state 27

    $default  reduce using rule 63 (elist)

    expression  go to state 60
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 106
    objectdef   go to state 36
    const       go to state 41


state 48

    9 statement: returnstmt .

    $default  reduce using rule 9 (statement)


state 49

   92 ifprefix: IF LEFT_PARENTHESIS . $@5 expression RIGHT_PARENTHESIS

    $default  reduce using rule 91 ($@5)

    $@5  go to state 107


state 50

   94 whilestart: WHILE LEFT_PARENTHESIS .

    $default  reduce using rule 94 (whilestart)


state 51

   96 forstart: FOR LEFT_PARENTHESIS .

    $default  reduce using rule 96 (forstart)


state 52

   78 funcstart: FUNCTION ID .

    $default  reduce using rule 78 (funcstart)


state 53

   97 returnstmt: RETURN SEMICOLON .

    $default  reduce using rule 97 (returnstmt)


state 54

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   27           | expression . AND M expression
   28           | expression . OR M expression
   98 returnstmt: RETURN expression . SEMICOLON

    AND               shift, and go to state 72
    OR                shift, and go to state 73
    SEMICOLON         shift, and go to state 108
    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS_EQUALS     shift, and go to state 80
    NOT_EQUALS        shift, and go to state 81
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85


state 55

   10 statement: BREAK SEMICOLON .

    $default  reduce using rule 10 (statement)


state 56

   11 statement: CONTINUE SEMICOLON .

    $default  reduce using rule 11 (statement)


state 57

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   27           | expression . AND M expression
   28           | expression . OR M expression
   33 term: NOT expression .

    $default  reduce using rule 33 (term)


state 58

   47 lvalue: LOCAL ID .

    $default  reduce using rule 47 (lvalue)


state 59

   68 indexedelem: LEFT_BRACKET . expression COLON expression RIGHT_BRACKET

    NUM               shift, and go to state 5
    ID                shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26
    UMINUS            shift, and go to state 27

    expression  go to state 109
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 41


state 60

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   27           | expression . AND M expression
   28           | expression . OR M expression
   61 elist: expression .
   62      | expression . COMMA elist

    AND               shift, and go to state 72
    OR                shift, and go to state 73
    COMMA             shift, and go to state 110
    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS_EQUALS     shift, and go to state 80
    NOT_EQUALS        shift, and go to state 81
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85

    $default  reduce using rule 61 (elist)


state 61

   64 objectdef: LEFT_BRACE elist . RIGHT_BRACE

    RIGHT_BRACE  shift, and go to state 111


state 62

   65 objectdef: LEFT_BRACE indexed . RIGHT_BRACE

    RIGHT_BRACE  shift, and go to state 112


state 63

   66 indexed: indexedelem .
   67        | indexedelem . COMMA indexed

    COMMA  shift, and go to state 113

    $default  reduce using rule 66 (indexed)


state 64

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   27           | expression . AND M expression
   28           | expression . OR M expression
   31 term: LEFT_PARENTHESIS expression . RIGHT_PARENTHESIS

    AND                shift, and go to state 72
    OR                 shift, and go to state 73
    RIGHT_PARENTHESIS  shift, and go to state 114
    PLUS               shift, and go to state 75
    MINUS              shift, and go to state 76
    MULT               shift, and go to state 77
    DIV                shift, and go to state 78
    MOD                shift, and go to state 79
    EQUALS_EQUALS      shift, and go to state 80
    NOT_EQUALS         shift, and go to state 81
    GREATER_THAN       shift, and go to state 82
    LESS_THAN          shift, and go to state 83
    GREATER_OR_EQUAL   shift, and go to state 84
    LESS_OR_EQUAL      shift, and go to state 85


state 65

   44 primary: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS
   56 call: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 115


state 66

   48 lvalue: DOUBLE_COLON ID .

    $default  reduce using rule 48 (lvalue)


state 67

   56 call: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    FUNCTION  shift, and go to state 11

    funcdef    go to state 116
    funcstart  go to state 40


state 68

   34 term: PLUS_PLUS lvalue .
   50 member: lvalue . DOT ID
   51       | lvalue . LEFT_BRACE expression RIGHT_BRACE
   55 call: lvalue . callsuffix

    LEFT_BRACE        shift, and go to state 86
    LEFT_PARENTHESIS  shift, and go to state 87
    DOT               shift, and go to state 88
    DOUBLE_DOT        shift, and go to state 89

    $default  reduce using rule 34 (term)

    callsuffix  go to state 93
    normcall    go to state 94
    methodcall  go to state 95


state 69

   52 member: call . DOT ID
   53       | call . LEFT_BRACE expression RIGHT_BRACE
   54 call: call . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_BRACE        shift, and go to state 96
    LEFT_PARENTHESIS  shift, and go to state 97
    DOT               shift, and go to state 98


state 70

   36 term: MINUS_MINUS lvalue .
   50 member: lvalue . DOT ID
   51       | lvalue . LEFT_BRACE expression RIGHT_BRACE
   55 call: lvalue . callsuffix

    LEFT_BRACE        shift, and go to state 86
    LEFT_PARENTHESIS  shift, and go to state 87
    DOT               shift, and go to state 88
    DOUBLE_DOT        shift, and go to state 89

    $default  reduce using rule 36 (term)

    callsuffix  go to state 93
    normcall    go to state 94
    methodcall  go to state 95


state 71

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   27           | expression . AND M expression
   28           | expression . OR M expression
   32 term: UMINUS expression .

    $default  reduce using rule 32 (term)


state 72

   27 expression: expression AND . M expression

    $default  reduce using rule 30 (M)

    M  go to state 117


state 73

   28 expression: expression OR . M expression

    $default  reduce using rule 30 (M)

    M  go to state 118


state 74

    5 statement: expression SEMICOLON .

    $default  reduce using rule 5 (statement)


state 75

   16 expression: expression PLUS . expression

    NUM               shift, and go to state 5
    ID                shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26
    UMINUS            shift, and go to state 27

    expression  go to state 119
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 41


state 76

   17 expression: expression MINUS . expression

    NUM               shift, and go to state 5
    ID                shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26
    UMINUS            shift, and go to state 27

    expression  go to state 120
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 41


state 77

   18 expression: expression MULT . expression

    NUM               shift, and go to state 5
    ID                shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26
    UMINUS            shift, and go to state 27

    expression  go to state 121
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 41


state 78

   19 expression: expression DIV . expression

    NUM               shift, and go to state 5
    ID                shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26
    UMINUS            shift, and go to state 27

    expression  go to state 122
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 41


state 79

   20 expression: expression MOD . expression

    NUM               shift, and go to state 5
    ID                shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26
    UMINUS            shift, and go to state 27

    expression  go to state 123
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 41


state 80

   25 expression: expression EQUALS_EQUALS . expression

    NUM               shift, and go to state 5
    ID                shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26
    UMINUS            shift, and go to state 27

    expression  go to state 124
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 41


state 81

   26 expression: expression NOT_EQUALS . expression

    NUM               shift, and go to state 5
    ID                shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26
    UMINUS            shift, and go to state 27

    expression  go to state 125
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 41


state 82

   21 expression: expression GREATER_THAN . expression

    NUM               shift, and go to state 5
    ID                shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26
    UMINUS            shift, and go to state 27

    expression  go to state 126
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 41


state 83

   23 expression: expression LESS_THAN . expression

    NUM               shift, and go to state 5
    ID                shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26
    UMINUS            shift, and go to state 27

    expression  go to state 127
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 41


state 84

   22 expression: expression GREATER_OR_EQUAL . expression

    NUM               shift, and go to state 5
    ID                shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26
    UMINUS            shift, and go to state 27

    expression  go to state 128
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 41


state 85

   24 expression: expression LESS_OR_EQUAL . expression

    NUM               shift, and go to state 5
    ID                shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26
    UMINUS            shift, and go to state 27

    expression  go to state 129
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 41


state 86

   51 member: lvalue LEFT_BRACE . expression RIGHT_BRACE

    NUM               shift, and go to state 5
    ID                shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26
    UMINUS            shift, and go to state 27

    expression  go to state 130
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 41


state 87

   59 normcall: LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    NUM               shift, and go to state 5
    ID                shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26
    UMINUS            shift, and go to state 27

    $default  reduce using rule 63 (elist)

    expression  go to state 60
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 131
    objectdef   go to state 36
    const       go to state 41


state 88

   50 member: lvalue DOT . ID

    ID  shift, and go to state 132


state 89

   60 methodcall: DOUBLE_DOT . ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    ID  shift, and go to state 133


state 90

   35 term: lvalue PLUS_PLUS .

    $default  reduce using rule 35 (term)


state 91

   37 term: lvalue MINUS_MINUS .

    $default  reduce using rule 37 (term)


state 92

   40 assignexpr: lvalue $@2 . EQUALS expression

    EQUALS  shift, and go to state 134


state 93

   55 call: lvalue callsuffix .

    $default  reduce using rule 55 (call)


state 94

   57 callsuffix: normcall .

    $default  reduce using rule 57 (callsuffix)


state 95

   58 callsuffix: methodcall .

    $default  reduce using rule 58 (callsuffix)


state 96

   53 member: call LEFT_BRACE . expression RIGHT_BRACE

    NUM               shift, and go to state 5
    ID                shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26
    UMINUS            shift, and go to state 27

    expression  go to state 135
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 41


state 97

   54 call: call LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    NUM               shift, and go to state 5
    ID                shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26
    UMINUS            shift, and go to state 27

    $default  reduce using rule 63 (elist)

    expression  go to state 60
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 136
    objectdef   go to state 36
    const       go to state 41


state 98

   52 member: call DOT . ID

    ID  shift, and go to state 137


state 99

   72 blockend: RIGHT_BRACKET .

    $default  reduce using rule 72 (blockend)


state 100

   73 blockstmt: statement .
   74          | statement . blockstmt

    NUM               shift, and go to state 5
    ID                shift, and go to state 6
    STRING            shift, and go to state 7
    IF                shift, and go to state 8
    WHILE             shift, and go to state 9
    FOR               shift, and go to state 10
    FUNCTION          shift, and go to state 11
    RETURN            shift, and go to state 12
    BREAK             shift, and go to state 13
    CONTINUE          shift, and go to state 14
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    SEMICOLON         shift, and go to state 23
    DOUBLE_COLON      shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26
    UMINUS            shift, and go to state 27

    $default  reduce using rule 73 (blockstmt)

    statement   go to state 100
    expression  go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    blockstart  go to state 38
    blockstmt   go to state 138
    funcdef     go to state 39
    funcstart   go to state 40
    const       go to state 41
    ifstmt      go to state 42
    ifprefix    go to state 43
    whilestmt   go to state 44
    whilestart  go to state 45
    forstmt     go to state 46
    forstart    go to state 47
    returnstmt  go to state 48


state 101

   69 block: blockstart blockend .

    $default  reduce using rule 69 (block)


state 102

   70 block: blockstart blockstmt . blockend

    RIGHT_BRACKET  shift, and go to state 99

    blockend  go to state 139


state 103

   77 funcdef: funcstart LEFT_PARENTHESIS . $@3 idlist RIGHT_PARENTHESIS $@4 block

    $default  reduce using rule 75 ($@3)

    $@3  go to state 140


state 104

   89 ifstmt: ifprefix statement .
   90       | ifprefix statement . ELSE statement

    ELSE  shift, and go to state 141

    ELSE      [reduce using rule 89 (ifstmt)]
    $default  reduce using rule 89 (ifstmt)


state 105

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   27           | expression . AND M expression
   28           | expression . OR M expression
   93 whilestmt: whilestart expression . RIGHT_PARENTHESIS statement

    AND                shift, and go to state 72
    OR                 shift, and go to state 73
    RIGHT_PARENTHESIS  shift, and go to state 142
    PLUS               shift, and go to state 75
    MINUS              shift, and go to state 76
    MULT               shift, and go to state 77
    DIV                shift, and go to state 78
    MOD                shift, and go to state 79
    EQUALS_EQUALS      shift, and go to state 80
    NOT_EQUALS         shift, and go to state 81
    GREATER_THAN       shift, and go to state 82
    LESS_THAN          shift, and go to state 83
    GREATER_OR_EQUAL   shift, and go to state 84
    LESS_OR_EQUAL      shift, and go to state 85


state 106

   95 forstmt: forstart elist . SEMICOLON expression SEMICOLON elist RIGHT_PARENTHESIS statement

    SEMICOLON  shift, and go to state 143


state 107

   92 ifprefix: IF LEFT_PARENTHESIS $@5 . expression RIGHT_PARENTHESIS

    NUM               shift, and go to state 5
    ID                shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26
    UMINUS            shift, and go to state 27

    expression  go to state 144
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 41


state 108

   98 returnstmt: RETURN expression SEMICOLON .

    $default  reduce using rule 98 (returnstmt)


state 109

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   27           | expression . AND M expression
   28           | expression . OR M expression
   68 indexedelem: LEFT_BRACKET expression . COLON expression RIGHT_BRACKET

    AND               shift, and go to state 72
    OR                shift, and go to state 73
    COLON             shift, and go to state 145
    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS_EQUALS     shift, and go to state 80
    NOT_EQUALS        shift, and go to state 81
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85


state 110

   62 elist: expression COMMA . elist

    NUM               shift, and go to state 5
    ID                shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26
    UMINUS            shift, and go to state 27

    $default  reduce using rule 63 (elist)

    expression  go to state 60
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 146
    objectdef   go to state 36
    const       go to state 41


state 111

   64 objectdef: LEFT_BRACE elist RIGHT_BRACE .

    $default  reduce using rule 64 (objectdef)


state 112

   65 objectdef: LEFT_BRACE indexed RIGHT_BRACE .

    $default  reduce using rule 65 (objectdef)


state 113

   67 indexed: indexedelem COMMA . indexed

    LEFT_BRACKET  shift, and go to state 59

    indexed      go to state 147
    indexedelem  go to state 63


state 114

   31 term: LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .

    $default  reduce using rule 31 (term)


state 115

   44 primary: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS .
   56 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 148

    $default  reduce using rule 44 (primary)


state 116

   56 call: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 149


state 117

   27 expression: expression AND M . expression

    NUM               shift, and go to state 5
    ID                shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26
    UMINUS            shift, and go to state 27

    expression  go to state 150
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 41


state 118

   28 expression: expression OR M . expression

    NUM               shift, and go to state 5
    ID                shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26
    UMINUS            shift, and go to state 27

    expression  go to state 151
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 41


state 119

   16 expression: expression . PLUS expression
   16           | expression PLUS expression .
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   27           | expression . AND M expression
   28           | expression . OR M expression

    MULT  shift, and go to state 77
    DIV   shift, and go to state 78
    MOD   shift, and go to state 79

    $default  reduce using rule 16 (expression)


state 120

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   17           | expression MINUS expression .
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   27           | expression . AND M expression
   28           | expression . OR M expression

    MULT  shift, and go to state 77
    DIV   shift, and go to state 78
    MOD   shift, and go to state 79

    $default  reduce using rule 17 (expression)


state 121

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   18           | expression MULT expression .
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   27           | expression . AND M expression
   28           | expression . OR M expression

    $default  reduce using rule 18 (expression)


state 122

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   19           | expression DIV expression .
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   27           | expression . AND M expression
   28           | expression . OR M expression

    $default  reduce using rule 19 (expression)


state 123

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   20           | expression MOD expression .
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   27           | expression . AND M expression
   28           | expression . OR M expression

    $default  reduce using rule 20 (expression)


state 124

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   25           | expression EQUALS_EQUALS expression .
   26           | expression . NOT_EQUALS expression
   27           | expression . AND M expression
   28           | expression . OR M expression

    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85

    EQUALS_EQUALS  error (nonassociative)
    NOT_EQUALS     error (nonassociative)

    $default  reduce using rule 25 (expression)


state 125

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   26           | expression NOT_EQUALS expression .
   27           | expression . AND M expression
   28           | expression . OR M expression

    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85

    EQUALS_EQUALS  error (nonassociative)
    NOT_EQUALS     error (nonassociative)

    $default  reduce using rule 26 (expression)


state 126

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   21           | expression GREATER_THAN expression .
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   27           | expression . AND M expression
   28           | expression . OR M expression

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    MULT   shift, and go to state 77
    DIV    shift, and go to state 78
    MOD    shift, and go to state 79

    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)

    $default  reduce using rule 21 (expression)


state 127

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   23           | expression LESS_THAN expression .
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   27           | expression . AND M expression
   28           | expression . OR M expression

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    MULT   shift, and go to state 77
    DIV    shift, and go to state 78
    MOD    shift, and go to state 79

    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)

    $default  reduce using rule 23 (expression)


state 128

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   22           | expression GREATER_OR_EQUAL expression .
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   27           | expression . AND M expression
   28           | expression . OR M expression

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    MULT   shift, and go to state 77
    DIV    shift, and go to state 78
    MOD    shift, and go to state 79

    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)

    $default  reduce using rule 22 (expression)


state 129

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   24           | expression LESS_OR_EQUAL expression .
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   27           | expression . AND M expression
   28           | expression . OR M expression

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    MULT   shift, and go to state 77
    DIV    shift, and go to state 78
    MOD    shift, and go to state 79

    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)

    $default  reduce using rule 24 (expression)


state 130

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   27           | expression . AND M expression
   28           | expression . OR M expression
   51 member: lvalue LEFT_BRACE expression . RIGHT_BRACE

    AND               shift, and go to state 72
    OR                shift, and go to state 73
    RIGHT_BRACE       shift, and go to state 152
    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS_EQUALS     shift, and go to state 80
    NOT_EQUALS        shift, and go to state 81
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85


state 131

   59 normcall: LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 153


state 132

   50 member: lvalue DOT ID .

    $default  reduce using rule 50 (member)


state 133

   60 methodcall: DOUBLE_DOT ID . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 154


state 134

   40 assignexpr: lvalue $@2 EQUALS . expression

    NUM               shift, and go to state 5
    ID                shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26
    UMINUS            shift, and go to state 27

    expression  go to state 155
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 41


state 135

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   27           | expression . AND M expression
   28           | expression . OR M expression
   53 member: call LEFT_BRACE expression . RIGHT_BRACE

    AND               shift, and go to state 72
    OR                shift, and go to state 73
    RIGHT_BRACE       shift, and go to state 156
    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS_EQUALS     shift, and go to state 80
    NOT_EQUALS        shift, and go to state 81
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85


state 136

   54 call: call LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 157


state 137

   52 member: call DOT ID .

    $default  reduce using rule 52 (member)


state 138

   74 blockstmt: statement blockstmt .

    $default  reduce using rule 74 (blockstmt)


state 139

   70 block: blockstart blockstmt blockend .

    $default  reduce using rule 70 (block)


state 140

   77 funcdef: funcstart LEFT_PARENTHESIS $@3 . idlist RIGHT_PARENTHESIS $@4 block

    ID  shift, and go to state 158

    $default  reduce using rule 87 (idlist)

    idlist  go to state 159
    arg     go to state 160


state 141

   90 ifstmt: ifprefix statement ELSE . statement

    NUM               shift, and go to state 5
    ID                shift, and go to state 6
    STRING            shift, and go to state 7
    IF                shift, and go to state 8
    WHILE             shift, and go to state 9
    FOR               shift, and go to state 10
    FUNCTION          shift, and go to state 11
    RETURN            shift, and go to state 12
    BREAK             shift, and go to state 13
    CONTINUE          shift, and go to state 14
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    SEMICOLON         shift, and go to state 23
    DOUBLE_COLON      shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26
    UMINUS            shift, and go to state 27

    statement   go to state 161
    expression  go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    blockstart  go to state 38
    funcdef     go to state 39
    funcstart   go to state 40
    const       go to state 41
    ifstmt      go to state 42
    ifprefix    go to state 43
    whilestmt   go to state 44
    whilestart  go to state 45
    forstmt     go to state 46
    forstart    go to state 47
    returnstmt  go to state 48


state 142

   93 whilestmt: whilestart expression RIGHT_PARENTHESIS . statement

    NUM               shift, and go to state 5
    ID                shift, and go to state 6
    STRING            shift, and go to state 7
    IF                shift, and go to state 8
    WHILE             shift, and go to state 9
    FOR               shift, and go to state 10
    FUNCTION          shift, and go to state 11
    RETURN            shift, and go to state 12
    BREAK             shift, and go to state 13
    CONTINUE          shift, and go to state 14
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    SEMICOLON         shift, and go to state 23
    DOUBLE_COLON      shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26
    UMINUS            shift, and go to state 27

    statement   go to state 162
    expression  go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    blockstart  go to state 38
    funcdef     go to state 39
    funcstart   go to state 40
    const       go to state 41
    ifstmt      go to state 42
    ifprefix    go to state 43
    whilestmt   go to state 44
    whilestart  go to state 45
    forstmt     go to state 46
    forstart    go to state 47
    returnstmt  go to state 48


state 143

   95 forstmt: forstart elist SEMICOLON . expression SEMICOLON elist RIGHT_PARENTHESIS statement

    NUM               shift, and go to state 5
    ID                shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26
    UMINUS            shift, and go to state 27

    expression  go to state 163
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 41


state 144

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   27           | expression . AND M expression
   28           | expression . OR M expression
   92 ifprefix: IF LEFT_PARENTHESIS $@5 expression . RIGHT_PARENTHESIS

    AND                shift, and go to state 72
    OR                 shift, and go to state 73
    RIGHT_PARENTHESIS  shift, and go to state 164
    PLUS               shift, and go to state 75
    MINUS              shift, and go to state 76
    MULT               shift, and go to state 77
    DIV                shift, and go to state 78
    MOD                shift, and go to state 79
    EQUALS_EQUALS      shift, and go to state 80
    NOT_EQUALS         shift, and go to state 81
    GREATER_THAN       shift, and go to state 82
    LESS_THAN          shift, and go to state 83
    GREATER_OR_EQUAL   shift, and go to state 84
    LESS_OR_EQUAL      shift, and go to state 85


state 145

   68 indexedelem: LEFT_BRACKET expression COLON . expression RIGHT_BRACKET

    NUM               shift, and go to state 5
    ID                shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26
    UMINUS            shift, and go to state 27

    expression  go to state 165
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 41


state 146

   62 elist: expression COMMA elist .

    $default  reduce using rule 62 (elist)


state 147

   67 indexed: indexedelem COMMA indexed .

    $default  reduce using rule 67 (indexed)


state 148

   56 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    NUM               shift, and go to state 5
    ID                shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26
    UMINUS            shift, and go to state 27

    $default  reduce using rule 63 (elist)

    expression  go to state 60
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 166
    objectdef   go to state 36
    const       go to state 41


state 149

   56 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 148


state 150

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   27           | expression . AND M expression
   27           | expression AND M expression .
   28           | expression . OR M expression

    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS_EQUALS     shift, and go to state 80
    NOT_EQUALS        shift, and go to state 81
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85

    $default  reduce using rule 27 (expression)


state 151

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   27           | expression . AND M expression
   28           | expression . OR M expression
   28           | expression OR M expression .

    AND               shift, and go to state 72
    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS_EQUALS     shift, and go to state 80
    NOT_EQUALS        shift, and go to state 81
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85

    $default  reduce using rule 28 (expression)


state 152

   51 member: lvalue LEFT_BRACE expression RIGHT_BRACE .

    $default  reduce using rule 51 (member)


state 153

   59 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 59 (normcall)


state 154

   60 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    NUM               shift, and go to state 5
    ID                shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26
    UMINUS            shift, and go to state 27

    $default  reduce using rule 63 (elist)

    expression  go to state 60
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 167
    objectdef   go to state 36
    const       go to state 41


state 155

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   27           | expression . AND M expression
   28           | expression . OR M expression
   40 assignexpr: lvalue $@2 EQUALS expression .

    AND               shift, and go to state 72
    OR                shift, and go to state 73
    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS_EQUALS     shift, and go to state 80
    NOT_EQUALS        shift, and go to state 81
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85

    $default  reduce using rule 40 (assignexpr)


state 156

   53 member: call LEFT_BRACE expression RIGHT_BRACE .

    $default  reduce using rule 53 (member)


state 157

   54 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 54 (call)


state 158

   88 arg: ID .

    $default  reduce using rule 88 (arg)


state 159

   77 funcdef: funcstart LEFT_PARENTHESIS $@3 idlist . RIGHT_PARENTHESIS $@4 block

    RIGHT_PARENTHESIS  shift, and go to state 168


state 160

   85 idlist: arg .
   86       | arg . COMMA idlist

    COMMA  shift, and go to state 169

    $default  reduce using rule 85 (idlist)


state 161

   90 ifstmt: ifprefix statement ELSE statement .

    $default  reduce using rule 90 (ifstmt)


state 162

   93 whilestmt: whilestart expression RIGHT_PARENTHESIS statement .

    $default  reduce using rule 93 (whilestmt)


state 163

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   27           | expression . AND M expression
   28           | expression . OR M expression
   95 forstmt: forstart elist SEMICOLON expression . SEMICOLON elist RIGHT_PARENTHESIS statement

    AND               shift, and go to state 72
    OR                shift, and go to state 73
    SEMICOLON         shift, and go to state 170
    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS_EQUALS     shift, and go to state 80
    NOT_EQUALS        shift, and go to state 81
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85


state 164

   92 ifprefix: IF LEFT_PARENTHESIS $@5 expression RIGHT_PARENTHESIS .

    $default  reduce using rule 92 (ifprefix)


state 165

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULT expression
   19           | expression . DIV expression
   20           | expression . MOD expression
   21           | expression . GREATER_THAN expression
   22           | expression . GREATER_OR_EQUAL expression
   23           | expression . LESS_THAN expression
   24           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS expression
   26           | expression . NOT_EQUALS expression
   27           | expression . AND M expression
   28           | expression . OR M expression
   68 indexedelem: LEFT_BRACKET expression COLON expression . RIGHT_BRACKET

    AND               shift, and go to state 72
    OR                shift, and go to state 73
    RIGHT_BRACKET     shift, and go to state 171
    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS_EQUALS     shift, and go to state 80
    NOT_EQUALS        shift, and go to state 81
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85


state 166

   56 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 172


state 167

   60 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 173


state 168

   77 funcdef: funcstart LEFT_PARENTHESIS $@3 idlist RIGHT_PARENTHESIS . $@4 block

    $default  reduce using rule 76 ($@4)

    $@4  go to state 174


state 169

   86 idlist: arg COMMA . idlist

    ID  shift, and go to state 158

    $default  reduce using rule 87 (idlist)

    idlist  go to state 175
    arg     go to state 160


state 170

   95 forstmt: forstart elist SEMICOLON expression SEMICOLON . elist RIGHT_PARENTHESIS statement

    NUM               shift, and go to state 5
    ID                shift, and go to state 6
    STRING            shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26
    UMINUS            shift, and go to state 27

    $default  reduce using rule 63 (elist)

    expression  go to state 60
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 176
    objectdef   go to state 36
    const       go to state 41


state 171

   68 indexedelem: LEFT_BRACKET expression COLON expression RIGHT_BRACKET .

    $default  reduce using rule 68 (indexedelem)


state 172

   56 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 56 (call)


state 173

   60 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 60 (methodcall)


state 174

   77 funcdef: funcstart LEFT_PARENTHESIS $@3 idlist RIGHT_PARENTHESIS $@4 . block

    LEFT_BRACKET  shift, and go to state 21

    block       go to state 177
    blockstart  go to state 38


state 175

   86 idlist: arg COMMA idlist .

    $default  reduce using rule 86 (idlist)


state 176

   95 forstmt: forstart elist SEMICOLON expression SEMICOLON elist . RIGHT_PARENTHESIS statement

    RIGHT_PARENTHESIS  shift, and go to state 178


state 177

   77 funcdef: funcstart LEFT_PARENTHESIS $@3 idlist RIGHT_PARENTHESIS $@4 block .

    $default  reduce using rule 77 (funcdef)


state 178

   95 forstmt: forstart elist SEMICOLON expression SEMICOLON elist RIGHT_PARENTHESIS . statement

    NUM               shift, and go to state 5
    ID                shift, and go to state 6
    STRING            shift, and go to state 7
    IF                shift, and go to state 8
    WHILE             shift, and go to state 9
    FOR               shift, and go to state 10
    FUNCTION          shift, and go to state 11
    RETURN            shift, and go to state 12
    BREAK             shift, and go to state 13
    CONTINUE          shift, and go to state 14
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    TRUE              shift, and go to state 17
    FALSE             shift, and go to state 18
    NIL               shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    SEMICOLON         shift, and go to state 23
    DOUBLE_COLON      shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26
    UMINUS            shift, and go to state 27

    statement   go to state 179
    expression  go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    blockstart  go to state 38
    funcdef     go to state 39
    funcstart   go to state 40
    const       go to state 41
    ifstmt      go to state 42
    ifprefix    go to state 43
    whilestmt   go to state 44
    whilestart  go to state 45
    forstmt     go to state 46
    forstart    go to state 47
    returnstmt  go to state 48


state 179

   95 forstmt: forstart elist SEMICOLON expression SEMICOLON elist RIGHT_PARENTHESIS statement .

    $default  reduce using rule 95 (forstmt)
