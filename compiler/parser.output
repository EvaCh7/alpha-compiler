State 104 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statements statement
    3           | statement

    4 statement: expression SEMICOLON
    5          | ifstmt
    6          | whilestmt
    7          | forstmt
    8          | returnstmt
    9          | BREAK SEMICOLON
   10          | CONTINUE SEMICOLON
   11          | block
   12          | funcdef
   13          | SEMICOLON

   14 expression: assignexpr
   15           | expression PLUS expression
   16           | expression MINUS expression
   17           | expression MULT expression
   18           | expression DIV expression
   19           | expression MOD expression
   20           | expression GREATER_THAN expression
   21           | expression GREATER_OR_EQUAL expression
   22           | expression LESS_THAN expression
   23           | expression LESS_OR_EQUAL expression

   24 $@1: /* empty */

   25 expression: expression EQUALS_EQUALS $@1 expression

   26 $@2: /* empty */

   27 expression: expression NOT_EQUALS $@2 expression

   28 $@3: /* empty */

   29 expression: expression AND $@3 M expression

   30 $@4: /* empty */

   31 expression: expression OR $@4 M expression
   32           | term

   33 M: /* empty */

   34 term: LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
   35     | MINUS expression
   36     | NOT expression
   37     | PLUS_PLUS lvalue
   38     | lvalue PLUS_PLUS
   39     | MINUS_MINUS lvalue
   40     | lvalue MINUS_MINUS
   41     | primary

   42 $@5: /* empty */

   43 assignexpr: lvalue $@5 EQUALS expression

   44 primary: lvalue
   45        | call
   46        | objectdef
   47        | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS
   48        | const

   49 lvalue: ID
   50       | LOCAL ID
   51       | DOUBLE_COLON ID
   52       | member

   53 member: lvalue DOT ID
   54       | lvalue LEFT_BRACE expression RIGHT_BRACE
   55       | call DOT ID
   56       | call LEFT_BRACE expression RIGHT_BRACE

   57 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS
   58     | lvalue callsuffix
   59     | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   60 callsuffix: normcall
   61           | methodcall

   62 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   63 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   64 elist: expression
   65      | expression COMMA elist
   66      | /* empty */

   67 objectdef: LEFT_BRACE elist RIGHT_BRACE
   68          | LEFT_BRACE indexed RIGHT_BRACE

   69 indexed: indexedelem
   70        | indexedelem COMMA indexed

   71 indexedelem: LEFT_BRACKET expression COLON expression RIGHT_BRACKET

   72 block: blockstart blockend
   73      | blockstart blockstmt blockend

   74 blockstart: LEFT_BRACKET

   75 blockend: RIGHT_BRACKET

   76 blockstmt: statement
   77          | statement blockstmt

   78 $@6: /* empty */

   79 $@7: /* empty */

   80 $@8: /* empty */

   81 funcdef: funcstart LEFT_PARENTHESIS $@6 idlist $@7 RIGHT_PARENTHESIS $@8 funcbody

   82 funcbody: block

   83 funcstart: FUNCTION ID
   84          | FUNCTION

   85 const: NUM
   86      | STRING
   87      | NIL
   88      | TRUE
   89      | FALSE

   90 idlist: arg
   91       | arg COMMA idlist
   92       | /* empty */

   93 arg: ID

   94 ifstmt: ifprefix statement
   95       | ifprefix statement elseprefix statement

   96 elseprefix: ELSE

   97 $@9: /* empty */

   98 ifprefix: IF LEFT_PARENTHESIS $@9 expression RIGHT_PARENTHESIS

   99 whilestart: WHILE

  100 $@10: /* empty */

  101 whilecond: LEFT_PARENTHESIS $@10 expression RIGHT_PARENTHESIS

  102 whilestmt: whilestart whilecond statement

  103 forprefix: forstart elist SEMICOLON M expression SEMICOLON

  104 forstart: FOR LEFT_PARENTHESIS

  105 forstmt: forprefix N elist RIGHT_PARENTHESIS N statement N

  106 N: /* empty */

  107 returnstmt: RETURN SEMICOLON
  108           | RETURN expression SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
NUM (258) 85
ID (259) 49 50 51 53 55 63 83 93
STRING (260) 86
IF (261) 98
ELSE (262) 96
WHILE (263) 99
FOR (264) 104
FUNCTION (265) 83 84
RETURN (266) 107 108
BREAK (267) 9
CONTINUE (268) 10
AND (269) 29
NOT (270) 36
OR (271) 31
LOCAL (272) 50
TRUE (273) 88
FALSE (274) 89
NIL (275) 87
LEFT_BRACE (276) 54 56 67 68
RIGHT_BRACE (277) 54 56 67 68
LEFT_BRACKET (278) 71 74
RIGHT_BRACKET (279) 71 75
LEFT_PARENTHESIS (280) 34 47 57 59 62 63 81 98 101 104
RIGHT_PARENTHESIS (281) 34 47 57 59 62 63 81 98 101 105
SEMICOLON (282) 4 9 10 13 103 107 108
COMMA (283) 65 70 91
COLON (284) 71
DOUBLE_COLON (285) 51
DOT (286) 53 55
DOUBLE_DOT (287) 63
EQUALS (288) 43
PLUS (289) 15
MINUS (290) 16 35
MULT (291) 17
DIV (292) 18
MOD (293) 19
EQUALS_EQUALS (294) 25
NOT_EQUALS (295) 27
PLUS_PLUS (296) 37 38
MINUS_MINUS (297) 39 40
GREATER_THAN (298) 20
LESS_THAN (299) 22
GREATER_OR_EQUAL (300) 21
LESS_OR_EQUAL (301) 23
UMINUS (302)


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
program (49)
    on left: 1, on right: 0
statements (50)
    on left: 2 3, on right: 1 2
statement (51)
    on left: 4 5 6 7 8 9 10 11 12 13, on right: 2 3 76 77 94 95 102
    105
expression (52)
    on left: 14 15 16 17 18 19 20 21 22 23 25 27 29 31 32, on right:
    4 15 16 17 18 19 20 21 22 23 25 27 29 31 34 35 36 43 54 56 64 65
    71 98 101 103 108
$@1 (53)
    on left: 24, on right: 25
$@2 (54)
    on left: 26, on right: 27
$@3 (55)
    on left: 28, on right: 29
$@4 (56)
    on left: 30, on right: 31
M (57)
    on left: 33, on right: 29 31 103
term (58)
    on left: 34 35 36 37 38 39 40 41, on right: 32
assignexpr (59)
    on left: 43, on right: 14
$@5 (60)
    on left: 42, on right: 43
primary (61)
    on left: 44 45 46 47 48, on right: 41
lvalue (62)
    on left: 49 50 51 52, on right: 37 38 39 40 43 44 53 54 58
member (63)
    on left: 53 54 55 56, on right: 52
call (64)
    on left: 57 58 59, on right: 45 55 56 57
callsuffix (65)
    on left: 60 61, on right: 58
normcall (66)
    on left: 62, on right: 60
methodcall (67)
    on left: 63, on right: 61
elist (68)
    on left: 64 65 66, on right: 57 59 62 63 65 67 103 105
objectdef (69)
    on left: 67 68, on right: 46
indexed (70)
    on left: 69 70, on right: 68 70
indexedelem (71)
    on left: 71, on right: 69 70
block (72)
    on left: 72 73, on right: 11 82
blockstart (73)
    on left: 74, on right: 72 73
blockend (74)
    on left: 75, on right: 72 73
blockstmt (75)
    on left: 76 77, on right: 73 77
funcdef (76)
    on left: 81, on right: 12 47 59
$@6 (77)
    on left: 78, on right: 81
$@7 (78)
    on left: 79, on right: 81
$@8 (79)
    on left: 80, on right: 81
funcbody (80)
    on left: 82, on right: 81
funcstart (81)
    on left: 83 84, on right: 81
const (82)
    on left: 85 86 87 88 89, on right: 48
idlist (83)
    on left: 90 91 92, on right: 81 91
arg (84)
    on left: 93, on right: 90 91
ifstmt (85)
    on left: 94 95, on right: 5
elseprefix (86)
    on left: 96, on right: 95
ifprefix (87)
    on left: 98, on right: 94 95
$@9 (88)
    on left: 97, on right: 98
whilestart (89)
    on left: 99, on right: 102
whilecond (90)
    on left: 101, on right: 102
$@10 (91)
    on left: 100, on right: 101
whilestmt (92)
    on left: 102, on right: 6
forprefix (93)
    on left: 103, on right: 105
forstart (94)
    on left: 104, on right: 103
forstmt (95)
    on left: 105, on right: 7
N (96)
    on left: 106, on right: 105
returnstmt (97)
    on left: 107 108, on right: 8


state 0

    0 $accept: . program $end

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    IF                shift, and go to state 4
    WHILE             shift, and go to state 5
    FOR               shift, and go to state 6
    FUNCTION          shift, and go to state 7
    RETURN            shift, and go to state 8
    BREAK             shift, and go to state 9
    CONTINUE          shift, and go to state 10
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    SEMICOLON         shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    program     go to state 24
    statements  go to state 25
    statement   go to state 26
    expression  go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    blockstart  go to state 36
    funcdef     go to state 37
    funcstart   go to state 38
    const       go to state 39
    ifstmt      go to state 40
    ifprefix    go to state 41
    whilestart  go to state 42
    whilestmt   go to state 43
    forprefix   go to state 44
    forstart    go to state 45
    forstmt     go to state 46
    returnstmt  go to state 47


state 1

   85 const: NUM .

    $default  reduce using rule 85 (const)


state 2

   49 lvalue: ID .

    $default  reduce using rule 49 (lvalue)


state 3

   86 const: STRING .

    $default  reduce using rule 86 (const)


state 4

   98 ifprefix: IF . LEFT_PARENTHESIS $@9 expression RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 48


state 5

   99 whilestart: WHILE .

    $default  reduce using rule 99 (whilestart)


state 6

  104 forstart: FOR . LEFT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 49


state 7

   83 funcstart: FUNCTION . ID
   84          | FUNCTION .

    ID  shift, and go to state 50

    $default  reduce using rule 84 (funcstart)


state 8

  107 returnstmt: RETURN . SEMICOLON
  108           | RETURN . expression SEMICOLON

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    SEMICOLON         shift, and go to state 51
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 52
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 9

    9 statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 53


state 10

   10 statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 54


state 11

   36 term: NOT . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 55
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 12

   50 lvalue: LOCAL . ID

    ID  shift, and go to state 56


state 13

   88 const: TRUE .

    $default  reduce using rule 88 (const)


state 14

   89 const: FALSE .

    $default  reduce using rule 89 (const)


state 15

   87 const: NIL .

    $default  reduce using rule 87 (const)


state 16

   67 objectdef: LEFT_BRACE . elist RIGHT_BRACE
   68          | LEFT_BRACE . indexed RIGHT_BRACE

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_BRACKET      shift, and go to state 57
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    $default  reduce using rule 66 (elist)

    expression   go to state 58
    term         go to state 28
    assignexpr   go to state 29
    primary      go to state 30
    lvalue       go to state 31
    member       go to state 32
    call         go to state 33
    elist        go to state 59
    objectdef    go to state 34
    indexed      go to state 60
    indexedelem  go to state 61
    const        go to state 39


state 17

   74 blockstart: LEFT_BRACKET .

    $default  reduce using rule 74 (blockstart)


state 18

   34 term: LEFT_PARENTHESIS . expression RIGHT_PARENTHESIS
   47 primary: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS
   59 call: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    FUNCTION          shift, and go to state 7
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 62
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 63
    funcstart   go to state 38
    const       go to state 39


state 19

   13 statement: SEMICOLON .

    $default  reduce using rule 13 (statement)


state 20

   51 lvalue: DOUBLE_COLON . ID

    ID  shift, and go to state 64


state 21

   35 term: MINUS . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 65
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 22

   37 term: PLUS_PLUS . lvalue

    ID                shift, and go to state 2
    LOCAL             shift, and go to state 12
    LEFT_PARENTHESIS  shift, and go to state 66
    DOUBLE_COLON      shift, and go to state 20

    lvalue  go to state 67
    member  go to state 32
    call    go to state 68


state 23

   39 term: MINUS_MINUS . lvalue

    ID                shift, and go to state 2
    LOCAL             shift, and go to state 12
    LEFT_PARENTHESIS  shift, and go to state 66
    DOUBLE_COLON      shift, and go to state 20

    lvalue  go to state 69
    member  go to state 32
    call    go to state 68


state 24

    0 $accept: program . $end

    $end  shift, and go to state 70


state 25

    1 program: statements .
    2 statements: statements . statement

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    IF                shift, and go to state 4
    WHILE             shift, and go to state 5
    FOR               shift, and go to state 6
    FUNCTION          shift, and go to state 7
    RETURN            shift, and go to state 8
    BREAK             shift, and go to state 9
    CONTINUE          shift, and go to state 10
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    SEMICOLON         shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    $default  reduce using rule 1 (program)

    statement   go to state 71
    expression  go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    blockstart  go to state 36
    funcdef     go to state 37
    funcstart   go to state 38
    const       go to state 39
    ifstmt      go to state 40
    ifprefix    go to state 41
    whilestart  go to state 42
    whilestmt   go to state 43
    forprefix   go to state 44
    forstart    go to state 45
    forstmt     go to state 46
    returnstmt  go to state 47


state 26

    3 statements: statement .

    $default  reduce using rule 3 (statements)


state 27

    4 statement: expression . SEMICOLON
   15 expression: expression . PLUS expression
   16           | expression . MINUS expression
   17           | expression . MULT expression
   18           | expression . DIV expression
   19           | expression . MOD expression
   20           | expression . GREATER_THAN expression
   21           | expression . GREATER_OR_EQUAL expression
   22           | expression . LESS_THAN expression
   23           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS $@1 expression
   27           | expression . NOT_EQUALS $@2 expression
   29           | expression . AND $@3 M expression
   31           | expression . OR $@4 M expression

    AND               shift, and go to state 72
    OR                shift, and go to state 73
    SEMICOLON         shift, and go to state 74
    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS_EQUALS     shift, and go to state 80
    NOT_EQUALS        shift, and go to state 81
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85


state 28

   32 expression: term .

    $default  reduce using rule 32 (expression)


state 29

   14 expression: assignexpr .

    $default  reduce using rule 14 (expression)


state 30

   41 term: primary .

    $default  reduce using rule 41 (term)


state 31

   38 term: lvalue . PLUS_PLUS
   40     | lvalue . MINUS_MINUS
   43 assignexpr: lvalue . $@5 EQUALS expression
   44 primary: lvalue .
   53 member: lvalue . DOT ID
   54       | lvalue . LEFT_BRACE expression RIGHT_BRACE
   58 call: lvalue . callsuffix

    LEFT_BRACE        shift, and go to state 86
    LEFT_PARENTHESIS  shift, and go to state 87
    DOT               shift, and go to state 88
    DOUBLE_DOT        shift, and go to state 89
    PLUS_PLUS         shift, and go to state 90
    MINUS_MINUS       shift, and go to state 91

    EQUALS    reduce using rule 42 ($@5)
    $default  reduce using rule 44 (primary)

    $@5         go to state 92
    callsuffix  go to state 93
    normcall    go to state 94
    methodcall  go to state 95


state 32

   52 lvalue: member .

    $default  reduce using rule 52 (lvalue)


state 33

   45 primary: call .
   55 member: call . DOT ID
   56       | call . LEFT_BRACE expression RIGHT_BRACE
   57 call: call . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_BRACE        shift, and go to state 96
    LEFT_PARENTHESIS  shift, and go to state 97
    DOT               shift, and go to state 98

    $default  reduce using rule 45 (primary)


state 34

   46 primary: objectdef .

    $default  reduce using rule 46 (primary)


state 35

   11 statement: block .

    $default  reduce using rule 11 (statement)


state 36

   72 block: blockstart . blockend
   73      | blockstart . blockstmt blockend

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    IF                shift, and go to state 4
    WHILE             shift, and go to state 5
    FOR               shift, and go to state 6
    FUNCTION          shift, and go to state 7
    RETURN            shift, and go to state 8
    BREAK             shift, and go to state 9
    CONTINUE          shift, and go to state 10
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_BRACKET      shift, and go to state 17
    RIGHT_BRACKET     shift, and go to state 99
    LEFT_PARENTHESIS  shift, and go to state 18
    SEMICOLON         shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    statement   go to state 100
    expression  go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    blockstart  go to state 36
    blockend    go to state 101
    blockstmt   go to state 102
    funcdef     go to state 37
    funcstart   go to state 38
    const       go to state 39
    ifstmt      go to state 40
    ifprefix    go to state 41
    whilestart  go to state 42
    whilestmt   go to state 43
    forprefix   go to state 44
    forstart    go to state 45
    forstmt     go to state 46
    returnstmt  go to state 47


state 37

   12 statement: funcdef .

    $default  reduce using rule 12 (statement)


state 38

   81 funcdef: funcstart . LEFT_PARENTHESIS $@6 idlist $@7 RIGHT_PARENTHESIS $@8 funcbody

    LEFT_PARENTHESIS  shift, and go to state 103


state 39

   48 primary: const .

    $default  reduce using rule 48 (primary)


state 40

    5 statement: ifstmt .

    $default  reduce using rule 5 (statement)


state 41

   94 ifstmt: ifprefix . statement
   95       | ifprefix . statement elseprefix statement

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    IF                shift, and go to state 4
    WHILE             shift, and go to state 5
    FOR               shift, and go to state 6
    FUNCTION          shift, and go to state 7
    RETURN            shift, and go to state 8
    BREAK             shift, and go to state 9
    CONTINUE          shift, and go to state 10
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    SEMICOLON         shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    statement   go to state 104
    expression  go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    blockstart  go to state 36
    funcdef     go to state 37
    funcstart   go to state 38
    const       go to state 39
    ifstmt      go to state 40
    ifprefix    go to state 41
    whilestart  go to state 42
    whilestmt   go to state 43
    forprefix   go to state 44
    forstart    go to state 45
    forstmt     go to state 46
    returnstmt  go to state 47


state 42

  102 whilestmt: whilestart . whilecond statement

    LEFT_PARENTHESIS  shift, and go to state 105

    whilecond  go to state 106


state 43

    6 statement: whilestmt .

    $default  reduce using rule 6 (statement)


state 44

  105 forstmt: forprefix . N elist RIGHT_PARENTHESIS N statement N

    $default  reduce using rule 106 (N)

    N  go to state 107


state 45

  103 forprefix: forstart . elist SEMICOLON M expression SEMICOLON

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    $default  reduce using rule 66 (elist)

    expression  go to state 58
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 108
    objectdef   go to state 34
    const       go to state 39


state 46

    7 statement: forstmt .

    $default  reduce using rule 7 (statement)


state 47

    8 statement: returnstmt .

    $default  reduce using rule 8 (statement)


state 48

   98 ifprefix: IF LEFT_PARENTHESIS . $@9 expression RIGHT_PARENTHESIS

    $default  reduce using rule 97 ($@9)

    $@9  go to state 109


state 49

  104 forstart: FOR LEFT_PARENTHESIS .

    $default  reduce using rule 104 (forstart)


state 50

   83 funcstart: FUNCTION ID .

    $default  reduce using rule 83 (funcstart)


state 51

  107 returnstmt: RETURN SEMICOLON .

    $default  reduce using rule 107 (returnstmt)


state 52

   15 expression: expression . PLUS expression
   16           | expression . MINUS expression
   17           | expression . MULT expression
   18           | expression . DIV expression
   19           | expression . MOD expression
   20           | expression . GREATER_THAN expression
   21           | expression . GREATER_OR_EQUAL expression
   22           | expression . LESS_THAN expression
   23           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS $@1 expression
   27           | expression . NOT_EQUALS $@2 expression
   29           | expression . AND $@3 M expression
   31           | expression . OR $@4 M expression
  108 returnstmt: RETURN expression . SEMICOLON

    AND               shift, and go to state 72
    OR                shift, and go to state 73
    SEMICOLON         shift, and go to state 110
    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS_EQUALS     shift, and go to state 80
    NOT_EQUALS        shift, and go to state 81
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85


state 53

    9 statement: BREAK SEMICOLON .

    $default  reduce using rule 9 (statement)


state 54

   10 statement: CONTINUE SEMICOLON .

    $default  reduce using rule 10 (statement)


state 55

   15 expression: expression . PLUS expression
   16           | expression . MINUS expression
   17           | expression . MULT expression
   18           | expression . DIV expression
   19           | expression . MOD expression
   20           | expression . GREATER_THAN expression
   21           | expression . GREATER_OR_EQUAL expression
   22           | expression . LESS_THAN expression
   23           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS $@1 expression
   27           | expression . NOT_EQUALS $@2 expression
   29           | expression . AND $@3 M expression
   31           | expression . OR $@4 M expression
   36 term: NOT expression .

    $default  reduce using rule 36 (term)


state 56

   50 lvalue: LOCAL ID .

    $default  reduce using rule 50 (lvalue)


state 57

   71 indexedelem: LEFT_BRACKET . expression COLON expression RIGHT_BRACKET

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 111
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 58

   15 expression: expression . PLUS expression
   16           | expression . MINUS expression
   17           | expression . MULT expression
   18           | expression . DIV expression
   19           | expression . MOD expression
   20           | expression . GREATER_THAN expression
   21           | expression . GREATER_OR_EQUAL expression
   22           | expression . LESS_THAN expression
   23           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS $@1 expression
   27           | expression . NOT_EQUALS $@2 expression
   29           | expression . AND $@3 M expression
   31           | expression . OR $@4 M expression
   64 elist: expression .
   65      | expression . COMMA elist

    AND               shift, and go to state 72
    OR                shift, and go to state 73
    COMMA             shift, and go to state 112
    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS_EQUALS     shift, and go to state 80
    NOT_EQUALS        shift, and go to state 81
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85

    $default  reduce using rule 64 (elist)


state 59

   67 objectdef: LEFT_BRACE elist . RIGHT_BRACE

    RIGHT_BRACE  shift, and go to state 113


state 60

   68 objectdef: LEFT_BRACE indexed . RIGHT_BRACE

    RIGHT_BRACE  shift, and go to state 114


state 61

   69 indexed: indexedelem .
   70        | indexedelem . COMMA indexed

    COMMA  shift, and go to state 115

    $default  reduce using rule 69 (indexed)


state 62

   15 expression: expression . PLUS expression
   16           | expression . MINUS expression
   17           | expression . MULT expression
   18           | expression . DIV expression
   19           | expression . MOD expression
   20           | expression . GREATER_THAN expression
   21           | expression . GREATER_OR_EQUAL expression
   22           | expression . LESS_THAN expression
   23           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS $@1 expression
   27           | expression . NOT_EQUALS $@2 expression
   29           | expression . AND $@3 M expression
   31           | expression . OR $@4 M expression
   34 term: LEFT_PARENTHESIS expression . RIGHT_PARENTHESIS

    AND                shift, and go to state 72
    OR                 shift, and go to state 73
    RIGHT_PARENTHESIS  shift, and go to state 116
    PLUS               shift, and go to state 75
    MINUS              shift, and go to state 76
    MULT               shift, and go to state 77
    DIV                shift, and go to state 78
    MOD                shift, and go to state 79
    EQUALS_EQUALS      shift, and go to state 80
    NOT_EQUALS         shift, and go to state 81
    GREATER_THAN       shift, and go to state 82
    LESS_THAN          shift, and go to state 83
    GREATER_OR_EQUAL   shift, and go to state 84
    LESS_OR_EQUAL      shift, and go to state 85


state 63

   47 primary: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS
   59 call: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 117


state 64

   51 lvalue: DOUBLE_COLON ID .

    $default  reduce using rule 51 (lvalue)


state 65

   15 expression: expression . PLUS expression
   16           | expression . MINUS expression
   17           | expression . MULT expression
   18           | expression . DIV expression
   19           | expression . MOD expression
   20           | expression . GREATER_THAN expression
   21           | expression . GREATER_OR_EQUAL expression
   22           | expression . LESS_THAN expression
   23           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS $@1 expression
   27           | expression . NOT_EQUALS $@2 expression
   29           | expression . AND $@3 M expression
   31           | expression . OR $@4 M expression
   35 term: MINUS expression .

    $default  reduce using rule 35 (term)


state 66

   59 call: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    FUNCTION  shift, and go to state 7

    funcdef    go to state 118
    funcstart  go to state 38


state 67

   37 term: PLUS_PLUS lvalue .
   53 member: lvalue . DOT ID
   54       | lvalue . LEFT_BRACE expression RIGHT_BRACE
   58 call: lvalue . callsuffix

    LEFT_BRACE        shift, and go to state 86
    LEFT_PARENTHESIS  shift, and go to state 87
    DOT               shift, and go to state 88
    DOUBLE_DOT        shift, and go to state 89

    $default  reduce using rule 37 (term)

    callsuffix  go to state 93
    normcall    go to state 94
    methodcall  go to state 95


state 68

   55 member: call . DOT ID
   56       | call . LEFT_BRACE expression RIGHT_BRACE
   57 call: call . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_BRACE        shift, and go to state 96
    LEFT_PARENTHESIS  shift, and go to state 97
    DOT               shift, and go to state 98


state 69

   39 term: MINUS_MINUS lvalue .
   53 member: lvalue . DOT ID
   54       | lvalue . LEFT_BRACE expression RIGHT_BRACE
   58 call: lvalue . callsuffix

    LEFT_BRACE        shift, and go to state 86
    LEFT_PARENTHESIS  shift, and go to state 87
    DOT               shift, and go to state 88
    DOUBLE_DOT        shift, and go to state 89

    $default  reduce using rule 39 (term)

    callsuffix  go to state 93
    normcall    go to state 94
    methodcall  go to state 95


state 70

    0 $accept: program $end .

    $default  accept


state 71

    2 statements: statements statement .

    $default  reduce using rule 2 (statements)


state 72

   29 expression: expression AND . $@3 M expression

    $default  reduce using rule 28 ($@3)

    $@3  go to state 119


state 73

   31 expression: expression OR . $@4 M expression

    $default  reduce using rule 30 ($@4)

    $@4  go to state 120


state 74

    4 statement: expression SEMICOLON .

    $default  reduce using rule 4 (statement)


state 75

   15 expression: expression PLUS . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 121
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 76

   16 expression: expression MINUS . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 122
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 77

   17 expression: expression MULT . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 123
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 78

   18 expression: expression DIV . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 124
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 79

   19 expression: expression MOD . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 125
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 80

   25 expression: expression EQUALS_EQUALS . $@1 expression

    $default  reduce using rule 24 ($@1)

    $@1  go to state 126


state 81

   27 expression: expression NOT_EQUALS . $@2 expression

    $default  reduce using rule 26 ($@2)

    $@2  go to state 127


state 82

   20 expression: expression GREATER_THAN . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 128
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 83

   22 expression: expression LESS_THAN . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 129
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 84

   21 expression: expression GREATER_OR_EQUAL . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 130
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 85

   23 expression: expression LESS_OR_EQUAL . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 131
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 86

   54 member: lvalue LEFT_BRACE . expression RIGHT_BRACE

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 132
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 87

   62 normcall: LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    $default  reduce using rule 66 (elist)

    expression  go to state 58
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 133
    objectdef   go to state 34
    const       go to state 39


state 88

   53 member: lvalue DOT . ID

    ID  shift, and go to state 134


state 89

   63 methodcall: DOUBLE_DOT . ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    ID  shift, and go to state 135


state 90

   38 term: lvalue PLUS_PLUS .

    $default  reduce using rule 38 (term)


state 91

   40 term: lvalue MINUS_MINUS .

    $default  reduce using rule 40 (term)


state 92

   43 assignexpr: lvalue $@5 . EQUALS expression

    EQUALS  shift, and go to state 136


state 93

   58 call: lvalue callsuffix .

    $default  reduce using rule 58 (call)


state 94

   60 callsuffix: normcall .

    $default  reduce using rule 60 (callsuffix)


state 95

   61 callsuffix: methodcall .

    $default  reduce using rule 61 (callsuffix)


state 96

   56 member: call LEFT_BRACE . expression RIGHT_BRACE

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 137
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 97

   57 call: call LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    $default  reduce using rule 66 (elist)

    expression  go to state 58
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 138
    objectdef   go to state 34
    const       go to state 39


state 98

   55 member: call DOT . ID

    ID  shift, and go to state 139


state 99

   75 blockend: RIGHT_BRACKET .

    $default  reduce using rule 75 (blockend)


state 100

   76 blockstmt: statement .
   77          | statement . blockstmt

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    IF                shift, and go to state 4
    WHILE             shift, and go to state 5
    FOR               shift, and go to state 6
    FUNCTION          shift, and go to state 7
    RETURN            shift, and go to state 8
    BREAK             shift, and go to state 9
    CONTINUE          shift, and go to state 10
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    SEMICOLON         shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    $default  reduce using rule 76 (blockstmt)

    statement   go to state 100
    expression  go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    blockstart  go to state 36
    blockstmt   go to state 140
    funcdef     go to state 37
    funcstart   go to state 38
    const       go to state 39
    ifstmt      go to state 40
    ifprefix    go to state 41
    whilestart  go to state 42
    whilestmt   go to state 43
    forprefix   go to state 44
    forstart    go to state 45
    forstmt     go to state 46
    returnstmt  go to state 47


state 101

   72 block: blockstart blockend .

    $default  reduce using rule 72 (block)


state 102

   73 block: blockstart blockstmt . blockend

    RIGHT_BRACKET  shift, and go to state 99

    blockend  go to state 141


state 103

   81 funcdef: funcstart LEFT_PARENTHESIS . $@6 idlist $@7 RIGHT_PARENTHESIS $@8 funcbody

    $default  reduce using rule 78 ($@6)

    $@6  go to state 142


state 104

   94 ifstmt: ifprefix statement .
   95       | ifprefix statement . elseprefix statement

    ELSE  shift, and go to state 143

    ELSE      [reduce using rule 94 (ifstmt)]
    $default  reduce using rule 94 (ifstmt)

    elseprefix  go to state 144


state 105

  101 whilecond: LEFT_PARENTHESIS . $@10 expression RIGHT_PARENTHESIS

    $default  reduce using rule 100 ($@10)

    $@10  go to state 145


state 106

  102 whilestmt: whilestart whilecond . statement

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    IF                shift, and go to state 4
    WHILE             shift, and go to state 5
    FOR               shift, and go to state 6
    FUNCTION          shift, and go to state 7
    RETURN            shift, and go to state 8
    BREAK             shift, and go to state 9
    CONTINUE          shift, and go to state 10
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    SEMICOLON         shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    statement   go to state 146
    expression  go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    blockstart  go to state 36
    funcdef     go to state 37
    funcstart   go to state 38
    const       go to state 39
    ifstmt      go to state 40
    ifprefix    go to state 41
    whilestart  go to state 42
    whilestmt   go to state 43
    forprefix   go to state 44
    forstart    go to state 45
    forstmt     go to state 46
    returnstmt  go to state 47


state 107

  105 forstmt: forprefix N . elist RIGHT_PARENTHESIS N statement N

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    $default  reduce using rule 66 (elist)

    expression  go to state 58
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 147
    objectdef   go to state 34
    const       go to state 39


state 108

  103 forprefix: forstart elist . SEMICOLON M expression SEMICOLON

    SEMICOLON  shift, and go to state 148


state 109

   98 ifprefix: IF LEFT_PARENTHESIS $@9 . expression RIGHT_PARENTHESIS

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 149
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 110

  108 returnstmt: RETURN expression SEMICOLON .

    $default  reduce using rule 108 (returnstmt)


state 111

   15 expression: expression . PLUS expression
   16           | expression . MINUS expression
   17           | expression . MULT expression
   18           | expression . DIV expression
   19           | expression . MOD expression
   20           | expression . GREATER_THAN expression
   21           | expression . GREATER_OR_EQUAL expression
   22           | expression . LESS_THAN expression
   23           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS $@1 expression
   27           | expression . NOT_EQUALS $@2 expression
   29           | expression . AND $@3 M expression
   31           | expression . OR $@4 M expression
   71 indexedelem: LEFT_BRACKET expression . COLON expression RIGHT_BRACKET

    AND               shift, and go to state 72
    OR                shift, and go to state 73
    COLON             shift, and go to state 150
    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS_EQUALS     shift, and go to state 80
    NOT_EQUALS        shift, and go to state 81
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85


state 112

   65 elist: expression COMMA . elist

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    $default  reduce using rule 66 (elist)

    expression  go to state 58
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 151
    objectdef   go to state 34
    const       go to state 39


state 113

   67 objectdef: LEFT_BRACE elist RIGHT_BRACE .

    $default  reduce using rule 67 (objectdef)


state 114

   68 objectdef: LEFT_BRACE indexed RIGHT_BRACE .

    $default  reduce using rule 68 (objectdef)


state 115

   70 indexed: indexedelem COMMA . indexed

    LEFT_BRACKET  shift, and go to state 57

    indexed      go to state 152
    indexedelem  go to state 61


state 116

   34 term: LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .

    $default  reduce using rule 34 (term)


state 117

   47 primary: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS .
   59 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 153

    $default  reduce using rule 47 (primary)


state 118

   59 call: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 154


state 119

   29 expression: expression AND $@3 . M expression

    $default  reduce using rule 33 (M)

    M  go to state 155


state 120

   31 expression: expression OR $@4 . M expression

    $default  reduce using rule 33 (M)

    M  go to state 156


state 121

   15 expression: expression . PLUS expression
   15           | expression PLUS expression .
   16           | expression . MINUS expression
   17           | expression . MULT expression
   18           | expression . DIV expression
   19           | expression . MOD expression
   20           | expression . GREATER_THAN expression
   21           | expression . GREATER_OR_EQUAL expression
   22           | expression . LESS_THAN expression
   23           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS $@1 expression
   27           | expression . NOT_EQUALS $@2 expression
   29           | expression . AND $@3 M expression
   31           | expression . OR $@4 M expression

    MULT  shift, and go to state 77
    DIV   shift, and go to state 78
    MOD   shift, and go to state 79

    $default  reduce using rule 15 (expression)


state 122

   15 expression: expression . PLUS expression
   16           | expression . MINUS expression
   16           | expression MINUS expression .
   17           | expression . MULT expression
   18           | expression . DIV expression
   19           | expression . MOD expression
   20           | expression . GREATER_THAN expression
   21           | expression . GREATER_OR_EQUAL expression
   22           | expression . LESS_THAN expression
   23           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS $@1 expression
   27           | expression . NOT_EQUALS $@2 expression
   29           | expression . AND $@3 M expression
   31           | expression . OR $@4 M expression

    MULT  shift, and go to state 77
    DIV   shift, and go to state 78
    MOD   shift, and go to state 79

    $default  reduce using rule 16 (expression)


state 123

   15 expression: expression . PLUS expression
   16           | expression . MINUS expression
   17           | expression . MULT expression
   17           | expression MULT expression .
   18           | expression . DIV expression
   19           | expression . MOD expression
   20           | expression . GREATER_THAN expression
   21           | expression . GREATER_OR_EQUAL expression
   22           | expression . LESS_THAN expression
   23           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS $@1 expression
   27           | expression . NOT_EQUALS $@2 expression
   29           | expression . AND $@3 M expression
   31           | expression . OR $@4 M expression

    $default  reduce using rule 17 (expression)


state 124

   15 expression: expression . PLUS expression
   16           | expression . MINUS expression
   17           | expression . MULT expression
   18           | expression . DIV expression
   18           | expression DIV expression .
   19           | expression . MOD expression
   20           | expression . GREATER_THAN expression
   21           | expression . GREATER_OR_EQUAL expression
   22           | expression . LESS_THAN expression
   23           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS $@1 expression
   27           | expression . NOT_EQUALS $@2 expression
   29           | expression . AND $@3 M expression
   31           | expression . OR $@4 M expression

    $default  reduce using rule 18 (expression)


state 125

   15 expression: expression . PLUS expression
   16           | expression . MINUS expression
   17           | expression . MULT expression
   18           | expression . DIV expression
   19           | expression . MOD expression
   19           | expression MOD expression .
   20           | expression . GREATER_THAN expression
   21           | expression . GREATER_OR_EQUAL expression
   22           | expression . LESS_THAN expression
   23           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS $@1 expression
   27           | expression . NOT_EQUALS $@2 expression
   29           | expression . AND $@3 M expression
   31           | expression . OR $@4 M expression

    $default  reduce using rule 19 (expression)


state 126

   25 expression: expression EQUALS_EQUALS $@1 . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 157
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 127

   27 expression: expression NOT_EQUALS $@2 . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 158
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 128

   15 expression: expression . PLUS expression
   16           | expression . MINUS expression
   17           | expression . MULT expression
   18           | expression . DIV expression
   19           | expression . MOD expression
   20           | expression . GREATER_THAN expression
   20           | expression GREATER_THAN expression .
   21           | expression . GREATER_OR_EQUAL expression
   22           | expression . LESS_THAN expression
   23           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS $@1 expression
   27           | expression . NOT_EQUALS $@2 expression
   29           | expression . AND $@3 M expression
   31           | expression . OR $@4 M expression

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    MULT   shift, and go to state 77
    DIV    shift, and go to state 78
    MOD    shift, and go to state 79

    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)

    $default  reduce using rule 20 (expression)


state 129

   15 expression: expression . PLUS expression
   16           | expression . MINUS expression
   17           | expression . MULT expression
   18           | expression . DIV expression
   19           | expression . MOD expression
   20           | expression . GREATER_THAN expression
   21           | expression . GREATER_OR_EQUAL expression
   22           | expression . LESS_THAN expression
   22           | expression LESS_THAN expression .
   23           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS $@1 expression
   27           | expression . NOT_EQUALS $@2 expression
   29           | expression . AND $@3 M expression
   31           | expression . OR $@4 M expression

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    MULT   shift, and go to state 77
    DIV    shift, and go to state 78
    MOD    shift, and go to state 79

    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)

    $default  reduce using rule 22 (expression)


state 130

   15 expression: expression . PLUS expression
   16           | expression . MINUS expression
   17           | expression . MULT expression
   18           | expression . DIV expression
   19           | expression . MOD expression
   20           | expression . GREATER_THAN expression
   21           | expression . GREATER_OR_EQUAL expression
   21           | expression GREATER_OR_EQUAL expression .
   22           | expression . LESS_THAN expression
   23           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS $@1 expression
   27           | expression . NOT_EQUALS $@2 expression
   29           | expression . AND $@3 M expression
   31           | expression . OR $@4 M expression

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    MULT   shift, and go to state 77
    DIV    shift, and go to state 78
    MOD    shift, and go to state 79

    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)

    $default  reduce using rule 21 (expression)


state 131

   15 expression: expression . PLUS expression
   16           | expression . MINUS expression
   17           | expression . MULT expression
   18           | expression . DIV expression
   19           | expression . MOD expression
   20           | expression . GREATER_THAN expression
   21           | expression . GREATER_OR_EQUAL expression
   22           | expression . LESS_THAN expression
   23           | expression . LESS_OR_EQUAL expression
   23           | expression LESS_OR_EQUAL expression .
   25           | expression . EQUALS_EQUALS $@1 expression
   27           | expression . NOT_EQUALS $@2 expression
   29           | expression . AND $@3 M expression
   31           | expression . OR $@4 M expression

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    MULT   shift, and go to state 77
    DIV    shift, and go to state 78
    MOD    shift, and go to state 79

    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)

    $default  reduce using rule 23 (expression)


state 132

   15 expression: expression . PLUS expression
   16           | expression . MINUS expression
   17           | expression . MULT expression
   18           | expression . DIV expression
   19           | expression . MOD expression
   20           | expression . GREATER_THAN expression
   21           | expression . GREATER_OR_EQUAL expression
   22           | expression . LESS_THAN expression
   23           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS $@1 expression
   27           | expression . NOT_EQUALS $@2 expression
   29           | expression . AND $@3 M expression
   31           | expression . OR $@4 M expression
   54 member: lvalue LEFT_BRACE expression . RIGHT_BRACE

    AND               shift, and go to state 72
    OR                shift, and go to state 73
    RIGHT_BRACE       shift, and go to state 159
    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS_EQUALS     shift, and go to state 80
    NOT_EQUALS        shift, and go to state 81
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85


state 133

   62 normcall: LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 160


state 134

   53 member: lvalue DOT ID .

    $default  reduce using rule 53 (member)


state 135

   63 methodcall: DOUBLE_DOT ID . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 161


state 136

   43 assignexpr: lvalue $@5 EQUALS . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 162
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 137

   15 expression: expression . PLUS expression
   16           | expression . MINUS expression
   17           | expression . MULT expression
   18           | expression . DIV expression
   19           | expression . MOD expression
   20           | expression . GREATER_THAN expression
   21           | expression . GREATER_OR_EQUAL expression
   22           | expression . LESS_THAN expression
   23           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS $@1 expression
   27           | expression . NOT_EQUALS $@2 expression
   29           | expression . AND $@3 M expression
   31           | expression . OR $@4 M expression
   56 member: call LEFT_BRACE expression . RIGHT_BRACE

    AND               shift, and go to state 72
    OR                shift, and go to state 73
    RIGHT_BRACE       shift, and go to state 163
    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS_EQUALS     shift, and go to state 80
    NOT_EQUALS        shift, and go to state 81
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85


state 138

   57 call: call LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 164


state 139

   55 member: call DOT ID .

    $default  reduce using rule 55 (member)


state 140

   77 blockstmt: statement blockstmt .

    $default  reduce using rule 77 (blockstmt)


state 141

   73 block: blockstart blockstmt blockend .

    $default  reduce using rule 73 (block)


state 142

   81 funcdef: funcstart LEFT_PARENTHESIS $@6 . idlist $@7 RIGHT_PARENTHESIS $@8 funcbody

    ID  shift, and go to state 165

    $default  reduce using rule 92 (idlist)

    idlist  go to state 166
    arg     go to state 167


state 143

   96 elseprefix: ELSE .

    $default  reduce using rule 96 (elseprefix)


state 144

   95 ifstmt: ifprefix statement elseprefix . statement

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    IF                shift, and go to state 4
    WHILE             shift, and go to state 5
    FOR               shift, and go to state 6
    FUNCTION          shift, and go to state 7
    RETURN            shift, and go to state 8
    BREAK             shift, and go to state 9
    CONTINUE          shift, and go to state 10
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    SEMICOLON         shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    statement   go to state 168
    expression  go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    blockstart  go to state 36
    funcdef     go to state 37
    funcstart   go to state 38
    const       go to state 39
    ifstmt      go to state 40
    ifprefix    go to state 41
    whilestart  go to state 42
    whilestmt   go to state 43
    forprefix   go to state 44
    forstart    go to state 45
    forstmt     go to state 46
    returnstmt  go to state 47


state 145

  101 whilecond: LEFT_PARENTHESIS $@10 . expression RIGHT_PARENTHESIS

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 169
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 146

  102 whilestmt: whilestart whilecond statement .

    $default  reduce using rule 102 (whilestmt)


state 147

  105 forstmt: forprefix N elist . RIGHT_PARENTHESIS N statement N

    RIGHT_PARENTHESIS  shift, and go to state 170


state 148

  103 forprefix: forstart elist SEMICOLON . M expression SEMICOLON

    $default  reduce using rule 33 (M)

    M  go to state 171


state 149

   15 expression: expression . PLUS expression
   16           | expression . MINUS expression
   17           | expression . MULT expression
   18           | expression . DIV expression
   19           | expression . MOD expression
   20           | expression . GREATER_THAN expression
   21           | expression . GREATER_OR_EQUAL expression
   22           | expression . LESS_THAN expression
   23           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS $@1 expression
   27           | expression . NOT_EQUALS $@2 expression
   29           | expression . AND $@3 M expression
   31           | expression . OR $@4 M expression
   98 ifprefix: IF LEFT_PARENTHESIS $@9 expression . RIGHT_PARENTHESIS

    AND                shift, and go to state 72
    OR                 shift, and go to state 73
    RIGHT_PARENTHESIS  shift, and go to state 172
    PLUS               shift, and go to state 75
    MINUS              shift, and go to state 76
    MULT               shift, and go to state 77
    DIV                shift, and go to state 78
    MOD                shift, and go to state 79
    EQUALS_EQUALS      shift, and go to state 80
    NOT_EQUALS         shift, and go to state 81
    GREATER_THAN       shift, and go to state 82
    LESS_THAN          shift, and go to state 83
    GREATER_OR_EQUAL   shift, and go to state 84
    LESS_OR_EQUAL      shift, and go to state 85


state 150

   71 indexedelem: LEFT_BRACKET expression COLON . expression RIGHT_BRACKET

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 173
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 151

   65 elist: expression COMMA elist .

    $default  reduce using rule 65 (elist)


state 152

   70 indexed: indexedelem COMMA indexed .

    $default  reduce using rule 70 (indexed)


state 153

   59 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    $default  reduce using rule 66 (elist)

    expression  go to state 58
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 174
    objectdef   go to state 34
    const       go to state 39


state 154

   59 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 153


state 155

   29 expression: expression AND $@3 M . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 175
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 156

   31 expression: expression OR $@4 M . expression

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 176
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 157

   15 expression: expression . PLUS expression
   16           | expression . MINUS expression
   17           | expression . MULT expression
   18           | expression . DIV expression
   19           | expression . MOD expression
   20           | expression . GREATER_THAN expression
   21           | expression . GREATER_OR_EQUAL expression
   22           | expression . LESS_THAN expression
   23           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS $@1 expression
   25           | expression EQUALS_EQUALS $@1 expression .
   27           | expression . NOT_EQUALS $@2 expression
   29           | expression . AND $@3 M expression
   31           | expression . OR $@4 M expression

    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85

    EQUALS_EQUALS  error (nonassociative)
    NOT_EQUALS     error (nonassociative)

    $default  reduce using rule 25 (expression)


state 158

   15 expression: expression . PLUS expression
   16           | expression . MINUS expression
   17           | expression . MULT expression
   18           | expression . DIV expression
   19           | expression . MOD expression
   20           | expression . GREATER_THAN expression
   21           | expression . GREATER_OR_EQUAL expression
   22           | expression . LESS_THAN expression
   23           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS $@1 expression
   27           | expression . NOT_EQUALS $@2 expression
   27           | expression NOT_EQUALS $@2 expression .
   29           | expression . AND $@3 M expression
   31           | expression . OR $@4 M expression

    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85

    EQUALS_EQUALS  error (nonassociative)
    NOT_EQUALS     error (nonassociative)

    $default  reduce using rule 27 (expression)


state 159

   54 member: lvalue LEFT_BRACE expression RIGHT_BRACE .

    $default  reduce using rule 54 (member)


state 160

   62 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 62 (normcall)


state 161

   63 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    $default  reduce using rule 66 (elist)

    expression  go to state 58
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 177
    objectdef   go to state 34
    const       go to state 39


state 162

   15 expression: expression . PLUS expression
   16           | expression . MINUS expression
   17           | expression . MULT expression
   18           | expression . DIV expression
   19           | expression . MOD expression
   20           | expression . GREATER_THAN expression
   21           | expression . GREATER_OR_EQUAL expression
   22           | expression . LESS_THAN expression
   23           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS $@1 expression
   27           | expression . NOT_EQUALS $@2 expression
   29           | expression . AND $@3 M expression
   31           | expression . OR $@4 M expression
   43 assignexpr: lvalue $@5 EQUALS expression .

    AND               shift, and go to state 72
    OR                shift, and go to state 73
    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS_EQUALS     shift, and go to state 80
    NOT_EQUALS        shift, and go to state 81
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85

    $default  reduce using rule 43 (assignexpr)


state 163

   56 member: call LEFT_BRACE expression RIGHT_BRACE .

    $default  reduce using rule 56 (member)


state 164

   57 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 57 (call)


state 165

   93 arg: ID .

    $default  reduce using rule 93 (arg)


state 166

   81 funcdef: funcstart LEFT_PARENTHESIS $@6 idlist . $@7 RIGHT_PARENTHESIS $@8 funcbody

    $default  reduce using rule 79 ($@7)

    $@7  go to state 178


state 167

   90 idlist: arg .
   91       | arg . COMMA idlist

    COMMA  shift, and go to state 179

    $default  reduce using rule 90 (idlist)


state 168

   95 ifstmt: ifprefix statement elseprefix statement .

    $default  reduce using rule 95 (ifstmt)


state 169

   15 expression: expression . PLUS expression
   16           | expression . MINUS expression
   17           | expression . MULT expression
   18           | expression . DIV expression
   19           | expression . MOD expression
   20           | expression . GREATER_THAN expression
   21           | expression . GREATER_OR_EQUAL expression
   22           | expression . LESS_THAN expression
   23           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS $@1 expression
   27           | expression . NOT_EQUALS $@2 expression
   29           | expression . AND $@3 M expression
   31           | expression . OR $@4 M expression
  101 whilecond: LEFT_PARENTHESIS $@10 expression . RIGHT_PARENTHESIS

    AND                shift, and go to state 72
    OR                 shift, and go to state 73
    RIGHT_PARENTHESIS  shift, and go to state 180
    PLUS               shift, and go to state 75
    MINUS              shift, and go to state 76
    MULT               shift, and go to state 77
    DIV                shift, and go to state 78
    MOD                shift, and go to state 79
    EQUALS_EQUALS      shift, and go to state 80
    NOT_EQUALS         shift, and go to state 81
    GREATER_THAN       shift, and go to state 82
    LESS_THAN          shift, and go to state 83
    GREATER_OR_EQUAL   shift, and go to state 84
    LESS_OR_EQUAL      shift, and go to state 85


state 170

  105 forstmt: forprefix N elist RIGHT_PARENTHESIS . N statement N

    $default  reduce using rule 106 (N)

    N  go to state 181


state 171

  103 forprefix: forstart elist SEMICOLON M . expression SEMICOLON

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_PARENTHESIS  shift, and go to state 18
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    expression  go to state 182
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 39


state 172

   98 ifprefix: IF LEFT_PARENTHESIS $@9 expression RIGHT_PARENTHESIS .

    $default  reduce using rule 98 (ifprefix)


state 173

   15 expression: expression . PLUS expression
   16           | expression . MINUS expression
   17           | expression . MULT expression
   18           | expression . DIV expression
   19           | expression . MOD expression
   20           | expression . GREATER_THAN expression
   21           | expression . GREATER_OR_EQUAL expression
   22           | expression . LESS_THAN expression
   23           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS $@1 expression
   27           | expression . NOT_EQUALS $@2 expression
   29           | expression . AND $@3 M expression
   31           | expression . OR $@4 M expression
   71 indexedelem: LEFT_BRACKET expression COLON expression . RIGHT_BRACKET

    AND               shift, and go to state 72
    OR                shift, and go to state 73
    RIGHT_BRACKET     shift, and go to state 183
    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS_EQUALS     shift, and go to state 80
    NOT_EQUALS        shift, and go to state 81
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85


state 174

   59 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 184


state 175

   15 expression: expression . PLUS expression
   16           | expression . MINUS expression
   17           | expression . MULT expression
   18           | expression . DIV expression
   19           | expression . MOD expression
   20           | expression . GREATER_THAN expression
   21           | expression . GREATER_OR_EQUAL expression
   22           | expression . LESS_THAN expression
   23           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS $@1 expression
   27           | expression . NOT_EQUALS $@2 expression
   29           | expression . AND $@3 M expression
   29           | expression AND $@3 M expression .
   31           | expression . OR $@4 M expression

    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS_EQUALS     shift, and go to state 80
    NOT_EQUALS        shift, and go to state 81
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85

    $default  reduce using rule 29 (expression)


state 176

   15 expression: expression . PLUS expression
   16           | expression . MINUS expression
   17           | expression . MULT expression
   18           | expression . DIV expression
   19           | expression . MOD expression
   20           | expression . GREATER_THAN expression
   21           | expression . GREATER_OR_EQUAL expression
   22           | expression . LESS_THAN expression
   23           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS $@1 expression
   27           | expression . NOT_EQUALS $@2 expression
   29           | expression . AND $@3 M expression
   31           | expression . OR $@4 M expression
   31           | expression OR $@4 M expression .

    AND               shift, and go to state 72
    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS_EQUALS     shift, and go to state 80
    NOT_EQUALS        shift, and go to state 81
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85

    $default  reduce using rule 31 (expression)


state 177

   63 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 185


state 178

   81 funcdef: funcstart LEFT_PARENTHESIS $@6 idlist $@7 . RIGHT_PARENTHESIS $@8 funcbody

    RIGHT_PARENTHESIS  shift, and go to state 186


state 179

   91 idlist: arg COMMA . idlist

    ID  shift, and go to state 165

    $default  reduce using rule 92 (idlist)

    idlist  go to state 187
    arg     go to state 167


state 180

  101 whilecond: LEFT_PARENTHESIS $@10 expression RIGHT_PARENTHESIS .

    $default  reduce using rule 101 (whilecond)


state 181

  105 forstmt: forprefix N elist RIGHT_PARENTHESIS N . statement N

    NUM               shift, and go to state 1
    ID                shift, and go to state 2
    STRING            shift, and go to state 3
    IF                shift, and go to state 4
    WHILE             shift, and go to state 5
    FOR               shift, and go to state 6
    FUNCTION          shift, and go to state 7
    RETURN            shift, and go to state 8
    BREAK             shift, and go to state 9
    CONTINUE          shift, and go to state 10
    NOT               shift, and go to state 11
    LOCAL             shift, and go to state 12
    TRUE              shift, and go to state 13
    FALSE             shift, and go to state 14
    NIL               shift, and go to state 15
    LEFT_BRACE        shift, and go to state 16
    LEFT_BRACKET      shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 18
    SEMICOLON         shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    MINUS             shift, and go to state 21
    PLUS_PLUS         shift, and go to state 22
    MINUS_MINUS       shift, and go to state 23

    statement   go to state 188
    expression  go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    blockstart  go to state 36
    funcdef     go to state 37
    funcstart   go to state 38
    const       go to state 39
    ifstmt      go to state 40
    ifprefix    go to state 41
    whilestart  go to state 42
    whilestmt   go to state 43
    forprefix   go to state 44
    forstart    go to state 45
    forstmt     go to state 46
    returnstmt  go to state 47


state 182

   15 expression: expression . PLUS expression
   16           | expression . MINUS expression
   17           | expression . MULT expression
   18           | expression . DIV expression
   19           | expression . MOD expression
   20           | expression . GREATER_THAN expression
   21           | expression . GREATER_OR_EQUAL expression
   22           | expression . LESS_THAN expression
   23           | expression . LESS_OR_EQUAL expression
   25           | expression . EQUALS_EQUALS $@1 expression
   27           | expression . NOT_EQUALS $@2 expression
   29           | expression . AND $@3 M expression
   31           | expression . OR $@4 M expression
  103 forprefix: forstart elist SEMICOLON M expression . SEMICOLON

    AND               shift, and go to state 72
    OR                shift, and go to state 73
    SEMICOLON         shift, and go to state 189
    PLUS              shift, and go to state 75
    MINUS             shift, and go to state 76
    MULT              shift, and go to state 77
    DIV               shift, and go to state 78
    MOD               shift, and go to state 79
    EQUALS_EQUALS     shift, and go to state 80
    NOT_EQUALS        shift, and go to state 81
    GREATER_THAN      shift, and go to state 82
    LESS_THAN         shift, and go to state 83
    GREATER_OR_EQUAL  shift, and go to state 84
    LESS_OR_EQUAL     shift, and go to state 85


state 183

   71 indexedelem: LEFT_BRACKET expression COLON expression RIGHT_BRACKET .

    $default  reduce using rule 71 (indexedelem)


state 184

   59 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 59 (call)


state 185

   63 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 63 (methodcall)


state 186

   81 funcdef: funcstart LEFT_PARENTHESIS $@6 idlist $@7 RIGHT_PARENTHESIS . $@8 funcbody

    $default  reduce using rule 80 ($@8)

    $@8  go to state 190


state 187

   91 idlist: arg COMMA idlist .

    $default  reduce using rule 91 (idlist)


state 188

  105 forstmt: forprefix N elist RIGHT_PARENTHESIS N statement . N

    $default  reduce using rule 106 (N)

    N  go to state 191


state 189

  103 forprefix: forstart elist SEMICOLON M expression SEMICOLON .

    $default  reduce using rule 103 (forprefix)


state 190

   81 funcdef: funcstart LEFT_PARENTHESIS $@6 idlist $@7 RIGHT_PARENTHESIS $@8 . funcbody

    LEFT_BRACKET  shift, and go to state 17

    block       go to state 192
    blockstart  go to state 36
    funcbody    go to state 193


state 191

  105 forstmt: forprefix N elist RIGHT_PARENTHESIS N statement N .

    $default  reduce using rule 105 (forstmt)


state 192

   82 funcbody: block .

    $default  reduce using rule 82 (funcbody)


state 193

   81 funcdef: funcstart LEFT_PARENTHESIS $@6 idlist $@7 RIGHT_PARENTHESIS $@8 funcbody .

    $default  reduce using rule 81 (funcdef)
