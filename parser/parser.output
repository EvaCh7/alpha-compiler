State 152 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statements statement
    3           | %empty

    4 statement: expression SEMICOLON
    5          | ifstmt
    6          | whilestmt
    7          | forstmt
    8          | returnstmt
    9          | BREAK SEMICOLON
   10          | CONTINUE SEMICOLON
   11          | block
   12          | funcdef
   13          | SEMICOLON

   14 expression: assignexpr
   15           | expression PLUS expression
   16           | expression MINUS expression
   17           | expression MULT expression
   18           | expression DIV expression
   19           | expression MOD expression
   20           | expression GREATER_THAN expression
   21           | expression GREATER_OR_EQUAL expression
   22           | expression LESS_THAN expression
   23           | expression LESS_OR_EQUAL expression
   24           | expression EQUALS_EQUALS expression
   25           | expression NOT_EQUALS expression
   26           | expression AND expression
   27           | expression OR expression
   28           | term

   29 term: LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
   30     | UMINUS expression
   31     | NOT expression
   32     | PLUS_PLUS lvalue
   33     | lvalue PLUS_PLUS
   34     | MINUS_MINUS lvalue
   35     | lvalue MINUS_MINUS
   36     | primary

   37 assignexpr: lvalue EQUALS expression

   38 primary: lvalue
   39        | call
   40        | objectdef
   41        | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS
   42        | const

   43 lvalue: ID
   44       | LOCAL ID
   45       | DOUBLE_COLON ID
   46       | member

   47 member: lvalue DOT ID
   48       | lvalue LEFT_BRACE expression RIGHT_BRACE
   49       | call DOT ID
   50       | call LEFT_BRACE expression RIGHT_BRACE

   51 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS
   52     | lvalue callsuffix
   53     | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   54 callsuffix: normcall
   55           | methodcall

   56 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   57 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   58 elist: expression
   59      | expression COMMA elist
   60      | %empty

   61 objectdef: LEFT_BRACE elist RIGHT_BRACE
   62          | LEFT_BRACE indexed RIGHT_BRACE

   63 indexed: indexedelem
   64        | indexedelem COMMA indexed

   65 indexedelem: LEFT_BRACKET expression COLON expression RIGHT_BRACKET

   66 block: blockstart blockend
   67      | blockstart blockstmt blockend

   68 blockstart: LEFT_BRACKET

   69 blockend: RIGHT_BRACKET

   70 blockstmt: statement
   71          | statement blockstmt

   72 $@1: %empty

   73 $@2: %empty

   74 funcdef: funcstart LEFT_PARENTHESIS $@1 idlist RIGHT_PARENTHESIS $@2 block

   75 funcstart: FUNCTION ID
   76          | FUNCTION

   77 const: NUM
   78      | STRING
   79      | NIL
   80      | TRUE
   81      | FALSE

   82 idlist: arg
   83       | arg COMMA idlist
   84       | %empty

   85 arg: ID

   86 ifstmt: IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement
   87       | IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement

   88 whilestmt: WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement

   89 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expression SEMICOLON elist RIGHT_PARENTHESIS statement

   90 returnstmt: RETURN SEMICOLON
   91           | RETURN expression SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    NUM <numValue> (258) 77
    ID <strValue> (259) 43 44 45 47 49 57 75 85
    STRING <strValue> (260) 78
    IF <strValue> (261) 86 87
    ELSE <strValue> (262) 87
    WHILE <strValue> (263) 88
    FOR <strValue> (264) 89
    FUNCTION <strValue> (265) 75 76
    RETURN <strValue> (266) 90 91
    BREAK <strValue> (267) 9
    CONTINUE <strValue> (268) 10
    AND <strValue> (269) 26
    NOT <strValue> (270) 31
    OR <strValue> (271) 27
    LOCAL <strValue> (272) 44
    TRUE <strValue> (273) 80
    FALSE <strValue> (274) 81
    NIL <strValue> (275) 79
    LEFT_BRACE <strValue> (276) 48 50 61 62
    RIGHT_BRACE <strValue> (277) 48 50 61 62
    LEFT_BRACKET <strValue> (278) 65 68
    RIGHT_BRACKET <strValue> (279) 65 69
    LEFT_PARENTHESIS <strValue> (280) 29 41 51 53 56 57 74 86 87 88 89
    RIGHT_PARENTHESIS <strValue> (281) 29 41 51 53 56 57 74 86 87 88 89
    SEMICOLON <strValue> (282) 4 9 10 13 89 90 91
    COMMA <strValue> (283) 59 64 83
    COLON <strValue> (284) 65
    DOUBLE_COLON <strValue> (285) 45
    DOT <strValue> (286) 47 49
    DOUBLE_DOT <strValue> (287) 57
    EQUALS <strValue> (288) 37
    PLUS <strValue> (289) 15
    MINUS <strValue> (290) 16
    MULT <strValue> (291) 17
    DIV <strValue> (292) 18
    MOD <strValue> (293) 19
    EQUALS_EQUALS <strValue> (294) 24
    NOT_EQUALS <strValue> (295) 25
    PLUS_PLUS <strValue> (296) 32 33
    MINUS_MINUS <strValue> (297) 34 35
    GREATER_THAN <strValue> (298) 20
    LESS_THAN <strValue> (299) 22
    GREATER_OR_EQUAL <strValue> (300) 21
    LESS_OR_EQUAL <strValue> (301) 23
    UMINUS <strValue> (302) 30


Nonterminals, with rules where they appear

    $accept (48)
        on left: 0
    program (49)
        on left: 1
        on right: 0
    statements (50)
        on left: 2 3
        on right: 1 2
    statement (51)
        on left: 4 5 6 7 8 9 10 11 12 13
        on right: 2 70 71 86 87 88 89
    expression (52)
        on left: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28
        on right: 4 15 16 17 18 19 20 21 22 23 24 25 26 27 29 30 31 37 48 50 58 59 65 86 87 88 89 91
    term (53)
        on left: 29 30 31 32 33 34 35 36
        on right: 28
    assignexpr (54)
        on left: 37
        on right: 14
    primary (55)
        on left: 38 39 40 41 42
        on right: 36
    lvalue <exprValue> (56)
        on left: 43 44 45 46
        on right: 32 33 34 35 37 38 47 48 52
    member <strValue> (57)
        on left: 47 48 49 50
        on right: 46
    call <strValue> (58)
        on left: 51 52 53
        on right: 39 49 50 51
    callsuffix (59)
        on left: 54 55
        on right: 52
    normcall (60)
        on left: 56
        on right: 54
    methodcall (61)
        on left: 57
        on right: 55
    elist (62)
        on left: 58 59 60
        on right: 51 53 56 57 59 61 89
    objectdef (63)
        on left: 61 62
        on right: 40
    indexed (64)
        on left: 63 64
        on right: 62 64
    indexedelem (65)
        on left: 65
        on right: 63 64
    block (66)
        on left: 66 67
        on right: 11 74
    blockstart (67)
        on left: 68
        on right: 66 67
    blockend (68)
        on left: 69
        on right: 66 67
    blockstmt (69)
        on left: 70 71
        on right: 67 71
    funcdef (70)
        on left: 74
        on right: 12 41 53
    $@1 (71)
        on left: 72
        on right: 74
    $@2 (72)
        on left: 73
        on right: 74
    funcstart <strValue> (73)
        on left: 75 76
        on right: 74
    const (74)
        on left: 77 78 79 80 81
        on right: 42
    idlist <strValue> (75)
        on left: 82 83 84
        on right: 74 83
    arg <strValue> (76)
        on left: 85
        on right: 82 83
    ifstmt (77)
        on left: 86 87
        on right: 5
    whilestmt (78)
        on left: 88
        on right: 6
    forstmt (79)
        on left: 89
        on right: 7
    returnstmt (80)
        on left: 90 91
        on right: 8


State 0

    0 $accept: • program $end

    $default  reduce using rule 3 (statements)

    program     go to state 1
    statements  go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    1 program: statements •
    2 statements: statements • statement

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    IF                shift, and go to state 7
    WHILE             shift, and go to state 8
    FOR               shift, and go to state 9
    FUNCTION          shift, and go to state 10
    RETURN            shift, and go to state 11
    BREAK             shift, and go to state 12
    CONTINUE          shift, and go to state 13
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SEMICOLON         shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    UMINUS            shift, and go to state 26

    $default  reduce using rule 1 (program)

    statement   go to state 27
    expression  go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    blockstart  go to state 37
    funcdef     go to state 38
    funcstart   go to state 39
    const       go to state 40
    ifstmt      go to state 41
    whilestmt   go to state 42
    forstmt     go to state 43
    returnstmt  go to state 44


State 3

    0 $accept: program $end •

    $default  accept


State 4

   77 const: NUM •

    $default  reduce using rule 77 (const)


State 5

   43 lvalue: ID •

    $default  reduce using rule 43 (lvalue)


State 6

   78 const: STRING •

    $default  reduce using rule 78 (const)


State 7

   86 ifstmt: IF • LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement
   87       | IF • LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement

    LEFT_PARENTHESIS  shift, and go to state 45


State 8

   88 whilestmt: WHILE • LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement

    LEFT_PARENTHESIS  shift, and go to state 46


State 9

   89 forstmt: FOR • LEFT_PARENTHESIS elist SEMICOLON expression SEMICOLON elist RIGHT_PARENTHESIS statement

    LEFT_PARENTHESIS  shift, and go to state 47


State 10

   75 funcstart: FUNCTION • ID
   76          | FUNCTION •

    ID  shift, and go to state 48

    $default  reduce using rule 76 (funcstart)


State 11

   90 returnstmt: RETURN • SEMICOLON
   91           | RETURN • expression SEMICOLON

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    SEMICOLON         shift, and go to state 49
    DOUBLE_COLON      shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    UMINUS            shift, and go to state 26

    expression  go to state 50
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 40


State 12

    9 statement: BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 51


State 13

   10 statement: CONTINUE • SEMICOLON

    SEMICOLON  shift, and go to state 52


State 14

   31 term: NOT • expression

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    UMINUS            shift, and go to state 26

    expression  go to state 53
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 40


State 15

   44 lvalue: LOCAL • ID

    ID  shift, and go to state 54


State 16

   80 const: TRUE •

    $default  reduce using rule 80 (const)


State 17

   81 const: FALSE •

    $default  reduce using rule 81 (const)


State 18

   79 const: NIL •

    $default  reduce using rule 79 (const)


State 19

   61 objectdef: LEFT_BRACE • elist RIGHT_BRACE
   62          | LEFT_BRACE • indexed RIGHT_BRACE

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 55
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    UMINUS            shift, and go to state 26

    $default  reduce using rule 60 (elist)

    expression   go to state 56
    term         go to state 29
    assignexpr   go to state 30
    primary      go to state 31
    lvalue       go to state 32
    member       go to state 33
    call         go to state 34
    elist        go to state 57
    objectdef    go to state 35
    indexed      go to state 58
    indexedelem  go to state 59
    const        go to state 40


State 20

   68 blockstart: LEFT_BRACKET •

    $default  reduce using rule 68 (blockstart)


State 21

   29 term: LEFT_PARENTHESIS • expression RIGHT_PARENTHESIS
   41 primary: LEFT_PARENTHESIS • funcdef RIGHT_PARENTHESIS
   53 call: LEFT_PARENTHESIS • funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    FUNCTION          shift, and go to state 10
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    UMINUS            shift, and go to state 26

    expression  go to state 60
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    funcdef     go to state 61
    funcstart   go to state 39
    const       go to state 40


State 22

   13 statement: SEMICOLON •

    $default  reduce using rule 13 (statement)


State 23

   45 lvalue: DOUBLE_COLON • ID

    ID  shift, and go to state 62


State 24

   32 term: PLUS_PLUS • lvalue

    ID                shift, and go to state 5
    LOCAL             shift, and go to state 15
    LEFT_PARENTHESIS  shift, and go to state 63
    DOUBLE_COLON      shift, and go to state 23

    lvalue  go to state 64
    member  go to state 33
    call    go to state 65


State 25

   34 term: MINUS_MINUS • lvalue

    ID                shift, and go to state 5
    LOCAL             shift, and go to state 15
    LEFT_PARENTHESIS  shift, and go to state 63
    DOUBLE_COLON      shift, and go to state 23

    lvalue  go to state 66
    member  go to state 33
    call    go to state 65


State 26

   30 term: UMINUS • expression

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    UMINUS            shift, and go to state 26

    expression  go to state 67
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 40


State 27

    2 statements: statements statement •

    $default  reduce using rule 2 (statements)


State 28

    4 statement: expression • SEMICOLON
   15 expression: expression • PLUS expression
   16           | expression • MINUS expression
   17           | expression • MULT expression
   18           | expression • DIV expression
   19           | expression • MOD expression
   20           | expression • GREATER_THAN expression
   21           | expression • GREATER_OR_EQUAL expression
   22           | expression • LESS_THAN expression
   23           | expression • LESS_OR_EQUAL expression
   24           | expression • EQUALS_EQUALS expression
   25           | expression • NOT_EQUALS expression
   26           | expression • AND expression
   27           | expression • OR expression

    AND               shift, and go to state 68
    OR                shift, and go to state 69
    SEMICOLON         shift, and go to state 70
    PLUS              shift, and go to state 71
    MINUS             shift, and go to state 72
    MULT              shift, and go to state 73
    DIV               shift, and go to state 74
    MOD               shift, and go to state 75
    EQUALS_EQUALS     shift, and go to state 76
    NOT_EQUALS        shift, and go to state 77
    GREATER_THAN      shift, and go to state 78
    LESS_THAN         shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    LESS_OR_EQUAL     shift, and go to state 81


State 29

   28 expression: term •

    $default  reduce using rule 28 (expression)


State 30

   14 expression: assignexpr •

    $default  reduce using rule 14 (expression)


State 31

   36 term: primary •

    $default  reduce using rule 36 (term)


State 32

   33 term: lvalue • PLUS_PLUS
   35     | lvalue • MINUS_MINUS
   37 assignexpr: lvalue • EQUALS expression
   38 primary: lvalue •
   47 member: lvalue • DOT ID
   48       | lvalue • LEFT_BRACE expression RIGHT_BRACE
   52 call: lvalue • callsuffix

    LEFT_BRACE        shift, and go to state 82
    LEFT_PARENTHESIS  shift, and go to state 83
    DOT               shift, and go to state 84
    DOUBLE_DOT        shift, and go to state 85
    EQUALS            shift, and go to state 86
    PLUS_PLUS         shift, and go to state 87
    MINUS_MINUS       shift, and go to state 88

    $default  reduce using rule 38 (primary)

    callsuffix  go to state 89
    normcall    go to state 90
    methodcall  go to state 91


State 33

   46 lvalue: member •

    $default  reduce using rule 46 (lvalue)


State 34

   39 primary: call •
   49 member: call • DOT ID
   50       | call • LEFT_BRACE expression RIGHT_BRACE
   51 call: call • LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_BRACE        shift, and go to state 92
    LEFT_PARENTHESIS  shift, and go to state 93
    DOT               shift, and go to state 94

    $default  reduce using rule 39 (primary)


State 35

   40 primary: objectdef •

    $default  reduce using rule 40 (primary)


State 36

   11 statement: block •

    $default  reduce using rule 11 (statement)


State 37

   66 block: blockstart • blockend
   67      | blockstart • blockstmt blockend

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    IF                shift, and go to state 7
    WHILE             shift, and go to state 8
    FOR               shift, and go to state 9
    FUNCTION          shift, and go to state 10
    RETURN            shift, and go to state 11
    BREAK             shift, and go to state 12
    CONTINUE          shift, and go to state 13
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 20
    RIGHT_BRACKET     shift, and go to state 95
    LEFT_PARENTHESIS  shift, and go to state 21
    SEMICOLON         shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    UMINUS            shift, and go to state 26

    statement   go to state 96
    expression  go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    blockstart  go to state 37
    blockend    go to state 97
    blockstmt   go to state 98
    funcdef     go to state 38
    funcstart   go to state 39
    const       go to state 40
    ifstmt      go to state 41
    whilestmt   go to state 42
    forstmt     go to state 43
    returnstmt  go to state 44


State 38

   12 statement: funcdef •

    $default  reduce using rule 12 (statement)


State 39

   74 funcdef: funcstart • LEFT_PARENTHESIS $@1 idlist RIGHT_PARENTHESIS $@2 block

    LEFT_PARENTHESIS  shift, and go to state 99


State 40

   42 primary: const •

    $default  reduce using rule 42 (primary)


State 41

    5 statement: ifstmt •

    $default  reduce using rule 5 (statement)


State 42

    6 statement: whilestmt •

    $default  reduce using rule 6 (statement)


State 43

    7 statement: forstmt •

    $default  reduce using rule 7 (statement)


State 44

    8 statement: returnstmt •

    $default  reduce using rule 8 (statement)


State 45

   86 ifstmt: IF LEFT_PARENTHESIS • expression RIGHT_PARENTHESIS statement
   87       | IF LEFT_PARENTHESIS • expression RIGHT_PARENTHESIS statement ELSE statement

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    UMINUS            shift, and go to state 26

    expression  go to state 100
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 40


State 46

   88 whilestmt: WHILE LEFT_PARENTHESIS • expression RIGHT_PARENTHESIS statement

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    UMINUS            shift, and go to state 26

    expression  go to state 101
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 40


State 47

   89 forstmt: FOR LEFT_PARENTHESIS • elist SEMICOLON expression SEMICOLON elist RIGHT_PARENTHESIS statement

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    UMINUS            shift, and go to state 26

    $default  reduce using rule 60 (elist)

    expression  go to state 56
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 102
    objectdef   go to state 35
    const       go to state 40


State 48

   75 funcstart: FUNCTION ID •

    $default  reduce using rule 75 (funcstart)


State 49

   90 returnstmt: RETURN SEMICOLON •

    $default  reduce using rule 90 (returnstmt)


State 50

   15 expression: expression • PLUS expression
   16           | expression • MINUS expression
   17           | expression • MULT expression
   18           | expression • DIV expression
   19           | expression • MOD expression
   20           | expression • GREATER_THAN expression
   21           | expression • GREATER_OR_EQUAL expression
   22           | expression • LESS_THAN expression
   23           | expression • LESS_OR_EQUAL expression
   24           | expression • EQUALS_EQUALS expression
   25           | expression • NOT_EQUALS expression
   26           | expression • AND expression
   27           | expression • OR expression
   91 returnstmt: RETURN expression • SEMICOLON

    AND               shift, and go to state 68
    OR                shift, and go to state 69
    SEMICOLON         shift, and go to state 103
    PLUS              shift, and go to state 71
    MINUS             shift, and go to state 72
    MULT              shift, and go to state 73
    DIV               shift, and go to state 74
    MOD               shift, and go to state 75
    EQUALS_EQUALS     shift, and go to state 76
    NOT_EQUALS        shift, and go to state 77
    GREATER_THAN      shift, and go to state 78
    LESS_THAN         shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    LESS_OR_EQUAL     shift, and go to state 81


State 51

    9 statement: BREAK SEMICOLON •

    $default  reduce using rule 9 (statement)


State 52

   10 statement: CONTINUE SEMICOLON •

    $default  reduce using rule 10 (statement)


State 53

   15 expression: expression • PLUS expression
   16           | expression • MINUS expression
   17           | expression • MULT expression
   18           | expression • DIV expression
   19           | expression • MOD expression
   20           | expression • GREATER_THAN expression
   21           | expression • GREATER_OR_EQUAL expression
   22           | expression • LESS_THAN expression
   23           | expression • LESS_OR_EQUAL expression
   24           | expression • EQUALS_EQUALS expression
   25           | expression • NOT_EQUALS expression
   26           | expression • AND expression
   27           | expression • OR expression
   31 term: NOT expression •

    $default  reduce using rule 31 (term)


State 54

   44 lvalue: LOCAL ID •

    $default  reduce using rule 44 (lvalue)


State 55

   65 indexedelem: LEFT_BRACKET • expression COLON expression RIGHT_BRACKET

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    UMINUS            shift, and go to state 26

    expression  go to state 104
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 40


State 56

   15 expression: expression • PLUS expression
   16           | expression • MINUS expression
   17           | expression • MULT expression
   18           | expression • DIV expression
   19           | expression • MOD expression
   20           | expression • GREATER_THAN expression
   21           | expression • GREATER_OR_EQUAL expression
   22           | expression • LESS_THAN expression
   23           | expression • LESS_OR_EQUAL expression
   24           | expression • EQUALS_EQUALS expression
   25           | expression • NOT_EQUALS expression
   26           | expression • AND expression
   27           | expression • OR expression
   58 elist: expression •
   59      | expression • COMMA elist

    AND               shift, and go to state 68
    OR                shift, and go to state 69
    COMMA             shift, and go to state 105
    PLUS              shift, and go to state 71
    MINUS             shift, and go to state 72
    MULT              shift, and go to state 73
    DIV               shift, and go to state 74
    MOD               shift, and go to state 75
    EQUALS_EQUALS     shift, and go to state 76
    NOT_EQUALS        shift, and go to state 77
    GREATER_THAN      shift, and go to state 78
    LESS_THAN         shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    LESS_OR_EQUAL     shift, and go to state 81

    $default  reduce using rule 58 (elist)


State 57

   61 objectdef: LEFT_BRACE elist • RIGHT_BRACE

    RIGHT_BRACE  shift, and go to state 106


State 58

   62 objectdef: LEFT_BRACE indexed • RIGHT_BRACE

    RIGHT_BRACE  shift, and go to state 107


State 59

   63 indexed: indexedelem •
   64        | indexedelem • COMMA indexed

    COMMA  shift, and go to state 108

    $default  reduce using rule 63 (indexed)


State 60

   15 expression: expression • PLUS expression
   16           | expression • MINUS expression
   17           | expression • MULT expression
   18           | expression • DIV expression
   19           | expression • MOD expression
   20           | expression • GREATER_THAN expression
   21           | expression • GREATER_OR_EQUAL expression
   22           | expression • LESS_THAN expression
   23           | expression • LESS_OR_EQUAL expression
   24           | expression • EQUALS_EQUALS expression
   25           | expression • NOT_EQUALS expression
   26           | expression • AND expression
   27           | expression • OR expression
   29 term: LEFT_PARENTHESIS expression • RIGHT_PARENTHESIS

    AND                shift, and go to state 68
    OR                 shift, and go to state 69
    RIGHT_PARENTHESIS  shift, and go to state 109
    PLUS               shift, and go to state 71
    MINUS              shift, and go to state 72
    MULT               shift, and go to state 73
    DIV                shift, and go to state 74
    MOD                shift, and go to state 75
    EQUALS_EQUALS      shift, and go to state 76
    NOT_EQUALS         shift, and go to state 77
    GREATER_THAN       shift, and go to state 78
    LESS_THAN          shift, and go to state 79
    GREATER_OR_EQUAL   shift, and go to state 80
    LESS_OR_EQUAL      shift, and go to state 81


State 61

   41 primary: LEFT_PARENTHESIS funcdef • RIGHT_PARENTHESIS
   53 call: LEFT_PARENTHESIS funcdef • RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 110


State 62

   45 lvalue: DOUBLE_COLON ID •

    $default  reduce using rule 45 (lvalue)


State 63

   53 call: LEFT_PARENTHESIS • funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    FUNCTION  shift, and go to state 10

    funcdef    go to state 111
    funcstart  go to state 39


State 64

   32 term: PLUS_PLUS lvalue •
   47 member: lvalue • DOT ID
   48       | lvalue • LEFT_BRACE expression RIGHT_BRACE
   52 call: lvalue • callsuffix

    LEFT_BRACE        shift, and go to state 82
    LEFT_PARENTHESIS  shift, and go to state 83
    DOT               shift, and go to state 84
    DOUBLE_DOT        shift, and go to state 85

    $default  reduce using rule 32 (term)

    callsuffix  go to state 89
    normcall    go to state 90
    methodcall  go to state 91


State 65

   49 member: call • DOT ID
   50       | call • LEFT_BRACE expression RIGHT_BRACE
   51 call: call • LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_BRACE        shift, and go to state 92
    LEFT_PARENTHESIS  shift, and go to state 93
    DOT               shift, and go to state 94


State 66

   34 term: MINUS_MINUS lvalue •
   47 member: lvalue • DOT ID
   48       | lvalue • LEFT_BRACE expression RIGHT_BRACE
   52 call: lvalue • callsuffix

    LEFT_BRACE        shift, and go to state 82
    LEFT_PARENTHESIS  shift, and go to state 83
    DOT               shift, and go to state 84
    DOUBLE_DOT        shift, and go to state 85

    $default  reduce using rule 34 (term)

    callsuffix  go to state 89
    normcall    go to state 90
    methodcall  go to state 91


State 67

   15 expression: expression • PLUS expression
   16           | expression • MINUS expression
   17           | expression • MULT expression
   18           | expression • DIV expression
   19           | expression • MOD expression
   20           | expression • GREATER_THAN expression
   21           | expression • GREATER_OR_EQUAL expression
   22           | expression • LESS_THAN expression
   23           | expression • LESS_OR_EQUAL expression
   24           | expression • EQUALS_EQUALS expression
   25           | expression • NOT_EQUALS expression
   26           | expression • AND expression
   27           | expression • OR expression
   30 term: UMINUS expression •

    $default  reduce using rule 30 (term)


State 68

   26 expression: expression AND • expression

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    UMINUS            shift, and go to state 26

    expression  go to state 112
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 40


State 69

   27 expression: expression OR • expression

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    UMINUS            shift, and go to state 26

    expression  go to state 113
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 40


State 70

    4 statement: expression SEMICOLON •

    $default  reduce using rule 4 (statement)


State 71

   15 expression: expression PLUS • expression

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    UMINUS            shift, and go to state 26

    expression  go to state 114
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 40


State 72

   16 expression: expression MINUS • expression

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    UMINUS            shift, and go to state 26

    expression  go to state 115
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 40


State 73

   17 expression: expression MULT • expression

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    UMINUS            shift, and go to state 26

    expression  go to state 116
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 40


State 74

   18 expression: expression DIV • expression

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    UMINUS            shift, and go to state 26

    expression  go to state 117
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 40


State 75

   19 expression: expression MOD • expression

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    UMINUS            shift, and go to state 26

    expression  go to state 118
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 40


State 76

   24 expression: expression EQUALS_EQUALS • expression

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    UMINUS            shift, and go to state 26

    expression  go to state 119
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 40


State 77

   25 expression: expression NOT_EQUALS • expression

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    UMINUS            shift, and go to state 26

    expression  go to state 120
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 40


State 78

   20 expression: expression GREATER_THAN • expression

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    UMINUS            shift, and go to state 26

    expression  go to state 121
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 40


State 79

   22 expression: expression LESS_THAN • expression

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    UMINUS            shift, and go to state 26

    expression  go to state 122
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 40


State 80

   21 expression: expression GREATER_OR_EQUAL • expression

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    UMINUS            shift, and go to state 26

    expression  go to state 123
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 40


State 81

   23 expression: expression LESS_OR_EQUAL • expression

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    UMINUS            shift, and go to state 26

    expression  go to state 124
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 40


State 82

   48 member: lvalue LEFT_BRACE • expression RIGHT_BRACE

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    UMINUS            shift, and go to state 26

    expression  go to state 125
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 40


State 83

   56 normcall: LEFT_PARENTHESIS • elist RIGHT_PARENTHESIS

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    UMINUS            shift, and go to state 26

    $default  reduce using rule 60 (elist)

    expression  go to state 56
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 126
    objectdef   go to state 35
    const       go to state 40


State 84

   47 member: lvalue DOT • ID

    ID  shift, and go to state 127


State 85

   57 methodcall: DOUBLE_DOT • ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    ID  shift, and go to state 128


State 86

   37 assignexpr: lvalue EQUALS • expression

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    UMINUS            shift, and go to state 26

    expression  go to state 129
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 40


State 87

   33 term: lvalue PLUS_PLUS •

    $default  reduce using rule 33 (term)


State 88

   35 term: lvalue MINUS_MINUS •

    $default  reduce using rule 35 (term)


State 89

   52 call: lvalue callsuffix •

    $default  reduce using rule 52 (call)


State 90

   54 callsuffix: normcall •

    $default  reduce using rule 54 (callsuffix)


State 91

   55 callsuffix: methodcall •

    $default  reduce using rule 55 (callsuffix)


State 92

   50 member: call LEFT_BRACE • expression RIGHT_BRACE

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    UMINUS            shift, and go to state 26

    expression  go to state 130
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 40


State 93

   51 call: call LEFT_PARENTHESIS • elist RIGHT_PARENTHESIS

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    UMINUS            shift, and go to state 26

    $default  reduce using rule 60 (elist)

    expression  go to state 56
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 131
    objectdef   go to state 35
    const       go to state 40


State 94

   49 member: call DOT • ID

    ID  shift, and go to state 132


State 95

   69 blockend: RIGHT_BRACKET •

    $default  reduce using rule 69 (blockend)


State 96

   70 blockstmt: statement •
   71          | statement • blockstmt

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    IF                shift, and go to state 7
    WHILE             shift, and go to state 8
    FOR               shift, and go to state 9
    FUNCTION          shift, and go to state 10
    RETURN            shift, and go to state 11
    BREAK             shift, and go to state 12
    CONTINUE          shift, and go to state 13
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SEMICOLON         shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    UMINUS            shift, and go to state 26

    $default  reduce using rule 70 (blockstmt)

    statement   go to state 96
    expression  go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    blockstart  go to state 37
    blockstmt   go to state 133
    funcdef     go to state 38
    funcstart   go to state 39
    const       go to state 40
    ifstmt      go to state 41
    whilestmt   go to state 42
    forstmt     go to state 43
    returnstmt  go to state 44


State 97

   66 block: blockstart blockend •

    $default  reduce using rule 66 (block)


State 98

   67 block: blockstart blockstmt • blockend

    RIGHT_BRACKET  shift, and go to state 95

    blockend  go to state 134


State 99

   74 funcdef: funcstart LEFT_PARENTHESIS • $@1 idlist RIGHT_PARENTHESIS $@2 block

    $default  reduce using rule 72 ($@1)

    $@1  go to state 135


State 100

   15 expression: expression • PLUS expression
   16           | expression • MINUS expression
   17           | expression • MULT expression
   18           | expression • DIV expression
   19           | expression • MOD expression
   20           | expression • GREATER_THAN expression
   21           | expression • GREATER_OR_EQUAL expression
   22           | expression • LESS_THAN expression
   23           | expression • LESS_OR_EQUAL expression
   24           | expression • EQUALS_EQUALS expression
   25           | expression • NOT_EQUALS expression
   26           | expression • AND expression
   27           | expression • OR expression
   86 ifstmt: IF LEFT_PARENTHESIS expression • RIGHT_PARENTHESIS statement
   87       | IF LEFT_PARENTHESIS expression • RIGHT_PARENTHESIS statement ELSE statement

    AND                shift, and go to state 68
    OR                 shift, and go to state 69
    RIGHT_PARENTHESIS  shift, and go to state 136
    PLUS               shift, and go to state 71
    MINUS              shift, and go to state 72
    MULT               shift, and go to state 73
    DIV                shift, and go to state 74
    MOD                shift, and go to state 75
    EQUALS_EQUALS      shift, and go to state 76
    NOT_EQUALS         shift, and go to state 77
    GREATER_THAN       shift, and go to state 78
    LESS_THAN          shift, and go to state 79
    GREATER_OR_EQUAL   shift, and go to state 80
    LESS_OR_EQUAL      shift, and go to state 81


State 101

   15 expression: expression • PLUS expression
   16           | expression • MINUS expression
   17           | expression • MULT expression
   18           | expression • DIV expression
   19           | expression • MOD expression
   20           | expression • GREATER_THAN expression
   21           | expression • GREATER_OR_EQUAL expression
   22           | expression • LESS_THAN expression
   23           | expression • LESS_OR_EQUAL expression
   24           | expression • EQUALS_EQUALS expression
   25           | expression • NOT_EQUALS expression
   26           | expression • AND expression
   27           | expression • OR expression
   88 whilestmt: WHILE LEFT_PARENTHESIS expression • RIGHT_PARENTHESIS statement

    AND                shift, and go to state 68
    OR                 shift, and go to state 69
    RIGHT_PARENTHESIS  shift, and go to state 137
    PLUS               shift, and go to state 71
    MINUS              shift, and go to state 72
    MULT               shift, and go to state 73
    DIV                shift, and go to state 74
    MOD                shift, and go to state 75
    EQUALS_EQUALS      shift, and go to state 76
    NOT_EQUALS         shift, and go to state 77
    GREATER_THAN       shift, and go to state 78
    LESS_THAN          shift, and go to state 79
    GREATER_OR_EQUAL   shift, and go to state 80
    LESS_OR_EQUAL      shift, and go to state 81


State 102

   89 forstmt: FOR LEFT_PARENTHESIS elist • SEMICOLON expression SEMICOLON elist RIGHT_PARENTHESIS statement

    SEMICOLON  shift, and go to state 138


State 103

   91 returnstmt: RETURN expression SEMICOLON •

    $default  reduce using rule 91 (returnstmt)


State 104

   15 expression: expression • PLUS expression
   16           | expression • MINUS expression
   17           | expression • MULT expression
   18           | expression • DIV expression
   19           | expression • MOD expression
   20           | expression • GREATER_THAN expression
   21           | expression • GREATER_OR_EQUAL expression
   22           | expression • LESS_THAN expression
   23           | expression • LESS_OR_EQUAL expression
   24           | expression • EQUALS_EQUALS expression
   25           | expression • NOT_EQUALS expression
   26           | expression • AND expression
   27           | expression • OR expression
   65 indexedelem: LEFT_BRACKET expression • COLON expression RIGHT_BRACKET

    AND               shift, and go to state 68
    OR                shift, and go to state 69
    COLON             shift, and go to state 139
    PLUS              shift, and go to state 71
    MINUS             shift, and go to state 72
    MULT              shift, and go to state 73
    DIV               shift, and go to state 74
    MOD               shift, and go to state 75
    EQUALS_EQUALS     shift, and go to state 76
    NOT_EQUALS        shift, and go to state 77
    GREATER_THAN      shift, and go to state 78
    LESS_THAN         shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    LESS_OR_EQUAL     shift, and go to state 81


State 105

   59 elist: expression COMMA • elist

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    UMINUS            shift, and go to state 26

    $default  reduce using rule 60 (elist)

    expression  go to state 56
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 140
    objectdef   go to state 35
    const       go to state 40


State 106

   61 objectdef: LEFT_BRACE elist RIGHT_BRACE •

    $default  reduce using rule 61 (objectdef)


State 107

   62 objectdef: LEFT_BRACE indexed RIGHT_BRACE •

    $default  reduce using rule 62 (objectdef)


State 108

   64 indexed: indexedelem COMMA • indexed

    LEFT_BRACKET  shift, and go to state 55

    indexed      go to state 141
    indexedelem  go to state 59


State 109

   29 term: LEFT_PARENTHESIS expression RIGHT_PARENTHESIS •

    $default  reduce using rule 29 (term)


State 110

   41 primary: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS •
   53 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS • LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 142

    $default  reduce using rule 41 (primary)


State 111

   53 call: LEFT_PARENTHESIS funcdef • RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 143


State 112

   15 expression: expression • PLUS expression
   16           | expression • MINUS expression
   17           | expression • MULT expression
   18           | expression • DIV expression
   19           | expression • MOD expression
   20           | expression • GREATER_THAN expression
   21           | expression • GREATER_OR_EQUAL expression
   22           | expression • LESS_THAN expression
   23           | expression • LESS_OR_EQUAL expression
   24           | expression • EQUALS_EQUALS expression
   25           | expression • NOT_EQUALS expression
   26           | expression • AND expression
   26           | expression AND expression •
   27           | expression • OR expression

    PLUS              shift, and go to state 71
    MINUS             shift, and go to state 72
    MULT              shift, and go to state 73
    DIV               shift, and go to state 74
    MOD               shift, and go to state 75
    EQUALS_EQUALS     shift, and go to state 76
    NOT_EQUALS        shift, and go to state 77
    GREATER_THAN      shift, and go to state 78
    LESS_THAN         shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    LESS_OR_EQUAL     shift, and go to state 81

    $default  reduce using rule 26 (expression)


State 113

   15 expression: expression • PLUS expression
   16           | expression • MINUS expression
   17           | expression • MULT expression
   18           | expression • DIV expression
   19           | expression • MOD expression
   20           | expression • GREATER_THAN expression
   21           | expression • GREATER_OR_EQUAL expression
   22           | expression • LESS_THAN expression
   23           | expression • LESS_OR_EQUAL expression
   24           | expression • EQUALS_EQUALS expression
   25           | expression • NOT_EQUALS expression
   26           | expression • AND expression
   27           | expression • OR expression
   27           | expression OR expression •

    AND               shift, and go to state 68
    PLUS              shift, and go to state 71
    MINUS             shift, and go to state 72
    MULT              shift, and go to state 73
    DIV               shift, and go to state 74
    MOD               shift, and go to state 75
    EQUALS_EQUALS     shift, and go to state 76
    NOT_EQUALS        shift, and go to state 77
    GREATER_THAN      shift, and go to state 78
    LESS_THAN         shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    LESS_OR_EQUAL     shift, and go to state 81

    $default  reduce using rule 27 (expression)


State 114

   15 expression: expression • PLUS expression
   15           | expression PLUS expression •
   16           | expression • MINUS expression
   17           | expression • MULT expression
   18           | expression • DIV expression
   19           | expression • MOD expression
   20           | expression • GREATER_THAN expression
   21           | expression • GREATER_OR_EQUAL expression
   22           | expression • LESS_THAN expression
   23           | expression • LESS_OR_EQUAL expression
   24           | expression • EQUALS_EQUALS expression
   25           | expression • NOT_EQUALS expression
   26           | expression • AND expression
   27           | expression • OR expression

    MULT  shift, and go to state 73
    DIV   shift, and go to state 74
    MOD   shift, and go to state 75

    $default  reduce using rule 15 (expression)


State 115

   15 expression: expression • PLUS expression
   16           | expression • MINUS expression
   16           | expression MINUS expression •
   17           | expression • MULT expression
   18           | expression • DIV expression
   19           | expression • MOD expression
   20           | expression • GREATER_THAN expression
   21           | expression • GREATER_OR_EQUAL expression
   22           | expression • LESS_THAN expression
   23           | expression • LESS_OR_EQUAL expression
   24           | expression • EQUALS_EQUALS expression
   25           | expression • NOT_EQUALS expression
   26           | expression • AND expression
   27           | expression • OR expression

    MULT  shift, and go to state 73
    DIV   shift, and go to state 74
    MOD   shift, and go to state 75

    $default  reduce using rule 16 (expression)


State 116

   15 expression: expression • PLUS expression
   16           | expression • MINUS expression
   17           | expression • MULT expression
   17           | expression MULT expression •
   18           | expression • DIV expression
   19           | expression • MOD expression
   20           | expression • GREATER_THAN expression
   21           | expression • GREATER_OR_EQUAL expression
   22           | expression • LESS_THAN expression
   23           | expression • LESS_OR_EQUAL expression
   24           | expression • EQUALS_EQUALS expression
   25           | expression • NOT_EQUALS expression
   26           | expression • AND expression
   27           | expression • OR expression

    $default  reduce using rule 17 (expression)


State 117

   15 expression: expression • PLUS expression
   16           | expression • MINUS expression
   17           | expression • MULT expression
   18           | expression • DIV expression
   18           | expression DIV expression •
   19           | expression • MOD expression
   20           | expression • GREATER_THAN expression
   21           | expression • GREATER_OR_EQUAL expression
   22           | expression • LESS_THAN expression
   23           | expression • LESS_OR_EQUAL expression
   24           | expression • EQUALS_EQUALS expression
   25           | expression • NOT_EQUALS expression
   26           | expression • AND expression
   27           | expression • OR expression

    $default  reduce using rule 18 (expression)


State 118

   15 expression: expression • PLUS expression
   16           | expression • MINUS expression
   17           | expression • MULT expression
   18           | expression • DIV expression
   19           | expression • MOD expression
   19           | expression MOD expression •
   20           | expression • GREATER_THAN expression
   21           | expression • GREATER_OR_EQUAL expression
   22           | expression • LESS_THAN expression
   23           | expression • LESS_OR_EQUAL expression
   24           | expression • EQUALS_EQUALS expression
   25           | expression • NOT_EQUALS expression
   26           | expression • AND expression
   27           | expression • OR expression

    $default  reduce using rule 19 (expression)


State 119

   15 expression: expression • PLUS expression
   16           | expression • MINUS expression
   17           | expression • MULT expression
   18           | expression • DIV expression
   19           | expression • MOD expression
   20           | expression • GREATER_THAN expression
   21           | expression • GREATER_OR_EQUAL expression
   22           | expression • LESS_THAN expression
   23           | expression • LESS_OR_EQUAL expression
   24           | expression • EQUALS_EQUALS expression
   24           | expression EQUALS_EQUALS expression •
   25           | expression • NOT_EQUALS expression
   26           | expression • AND expression
   27           | expression • OR expression

    PLUS              shift, and go to state 71
    MINUS             shift, and go to state 72
    MULT              shift, and go to state 73
    DIV               shift, and go to state 74
    MOD               shift, and go to state 75
    GREATER_THAN      shift, and go to state 78
    LESS_THAN         shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    LESS_OR_EQUAL     shift, and go to state 81

    EQUALS_EQUALS  error (nonassociative)
    NOT_EQUALS     error (nonassociative)

    $default  reduce using rule 24 (expression)


State 120

   15 expression: expression • PLUS expression
   16           | expression • MINUS expression
   17           | expression • MULT expression
   18           | expression • DIV expression
   19           | expression • MOD expression
   20           | expression • GREATER_THAN expression
   21           | expression • GREATER_OR_EQUAL expression
   22           | expression • LESS_THAN expression
   23           | expression • LESS_OR_EQUAL expression
   24           | expression • EQUALS_EQUALS expression
   25           | expression • NOT_EQUALS expression
   25           | expression NOT_EQUALS expression •
   26           | expression • AND expression
   27           | expression • OR expression

    PLUS              shift, and go to state 71
    MINUS             shift, and go to state 72
    MULT              shift, and go to state 73
    DIV               shift, and go to state 74
    MOD               shift, and go to state 75
    GREATER_THAN      shift, and go to state 78
    LESS_THAN         shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    LESS_OR_EQUAL     shift, and go to state 81

    EQUALS_EQUALS  error (nonassociative)
    NOT_EQUALS     error (nonassociative)

    $default  reduce using rule 25 (expression)


State 121

   15 expression: expression • PLUS expression
   16           | expression • MINUS expression
   17           | expression • MULT expression
   18           | expression • DIV expression
   19           | expression • MOD expression
   20           | expression • GREATER_THAN expression
   20           | expression GREATER_THAN expression •
   21           | expression • GREATER_OR_EQUAL expression
   22           | expression • LESS_THAN expression
   23           | expression • LESS_OR_EQUAL expression
   24           | expression • EQUALS_EQUALS expression
   25           | expression • NOT_EQUALS expression
   26           | expression • AND expression
   27           | expression • OR expression

    PLUS   shift, and go to state 71
    MINUS  shift, and go to state 72
    MULT   shift, and go to state 73
    DIV    shift, and go to state 74
    MOD    shift, and go to state 75

    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)

    $default  reduce using rule 20 (expression)


State 122

   15 expression: expression • PLUS expression
   16           | expression • MINUS expression
   17           | expression • MULT expression
   18           | expression • DIV expression
   19           | expression • MOD expression
   20           | expression • GREATER_THAN expression
   21           | expression • GREATER_OR_EQUAL expression
   22           | expression • LESS_THAN expression
   22           | expression LESS_THAN expression •
   23           | expression • LESS_OR_EQUAL expression
   24           | expression • EQUALS_EQUALS expression
   25           | expression • NOT_EQUALS expression
   26           | expression • AND expression
   27           | expression • OR expression

    PLUS   shift, and go to state 71
    MINUS  shift, and go to state 72
    MULT   shift, and go to state 73
    DIV    shift, and go to state 74
    MOD    shift, and go to state 75

    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)

    $default  reduce using rule 22 (expression)


State 123

   15 expression: expression • PLUS expression
   16           | expression • MINUS expression
   17           | expression • MULT expression
   18           | expression • DIV expression
   19           | expression • MOD expression
   20           | expression • GREATER_THAN expression
   21           | expression • GREATER_OR_EQUAL expression
   21           | expression GREATER_OR_EQUAL expression •
   22           | expression • LESS_THAN expression
   23           | expression • LESS_OR_EQUAL expression
   24           | expression • EQUALS_EQUALS expression
   25           | expression • NOT_EQUALS expression
   26           | expression • AND expression
   27           | expression • OR expression

    PLUS   shift, and go to state 71
    MINUS  shift, and go to state 72
    MULT   shift, and go to state 73
    DIV    shift, and go to state 74
    MOD    shift, and go to state 75

    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)

    $default  reduce using rule 21 (expression)


State 124

   15 expression: expression • PLUS expression
   16           | expression • MINUS expression
   17           | expression • MULT expression
   18           | expression • DIV expression
   19           | expression • MOD expression
   20           | expression • GREATER_THAN expression
   21           | expression • GREATER_OR_EQUAL expression
   22           | expression • LESS_THAN expression
   23           | expression • LESS_OR_EQUAL expression
   23           | expression LESS_OR_EQUAL expression •
   24           | expression • EQUALS_EQUALS expression
   25           | expression • NOT_EQUALS expression
   26           | expression • AND expression
   27           | expression • OR expression

    PLUS   shift, and go to state 71
    MINUS  shift, and go to state 72
    MULT   shift, and go to state 73
    DIV    shift, and go to state 74
    MOD    shift, and go to state 75

    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)

    $default  reduce using rule 23 (expression)


State 125

   15 expression: expression • PLUS expression
   16           | expression • MINUS expression
   17           | expression • MULT expression
   18           | expression • DIV expression
   19           | expression • MOD expression
   20           | expression • GREATER_THAN expression
   21           | expression • GREATER_OR_EQUAL expression
   22           | expression • LESS_THAN expression
   23           | expression • LESS_OR_EQUAL expression
   24           | expression • EQUALS_EQUALS expression
   25           | expression • NOT_EQUALS expression
   26           | expression • AND expression
   27           | expression • OR expression
   48 member: lvalue LEFT_BRACE expression • RIGHT_BRACE

    AND               shift, and go to state 68
    OR                shift, and go to state 69
    RIGHT_BRACE       shift, and go to state 144
    PLUS              shift, and go to state 71
    MINUS             shift, and go to state 72
    MULT              shift, and go to state 73
    DIV               shift, and go to state 74
    MOD               shift, and go to state 75
    EQUALS_EQUALS     shift, and go to state 76
    NOT_EQUALS        shift, and go to state 77
    GREATER_THAN      shift, and go to state 78
    LESS_THAN         shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    LESS_OR_EQUAL     shift, and go to state 81


State 126

   56 normcall: LEFT_PARENTHESIS elist • RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 145


State 127

   47 member: lvalue DOT ID •

    $default  reduce using rule 47 (member)


State 128

   57 methodcall: DOUBLE_DOT ID • LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 146


State 129

   15 expression: expression • PLUS expression
   16           | expression • MINUS expression
   17           | expression • MULT expression
   18           | expression • DIV expression
   19           | expression • MOD expression
   20           | expression • GREATER_THAN expression
   21           | expression • GREATER_OR_EQUAL expression
   22           | expression • LESS_THAN expression
   23           | expression • LESS_OR_EQUAL expression
   24           | expression • EQUALS_EQUALS expression
   25           | expression • NOT_EQUALS expression
   26           | expression • AND expression
   27           | expression • OR expression
   37 assignexpr: lvalue EQUALS expression •

    AND               shift, and go to state 68
    OR                shift, and go to state 69
    PLUS              shift, and go to state 71
    MINUS             shift, and go to state 72
    MULT              shift, and go to state 73
    DIV               shift, and go to state 74
    MOD               shift, and go to state 75
    EQUALS_EQUALS     shift, and go to state 76
    NOT_EQUALS        shift, and go to state 77
    GREATER_THAN      shift, and go to state 78
    LESS_THAN         shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    LESS_OR_EQUAL     shift, and go to state 81

    $default  reduce using rule 37 (assignexpr)


State 130

   15 expression: expression • PLUS expression
   16           | expression • MINUS expression
   17           | expression • MULT expression
   18           | expression • DIV expression
   19           | expression • MOD expression
   20           | expression • GREATER_THAN expression
   21           | expression • GREATER_OR_EQUAL expression
   22           | expression • LESS_THAN expression
   23           | expression • LESS_OR_EQUAL expression
   24           | expression • EQUALS_EQUALS expression
   25           | expression • NOT_EQUALS expression
   26           | expression • AND expression
   27           | expression • OR expression
   50 member: call LEFT_BRACE expression • RIGHT_BRACE

    AND               shift, and go to state 68
    OR                shift, and go to state 69
    RIGHT_BRACE       shift, and go to state 147
    PLUS              shift, and go to state 71
    MINUS             shift, and go to state 72
    MULT              shift, and go to state 73
    DIV               shift, and go to state 74
    MOD               shift, and go to state 75
    EQUALS_EQUALS     shift, and go to state 76
    NOT_EQUALS        shift, and go to state 77
    GREATER_THAN      shift, and go to state 78
    LESS_THAN         shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    LESS_OR_EQUAL     shift, and go to state 81


State 131

   51 call: call LEFT_PARENTHESIS elist • RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 148


State 132

   49 member: call DOT ID •

    $default  reduce using rule 49 (member)


State 133

   71 blockstmt: statement blockstmt •

    $default  reduce using rule 71 (blockstmt)


State 134

   67 block: blockstart blockstmt blockend •

    $default  reduce using rule 67 (block)


State 135

   74 funcdef: funcstart LEFT_PARENTHESIS $@1 • idlist RIGHT_PARENTHESIS $@2 block

    ID  shift, and go to state 149

    $default  reduce using rule 84 (idlist)

    idlist  go to state 150
    arg     go to state 151


State 136

   86 ifstmt: IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS • statement
   87       | IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS • statement ELSE statement

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    IF                shift, and go to state 7
    WHILE             shift, and go to state 8
    FOR               shift, and go to state 9
    FUNCTION          shift, and go to state 10
    RETURN            shift, and go to state 11
    BREAK             shift, and go to state 12
    CONTINUE          shift, and go to state 13
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SEMICOLON         shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    UMINUS            shift, and go to state 26

    statement   go to state 152
    expression  go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    blockstart  go to state 37
    funcdef     go to state 38
    funcstart   go to state 39
    const       go to state 40
    ifstmt      go to state 41
    whilestmt   go to state 42
    forstmt     go to state 43
    returnstmt  go to state 44


State 137

   88 whilestmt: WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS • statement

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    IF                shift, and go to state 7
    WHILE             shift, and go to state 8
    FOR               shift, and go to state 9
    FUNCTION          shift, and go to state 10
    RETURN            shift, and go to state 11
    BREAK             shift, and go to state 12
    CONTINUE          shift, and go to state 13
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SEMICOLON         shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    UMINUS            shift, and go to state 26

    statement   go to state 153
    expression  go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    blockstart  go to state 37
    funcdef     go to state 38
    funcstart   go to state 39
    const       go to state 40
    ifstmt      go to state 41
    whilestmt   go to state 42
    forstmt     go to state 43
    returnstmt  go to state 44


State 138

   89 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON • expression SEMICOLON elist RIGHT_PARENTHESIS statement

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    UMINUS            shift, and go to state 26

    expression  go to state 154
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 40


State 139

   65 indexedelem: LEFT_BRACKET expression COLON • expression RIGHT_BRACKET

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    UMINUS            shift, and go to state 26

    expression  go to state 155
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 40


State 140

   59 elist: expression COMMA elist •

    $default  reduce using rule 59 (elist)


State 141

   64 indexed: indexedelem COMMA indexed •

    $default  reduce using rule 64 (indexed)


State 142

   53 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS • elist RIGHT_PARENTHESIS

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    UMINUS            shift, and go to state 26

    $default  reduce using rule 60 (elist)

    expression  go to state 56
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 156
    objectdef   go to state 35
    const       go to state 40


State 143

   53 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS • LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 142


State 144

   48 member: lvalue LEFT_BRACE expression RIGHT_BRACE •

    $default  reduce using rule 48 (member)


State 145

   56 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS •

    $default  reduce using rule 56 (normcall)


State 146

   57 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS • elist RIGHT_PARENTHESIS

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    UMINUS            shift, and go to state 26

    $default  reduce using rule 60 (elist)

    expression  go to state 56
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 157
    objectdef   go to state 35
    const       go to state 40


State 147

   50 member: call LEFT_BRACE expression RIGHT_BRACE •

    $default  reduce using rule 50 (member)


State 148

   51 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS •

    $default  reduce using rule 51 (call)


State 149

   85 arg: ID •

    $default  reduce using rule 85 (arg)


State 150

   74 funcdef: funcstart LEFT_PARENTHESIS $@1 idlist • RIGHT_PARENTHESIS $@2 block

    RIGHT_PARENTHESIS  shift, and go to state 158


State 151

   82 idlist: arg •
   83       | arg • COMMA idlist

    COMMA  shift, and go to state 159

    $default  reduce using rule 82 (idlist)


State 152

   86 ifstmt: IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement •
   87       | IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement • ELSE statement

    ELSE  shift, and go to state 160

    ELSE      [reduce using rule 86 (ifstmt)]
    $default  reduce using rule 86 (ifstmt)


State 153

   88 whilestmt: WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement •

    $default  reduce using rule 88 (whilestmt)


State 154

   15 expression: expression • PLUS expression
   16           | expression • MINUS expression
   17           | expression • MULT expression
   18           | expression • DIV expression
   19           | expression • MOD expression
   20           | expression • GREATER_THAN expression
   21           | expression • GREATER_OR_EQUAL expression
   22           | expression • LESS_THAN expression
   23           | expression • LESS_OR_EQUAL expression
   24           | expression • EQUALS_EQUALS expression
   25           | expression • NOT_EQUALS expression
   26           | expression • AND expression
   27           | expression • OR expression
   89 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expression • SEMICOLON elist RIGHT_PARENTHESIS statement

    AND               shift, and go to state 68
    OR                shift, and go to state 69
    SEMICOLON         shift, and go to state 161
    PLUS              shift, and go to state 71
    MINUS             shift, and go to state 72
    MULT              shift, and go to state 73
    DIV               shift, and go to state 74
    MOD               shift, and go to state 75
    EQUALS_EQUALS     shift, and go to state 76
    NOT_EQUALS        shift, and go to state 77
    GREATER_THAN      shift, and go to state 78
    LESS_THAN         shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    LESS_OR_EQUAL     shift, and go to state 81


State 155

   15 expression: expression • PLUS expression
   16           | expression • MINUS expression
   17           | expression • MULT expression
   18           | expression • DIV expression
   19           | expression • MOD expression
   20           | expression • GREATER_THAN expression
   21           | expression • GREATER_OR_EQUAL expression
   22           | expression • LESS_THAN expression
   23           | expression • LESS_OR_EQUAL expression
   24           | expression • EQUALS_EQUALS expression
   25           | expression • NOT_EQUALS expression
   26           | expression • AND expression
   27           | expression • OR expression
   65 indexedelem: LEFT_BRACKET expression COLON expression • RIGHT_BRACKET

    AND               shift, and go to state 68
    OR                shift, and go to state 69
    RIGHT_BRACKET     shift, and go to state 162
    PLUS              shift, and go to state 71
    MINUS             shift, and go to state 72
    MULT              shift, and go to state 73
    DIV               shift, and go to state 74
    MOD               shift, and go to state 75
    EQUALS_EQUALS     shift, and go to state 76
    NOT_EQUALS        shift, and go to state 77
    GREATER_THAN      shift, and go to state 78
    LESS_THAN         shift, and go to state 79
    GREATER_OR_EQUAL  shift, and go to state 80
    LESS_OR_EQUAL     shift, and go to state 81


State 156

   53 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist • RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 163


State 157

   57 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS elist • RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 164


State 158

   74 funcdef: funcstart LEFT_PARENTHESIS $@1 idlist RIGHT_PARENTHESIS • $@2 block

    $default  reduce using rule 73 ($@2)

    $@2  go to state 165


State 159

   83 idlist: arg COMMA • idlist

    ID  shift, and go to state 149

    $default  reduce using rule 84 (idlist)

    idlist  go to state 166
    arg     go to state 151


State 160

   87 ifstmt: IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE • statement

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    IF                shift, and go to state 7
    WHILE             shift, and go to state 8
    FOR               shift, and go to state 9
    FUNCTION          shift, and go to state 10
    RETURN            shift, and go to state 11
    BREAK             shift, and go to state 12
    CONTINUE          shift, and go to state 13
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SEMICOLON         shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    UMINUS            shift, and go to state 26

    statement   go to state 167
    expression  go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    blockstart  go to state 37
    funcdef     go to state 38
    funcstart   go to state 39
    const       go to state 40
    ifstmt      go to state 41
    whilestmt   go to state 42
    forstmt     go to state 43
    returnstmt  go to state 44


State 161

   89 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expression SEMICOLON • elist RIGHT_PARENTHESIS statement

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    UMINUS            shift, and go to state 26

    $default  reduce using rule 60 (elist)

    expression  go to state 56
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 168
    objectdef   go to state 35
    const       go to state 40


State 162

   65 indexedelem: LEFT_BRACKET expression COLON expression RIGHT_BRACKET •

    $default  reduce using rule 65 (indexedelem)


State 163

   53 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS •

    $default  reduce using rule 53 (call)


State 164

   57 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS •

    $default  reduce using rule 57 (methodcall)


State 165

   74 funcdef: funcstart LEFT_PARENTHESIS $@1 idlist RIGHT_PARENTHESIS $@2 • block

    LEFT_BRACKET  shift, and go to state 20

    block       go to state 169
    blockstart  go to state 37


State 166

   83 idlist: arg COMMA idlist •

    $default  reduce using rule 83 (idlist)


State 167

   87 ifstmt: IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement •

    $default  reduce using rule 87 (ifstmt)


State 168

   89 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expression SEMICOLON elist • RIGHT_PARENTHESIS statement

    RIGHT_PARENTHESIS  shift, and go to state 170


State 169

   74 funcdef: funcstart LEFT_PARENTHESIS $@1 idlist RIGHT_PARENTHESIS $@2 block •

    $default  reduce using rule 74 (funcdef)


State 170

   89 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expression SEMICOLON elist RIGHT_PARENTHESIS • statement

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    IF                shift, and go to state 7
    WHILE             shift, and go to state 8
    FOR               shift, and go to state 9
    FUNCTION          shift, and go to state 10
    RETURN            shift, and go to state 11
    BREAK             shift, and go to state 12
    CONTINUE          shift, and go to state 13
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SEMICOLON         shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    PLUS_PLUS         shift, and go to state 24
    MINUS_MINUS       shift, and go to state 25
    UMINUS            shift, and go to state 26

    statement   go to state 171
    expression  go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    blockstart  go to state 37
    funcdef     go to state 38
    funcstart   go to state 39
    const       go to state 40
    ifstmt      go to state 41
    whilestmt   go to state 42
    forstmt     go to state 43
    returnstmt  go to state 44


State 171

   89 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expression SEMICOLON elist RIGHT_PARENTHESIS statement •

    $default  reduce using rule 89 (forstmt)
