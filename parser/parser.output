Rules useless in parser due to conflicts

   76 blockstmt: %empty


State 0 conflicts: 1 reduce/reduce
State 19 conflicts: 1 shift/reduce, 1 reduce/reduce
State 37 conflicts: 1 shift/reduce
State 99 conflicts: 1 reduce/reduce
State 118 conflicts: 13 shift/reduce
State 146 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements
    2        | %empty

    3 statements: statements statement
    4           | %empty

    5 statement: expression SEMICOLON
    6          | ifstmt
    7          | whilestmt
    8          | forstmt
    9          | returnstmt
   10          | BREAK SEMICOLON
   11          | CONTINUE SEMICOLON
   12          | block
   13          | funcdef
   14          | SEMICOLON

   15 expression: assignexpr
   16           | expression op expression
   17           | term

   18 op: PLUS
   19   | MINUS
   20   | MULT
   21   | DIV
   22   | MOD
   23   | GREATER_THAN
   24   | GREATER_OR_EQUAL
   25   | LESS_THAN
   26   | LESS_OR_EQUAL
   27   | EQUALS_EQUALS
   28   | NOT_EQUALS
   29   | AND
   30   | OR

   31 term: LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
   32     | MINUS expression
   33     | NOT expression
   34     | PLUS_PLUS lvalue
   35     | lvalue PLUS_PLUS
   36     | MINUS_MINUS lvalue
   37     | lvalue MINUS_MINUS
   38     | primary

   39 assignexpr: lvalue EQUALS expression

   40 primary: lvalue
   41        | call
   42        | objectdef
   43        | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS
   44        | const

   45 lvalue: ID
   46       | LOCAL ID
   47       | DOUBLE_COLON ID
   48       | member

   49 member: lvalue DOT ID
   50       | lvalue LEFT_BRACE expression RIGHT_BRACE
   51       | call DOT ID
   52       | call LEFT_BRACE expression RIGHT_BRACE

   53 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS
   54     | lvalue callsuffix
   55     | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   56 callsuffix: normcall
   57           | methodcall

   58 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   59 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   60 elist: expression
   61      | expression COMMA elist
   62      | %empty

   63 objectdef: LEFT_BRACE RIGHT_BRACE
   64          | LEFT_BRACE elist RIGHT_BRACE
   65          | LEFT_BRACE indexed RIGHT_BRACE

   66 indexed: indexedelem
   67        | indexedelem COMMA indexed
   68        | %empty

   69 indexedelem: LEFT_BRACKET expression COLON expression RIGHT_BRACKET

   70 block: blockstart blockend
   71      | blockstart blockstmt blockend

   72 blockstart: LEFT_BRACKET

   73 blockend: RIGHT_BRACKET

   74 blockstmt: statement
   75          | statement blockstmt
   76          | %empty

   77 funcdef: FUNCTION ID argstart idlist argend block
   78        | FUNCTION argstart idlist argend block

   79 argstart: LEFT_PARENTHESIS

   80 argend: RIGHT_PARENTHESIS

   81 const: NUM
   82      | STRING
   83      | NIL
   84      | TRUE
   85      | FALSE

   86 idlist: arg
   87       | arg COMMA idlist
   88       | %empty

   89 arg: ID

   90 ifstmt: IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement
   91       | IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement

   92 whilestmt: WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement

   93 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expression SEMICOLON elist RIGHT_PARENTHESIS statement

   94 returnstmt: RETURN SEMICOLON
   95           | RETURN expression SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    NUM <numValue> (258) 81
    ID <strValue> (259) 45 46 47 49 51 59 77 89
    STRING <strValue> (260) 82
    IF <strValue> (261) 90 91
    ELSE <strValue> (262) 91
    WHILE <strValue> (263) 92
    FOR <strValue> (264) 93
    FUNCTION <strValue> (265) 77 78
    RETURN <strValue> (266) 94 95
    BREAK <strValue> (267) 10
    CONTINUE <strValue> (268) 11
    AND <strValue> (269) 29
    NOT <strValue> (270) 33
    OR <strValue> (271) 30
    LOCAL <strValue> (272) 46
    TRUE <strValue> (273) 84
    FALSE <strValue> (274) 85
    NIL <strValue> (275) 83
    LEFT_BRACE <strValue> (276) 50 52 63 64 65
    RIGHT_BRACE <strValue> (277) 50 52 63 64 65
    LEFT_BRACKET <strValue> (278) 69 72
    RIGHT_BRACKET <strValue> (279) 69 73
    LEFT_PARENTHESIS <strValue> (280) 31 43 53 55 58 59 79 90 91 92 93
    RIGHT_PARENTHESIS <strValue> (281) 31 43 53 55 58 59 80 90 91 92 93
    SEMICOLON <strValue> (282) 5 10 11 14 93 94 95
    COMMA <strValue> (283) 61 67 87
    COLON <strValue> (284) 69
    DOUBLE_COLON <strValue> (285) 47
    DOT <strValue> (286) 49 51
    DOUBLE_DOT <strValue> (287) 59
    EQUALS <strValue> (288) 39
    PLUS <strValue> (289) 18
    MINUS <strValue> (290) 19 32
    MULT <strValue> (291) 20
    DIV <strValue> (292) 21
    MOD <strValue> (293) 22
    EQUALS_EQUALS <strValue> (294) 27
    NOT_EQUALS <strValue> (295) 28
    PLUS_PLUS <strValue> (296) 34 35
    MINUS_MINUS <strValue> (297) 36 37
    GREATER_THAN <strValue> (298) 23
    LESS_THAN <strValue> (299) 25
    GREATER_OR_EQUAL <strValue> (300) 24
    LESS_OR_EQUAL <strValue> (301) 26


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    program (48)
        on left: 1 2
        on right: 0
    statements (49)
        on left: 3 4
        on right: 1 3
    statement (50)
        on left: 5 6 7 8 9 10 11 12 13 14
        on right: 3 74 75 90 91 92 93
    expression (51)
        on left: 15 16 17
        on right: 5 16 31 32 33 39 50 52 60 61 69 90 91 92 93 95
    op (52)
        on left: 18 19 20 21 22 23 24 25 26 27 28 29 30
        on right: 16
    term (53)
        on left: 31 32 33 34 35 36 37 38
        on right: 17
    assignexpr (54)
        on left: 39
        on right: 15
    primary (55)
        on left: 40 41 42 43 44
        on right: 38
    lvalue (56)
        on left: 45 46 47 48
        on right: 34 35 36 37 39 40 49 50 54
    member (57)
        on left: 49 50 51 52
        on right: 48
    call (58)
        on left: 53 54 55
        on right: 41 51 52 53
    callsuffix (59)
        on left: 56 57
        on right: 54
    normcall (60)
        on left: 58
        on right: 56
    methodcall (61)
        on left: 59
        on right: 57
    elist (62)
        on left: 60 61 62
        on right: 53 55 58 59 61 64 93
    objectdef (63)
        on left: 63 64 65
        on right: 42
    indexed (64)
        on left: 66 67 68
        on right: 65 67
    indexedelem (65)
        on left: 69
        on right: 66 67
    block (66)
        on left: 70 71
        on right: 12 77 78
    blockstart (67)
        on left: 72
        on right: 70 71
    blockend (68)
        on left: 73
        on right: 70 71
    blockstmt (69)
        on left: 74 75 76
        on right: 71 75
    funcdef (70)
        on left: 77 78
        on right: 13 43 55
    argstart (71)
        on left: 79
        on right: 77 78
    argend (72)
        on left: 80
        on right: 77 78
    const (73)
        on left: 81 82 83 84 85
        on right: 44
    idlist (74)
        on left: 86 87 88
        on right: 77 78 87
    arg (75)
        on left: 89
        on right: 86 87
    ifstmt (76)
        on left: 90 91
        on right: 6
    whilestmt (77)
        on left: 92
        on right: 7
    forstmt (78)
        on left: 93
        on right: 8
    returnstmt (79)
        on left: 94 95
        on right: 9


State 0

    0 $accept: • program $end

    $end      reduce using rule 2 (program)
    $end      [reduce using rule 4 (statements)]
    $default  reduce using rule 4 (statements)

    program     go to state 1
    statements  go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    1 program: statements •
    3 statements: statements • statement

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    IF                shift, and go to state 7
    WHILE             shift, and go to state 8
    FOR               shift, and go to state 9
    FUNCTION          shift, and go to state 10
    RETURN            shift, and go to state 11
    BREAK             shift, and go to state 12
    CONTINUE          shift, and go to state 13
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SEMICOLON         shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    MINUS             shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26

    $default  reduce using rule 1 (program)

    statement   go to state 27
    expression  go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    blockstart  go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 3

    0 $accept: program $end •

    $default  accept


State 4

   81 const: NUM •

    $default  reduce using rule 81 (const)


State 5

   45 lvalue: ID •

    $default  reduce using rule 45 (lvalue)


State 6

   82 const: STRING •

    $default  reduce using rule 82 (const)


State 7

   90 ifstmt: IF • LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement
   91       | IF • LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement

    LEFT_PARENTHESIS  shift, and go to state 44


State 8

   92 whilestmt: WHILE • LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement

    LEFT_PARENTHESIS  shift, and go to state 45


State 9

   93 forstmt: FOR • LEFT_PARENTHESIS elist SEMICOLON expression SEMICOLON elist RIGHT_PARENTHESIS statement

    LEFT_PARENTHESIS  shift, and go to state 46


State 10

   77 funcdef: FUNCTION • ID argstart idlist argend block
   78        | FUNCTION • argstart idlist argend block

    ID                shift, and go to state 47
    LEFT_PARENTHESIS  shift, and go to state 48

    argstart  go to state 49


State 11

   94 returnstmt: RETURN • SEMICOLON
   95           | RETURN • expression SEMICOLON

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    SEMICOLON         shift, and go to state 50
    DOUBLE_COLON      shift, and go to state 23
    MINUS             shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26

    expression  go to state 51
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 12

   10 statement: BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 52


State 13

   11 statement: CONTINUE • SEMICOLON

    SEMICOLON  shift, and go to state 53


State 14

   33 term: NOT • expression

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    MINUS             shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26

    expression  go to state 54
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 15

   46 lvalue: LOCAL • ID

    ID  shift, and go to state 55


State 16

   84 const: TRUE •

    $default  reduce using rule 84 (const)


State 17

   85 const: FALSE •

    $default  reduce using rule 85 (const)


State 18

   83 const: NIL •

    $default  reduce using rule 83 (const)


State 19

   63 objectdef: LEFT_BRACE • RIGHT_BRACE
   64          | LEFT_BRACE • elist RIGHT_BRACE
   65          | LEFT_BRACE • indexed RIGHT_BRACE

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    RIGHT_BRACE       shift, and go to state 56
    LEFT_BRACKET      shift, and go to state 57
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    MINUS             shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26

    RIGHT_BRACE  [reduce using rule 62 (elist)]
    RIGHT_BRACE  [reduce using rule 68 (indexed)]

    expression   go to state 58
    term         go to state 29
    assignexpr   go to state 30
    primary      go to state 31
    lvalue       go to state 32
    member       go to state 33
    call         go to state 34
    elist        go to state 59
    objectdef    go to state 35
    indexed      go to state 60
    indexedelem  go to state 61
    const        go to state 39


State 20

   72 blockstart: LEFT_BRACKET •

    $default  reduce using rule 72 (blockstart)


State 21

   31 term: LEFT_PARENTHESIS • expression RIGHT_PARENTHESIS
   43 primary: LEFT_PARENTHESIS • funcdef RIGHT_PARENTHESIS
   55 call: LEFT_PARENTHESIS • funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    FUNCTION          shift, and go to state 10
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    MINUS             shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26

    expression  go to state 62
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    funcdef     go to state 63
    const       go to state 39


State 22

   14 statement: SEMICOLON •

    $default  reduce using rule 14 (statement)


State 23

   47 lvalue: DOUBLE_COLON • ID

    ID  shift, and go to state 64


State 24

   32 term: MINUS • expression

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    MINUS             shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26

    expression  go to state 65
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 25

   34 term: PLUS_PLUS • lvalue

    ID                shift, and go to state 5
    LOCAL             shift, and go to state 15
    LEFT_PARENTHESIS  shift, and go to state 66
    DOUBLE_COLON      shift, and go to state 23

    lvalue  go to state 67
    member  go to state 33
    call    go to state 68


State 26

   36 term: MINUS_MINUS • lvalue

    ID                shift, and go to state 5
    LOCAL             shift, and go to state 15
    LEFT_PARENTHESIS  shift, and go to state 66
    DOUBLE_COLON      shift, and go to state 23

    lvalue  go to state 69
    member  go to state 33
    call    go to state 68


State 27

    3 statements: statements statement •

    $default  reduce using rule 3 (statements)


State 28

    5 statement: expression • SEMICOLON
   16 expression: expression • op expression

    AND               shift, and go to state 70
    OR                shift, and go to state 71
    SEMICOLON         shift, and go to state 72
    PLUS              shift, and go to state 73
    MINUS             shift, and go to state 74
    MULT              shift, and go to state 75
    DIV               shift, and go to state 76
    MOD               shift, and go to state 77
    EQUALS_EQUALS     shift, and go to state 78
    NOT_EQUALS        shift, and go to state 79
    GREATER_THAN      shift, and go to state 80
    LESS_THAN         shift, and go to state 81
    GREATER_OR_EQUAL  shift, and go to state 82
    LESS_OR_EQUAL     shift, and go to state 83

    op  go to state 84


State 29

   17 expression: term •

    $default  reduce using rule 17 (expression)


State 30

   15 expression: assignexpr •

    $default  reduce using rule 15 (expression)


State 31

   38 term: primary •

    $default  reduce using rule 38 (term)


State 32

   35 term: lvalue • PLUS_PLUS
   37     | lvalue • MINUS_MINUS
   39 assignexpr: lvalue • EQUALS expression
   40 primary: lvalue •
   49 member: lvalue • DOT ID
   50       | lvalue • LEFT_BRACE expression RIGHT_BRACE
   54 call: lvalue • callsuffix

    LEFT_BRACE        shift, and go to state 85
    LEFT_PARENTHESIS  shift, and go to state 86
    DOT               shift, and go to state 87
    DOUBLE_DOT        shift, and go to state 88
    EQUALS            shift, and go to state 89
    PLUS_PLUS         shift, and go to state 90
    MINUS_MINUS       shift, and go to state 91

    $default  reduce using rule 40 (primary)

    callsuffix  go to state 92
    normcall    go to state 93
    methodcall  go to state 94


State 33

   48 lvalue: member •

    $default  reduce using rule 48 (lvalue)


State 34

   41 primary: call •
   51 member: call • DOT ID
   52       | call • LEFT_BRACE expression RIGHT_BRACE
   53 call: call • LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_BRACE        shift, and go to state 95
    LEFT_PARENTHESIS  shift, and go to state 96
    DOT               shift, and go to state 97

    $default  reduce using rule 41 (primary)


State 35

   42 primary: objectdef •

    $default  reduce using rule 42 (primary)


State 36

   12 statement: block •

    $default  reduce using rule 12 (statement)


State 37

   70 block: blockstart • blockend
   71      | blockstart • blockstmt blockend

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    IF                shift, and go to state 7
    WHILE             shift, and go to state 8
    FOR               shift, and go to state 9
    FUNCTION          shift, and go to state 10
    RETURN            shift, and go to state 11
    BREAK             shift, and go to state 12
    CONTINUE          shift, and go to state 13
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 20
    RIGHT_BRACKET     shift, and go to state 98
    LEFT_PARENTHESIS  shift, and go to state 21
    SEMICOLON         shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    MINUS             shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26

    RIGHT_BRACKET  [reduce using rule 76 (blockstmt)]

    statement   go to state 99
    expression  go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    blockstart  go to state 37
    blockend    go to state 100
    blockstmt   go to state 101
    funcdef     go to state 38
    const       go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 38

   13 statement: funcdef •

    $default  reduce using rule 13 (statement)


State 39

   44 primary: const •

    $default  reduce using rule 44 (primary)


State 40

    6 statement: ifstmt •

    $default  reduce using rule 6 (statement)


State 41

    7 statement: whilestmt •

    $default  reduce using rule 7 (statement)


State 42

    8 statement: forstmt •

    $default  reduce using rule 8 (statement)


State 43

    9 statement: returnstmt •

    $default  reduce using rule 9 (statement)


State 44

   90 ifstmt: IF LEFT_PARENTHESIS • expression RIGHT_PARENTHESIS statement
   91       | IF LEFT_PARENTHESIS • expression RIGHT_PARENTHESIS statement ELSE statement

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    MINUS             shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26

    expression  go to state 102
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 45

   92 whilestmt: WHILE LEFT_PARENTHESIS • expression RIGHT_PARENTHESIS statement

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    MINUS             shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26

    expression  go to state 103
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 46

   93 forstmt: FOR LEFT_PARENTHESIS • elist SEMICOLON expression SEMICOLON elist RIGHT_PARENTHESIS statement

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    MINUS             shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26

    $default  reduce using rule 62 (elist)

    expression  go to state 58
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 104
    objectdef   go to state 35
    const       go to state 39


State 47

   77 funcdef: FUNCTION ID • argstart idlist argend block

    LEFT_PARENTHESIS  shift, and go to state 48

    argstart  go to state 105


State 48

   79 argstart: LEFT_PARENTHESIS •

    $default  reduce using rule 79 (argstart)


State 49

   78 funcdef: FUNCTION argstart • idlist argend block

    ID  shift, and go to state 106

    $default  reduce using rule 88 (idlist)

    idlist  go to state 107
    arg     go to state 108


State 50

   94 returnstmt: RETURN SEMICOLON •

    $default  reduce using rule 94 (returnstmt)


State 51

   16 expression: expression • op expression
   95 returnstmt: RETURN expression • SEMICOLON

    AND               shift, and go to state 70
    OR                shift, and go to state 71
    SEMICOLON         shift, and go to state 109
    PLUS              shift, and go to state 73
    MINUS             shift, and go to state 74
    MULT              shift, and go to state 75
    DIV               shift, and go to state 76
    MOD               shift, and go to state 77
    EQUALS_EQUALS     shift, and go to state 78
    NOT_EQUALS        shift, and go to state 79
    GREATER_THAN      shift, and go to state 80
    LESS_THAN         shift, and go to state 81
    GREATER_OR_EQUAL  shift, and go to state 82
    LESS_OR_EQUAL     shift, and go to state 83

    op  go to state 84


State 52

   10 statement: BREAK SEMICOLON •

    $default  reduce using rule 10 (statement)


State 53

   11 statement: CONTINUE SEMICOLON •

    $default  reduce using rule 11 (statement)


State 54

   16 expression: expression • op expression
   33 term: NOT expression •

    $default  reduce using rule 33 (term)

    op  go to state 84


State 55

   46 lvalue: LOCAL ID •

    $default  reduce using rule 46 (lvalue)


State 56

   63 objectdef: LEFT_BRACE RIGHT_BRACE •

    $default  reduce using rule 63 (objectdef)


State 57

   69 indexedelem: LEFT_BRACKET • expression COLON expression RIGHT_BRACKET

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    MINUS             shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26

    expression  go to state 110
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 58

   16 expression: expression • op expression
   60 elist: expression •
   61      | expression • COMMA elist

    AND               shift, and go to state 70
    OR                shift, and go to state 71
    COMMA             shift, and go to state 111
    PLUS              shift, and go to state 73
    MINUS             shift, and go to state 74
    MULT              shift, and go to state 75
    DIV               shift, and go to state 76
    MOD               shift, and go to state 77
    EQUALS_EQUALS     shift, and go to state 78
    NOT_EQUALS        shift, and go to state 79
    GREATER_THAN      shift, and go to state 80
    LESS_THAN         shift, and go to state 81
    GREATER_OR_EQUAL  shift, and go to state 82
    LESS_OR_EQUAL     shift, and go to state 83

    $default  reduce using rule 60 (elist)

    op  go to state 84


State 59

   64 objectdef: LEFT_BRACE elist • RIGHT_BRACE

    RIGHT_BRACE  shift, and go to state 112


State 60

   65 objectdef: LEFT_BRACE indexed • RIGHT_BRACE

    RIGHT_BRACE  shift, and go to state 113


State 61

   66 indexed: indexedelem •
   67        | indexedelem • COMMA indexed

    COMMA  shift, and go to state 114

    $default  reduce using rule 66 (indexed)


State 62

   16 expression: expression • op expression
   31 term: LEFT_PARENTHESIS expression • RIGHT_PARENTHESIS

    AND                shift, and go to state 70
    OR                 shift, and go to state 71
    RIGHT_PARENTHESIS  shift, and go to state 115
    PLUS               shift, and go to state 73
    MINUS              shift, and go to state 74
    MULT               shift, and go to state 75
    DIV                shift, and go to state 76
    MOD                shift, and go to state 77
    EQUALS_EQUALS      shift, and go to state 78
    NOT_EQUALS         shift, and go to state 79
    GREATER_THAN       shift, and go to state 80
    LESS_THAN          shift, and go to state 81
    GREATER_OR_EQUAL   shift, and go to state 82
    LESS_OR_EQUAL      shift, and go to state 83

    op  go to state 84


State 63

   43 primary: LEFT_PARENTHESIS funcdef • RIGHT_PARENTHESIS
   55 call: LEFT_PARENTHESIS funcdef • RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 116


State 64

   47 lvalue: DOUBLE_COLON ID •

    $default  reduce using rule 47 (lvalue)


State 65

   16 expression: expression • op expression
   32 term: MINUS expression •

    MULT  shift, and go to state 75
    DIV   shift, and go to state 76
    MOD   shift, and go to state 77

    $default  reduce using rule 32 (term)

    op  go to state 84


State 66

   55 call: LEFT_PARENTHESIS • funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    FUNCTION  shift, and go to state 10

    funcdef  go to state 117


State 67

   34 term: PLUS_PLUS lvalue •
   49 member: lvalue • DOT ID
   50       | lvalue • LEFT_BRACE expression RIGHT_BRACE
   54 call: lvalue • callsuffix

    LEFT_BRACE        shift, and go to state 85
    LEFT_PARENTHESIS  shift, and go to state 86
    DOT               shift, and go to state 87
    DOUBLE_DOT        shift, and go to state 88

    $default  reduce using rule 34 (term)

    callsuffix  go to state 92
    normcall    go to state 93
    methodcall  go to state 94


State 68

   51 member: call • DOT ID
   52       | call • LEFT_BRACE expression RIGHT_BRACE
   53 call: call • LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_BRACE        shift, and go to state 95
    LEFT_PARENTHESIS  shift, and go to state 96
    DOT               shift, and go to state 97


State 69

   36 term: MINUS_MINUS lvalue •
   49 member: lvalue • DOT ID
   50       | lvalue • LEFT_BRACE expression RIGHT_BRACE
   54 call: lvalue • callsuffix

    LEFT_BRACE        shift, and go to state 85
    LEFT_PARENTHESIS  shift, and go to state 86
    DOT               shift, and go to state 87
    DOUBLE_DOT        shift, and go to state 88

    $default  reduce using rule 36 (term)

    callsuffix  go to state 92
    normcall    go to state 93
    methodcall  go to state 94


State 70

   29 op: AND •

    $default  reduce using rule 29 (op)


State 71

   30 op: OR •

    $default  reduce using rule 30 (op)


State 72

    5 statement: expression SEMICOLON •

    $default  reduce using rule 5 (statement)


State 73

   18 op: PLUS •

    $default  reduce using rule 18 (op)


State 74

   19 op: MINUS •

    $default  reduce using rule 19 (op)


State 75

   20 op: MULT •

    $default  reduce using rule 20 (op)


State 76

   21 op: DIV •

    $default  reduce using rule 21 (op)


State 77

   22 op: MOD •

    $default  reduce using rule 22 (op)


State 78

   27 op: EQUALS_EQUALS •

    $default  reduce using rule 27 (op)


State 79

   28 op: NOT_EQUALS •

    $default  reduce using rule 28 (op)


State 80

   23 op: GREATER_THAN •

    $default  reduce using rule 23 (op)


State 81

   25 op: LESS_THAN •

    $default  reduce using rule 25 (op)


State 82

   24 op: GREATER_OR_EQUAL •

    $default  reduce using rule 24 (op)


State 83

   26 op: LESS_OR_EQUAL •

    $default  reduce using rule 26 (op)


State 84

   16 expression: expression op • expression

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    MINUS             shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26

    expression  go to state 118
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 85

   50 member: lvalue LEFT_BRACE • expression RIGHT_BRACE

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    MINUS             shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26

    expression  go to state 119
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 86

   58 normcall: LEFT_PARENTHESIS • elist RIGHT_PARENTHESIS

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    MINUS             shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26

    $default  reduce using rule 62 (elist)

    expression  go to state 58
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 120
    objectdef   go to state 35
    const       go to state 39


State 87

   49 member: lvalue DOT • ID

    ID  shift, and go to state 121


State 88

   59 methodcall: DOUBLE_DOT • ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    ID  shift, and go to state 122


State 89

   39 assignexpr: lvalue EQUALS • expression

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    MINUS             shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26

    expression  go to state 123
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 90

   35 term: lvalue PLUS_PLUS •

    $default  reduce using rule 35 (term)


State 91

   37 term: lvalue MINUS_MINUS •

    $default  reduce using rule 37 (term)


State 92

   54 call: lvalue callsuffix •

    $default  reduce using rule 54 (call)


State 93

   56 callsuffix: normcall •

    $default  reduce using rule 56 (callsuffix)


State 94

   57 callsuffix: methodcall •

    $default  reduce using rule 57 (callsuffix)


State 95

   52 member: call LEFT_BRACE • expression RIGHT_BRACE

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    MINUS             shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26

    expression  go to state 124
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 96

   53 call: call LEFT_PARENTHESIS • elist RIGHT_PARENTHESIS

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    MINUS             shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26

    $default  reduce using rule 62 (elist)

    expression  go to state 58
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 125
    objectdef   go to state 35
    const       go to state 39


State 97

   51 member: call DOT • ID

    ID  shift, and go to state 126


State 98

   73 blockend: RIGHT_BRACKET •

    $default  reduce using rule 73 (blockend)


State 99

   74 blockstmt: statement •
   75          | statement • blockstmt

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    IF                shift, and go to state 7
    WHILE             shift, and go to state 8
    FOR               shift, and go to state 9
    FUNCTION          shift, and go to state 10
    RETURN            shift, and go to state 11
    BREAK             shift, and go to state 12
    CONTINUE          shift, and go to state 13
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SEMICOLON         shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    MINUS             shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26

    RIGHT_BRACKET  reduce using rule 74 (blockstmt)
    RIGHT_BRACKET  [reduce using rule 76 (blockstmt)]
    $default       reduce using rule 74 (blockstmt)

    statement   go to state 99
    expression  go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    blockstart  go to state 37
    blockstmt   go to state 127
    funcdef     go to state 38
    const       go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 100

   70 block: blockstart blockend •

    $default  reduce using rule 70 (block)


State 101

   71 block: blockstart blockstmt • blockend

    RIGHT_BRACKET  shift, and go to state 98

    blockend  go to state 128


State 102

   16 expression: expression • op expression
   90 ifstmt: IF LEFT_PARENTHESIS expression • RIGHT_PARENTHESIS statement
   91       | IF LEFT_PARENTHESIS expression • RIGHT_PARENTHESIS statement ELSE statement

    AND                shift, and go to state 70
    OR                 shift, and go to state 71
    RIGHT_PARENTHESIS  shift, and go to state 129
    PLUS               shift, and go to state 73
    MINUS              shift, and go to state 74
    MULT               shift, and go to state 75
    DIV                shift, and go to state 76
    MOD                shift, and go to state 77
    EQUALS_EQUALS      shift, and go to state 78
    NOT_EQUALS         shift, and go to state 79
    GREATER_THAN       shift, and go to state 80
    LESS_THAN          shift, and go to state 81
    GREATER_OR_EQUAL   shift, and go to state 82
    LESS_OR_EQUAL      shift, and go to state 83

    op  go to state 84


State 103

   16 expression: expression • op expression
   92 whilestmt: WHILE LEFT_PARENTHESIS expression • RIGHT_PARENTHESIS statement

    AND                shift, and go to state 70
    OR                 shift, and go to state 71
    RIGHT_PARENTHESIS  shift, and go to state 130
    PLUS               shift, and go to state 73
    MINUS              shift, and go to state 74
    MULT               shift, and go to state 75
    DIV                shift, and go to state 76
    MOD                shift, and go to state 77
    EQUALS_EQUALS      shift, and go to state 78
    NOT_EQUALS         shift, and go to state 79
    GREATER_THAN       shift, and go to state 80
    LESS_THAN          shift, and go to state 81
    GREATER_OR_EQUAL   shift, and go to state 82
    LESS_OR_EQUAL      shift, and go to state 83

    op  go to state 84


State 104

   93 forstmt: FOR LEFT_PARENTHESIS elist • SEMICOLON expression SEMICOLON elist RIGHT_PARENTHESIS statement

    SEMICOLON  shift, and go to state 131


State 105

   77 funcdef: FUNCTION ID argstart • idlist argend block

    ID  shift, and go to state 106

    $default  reduce using rule 88 (idlist)

    idlist  go to state 132
    arg     go to state 108


State 106

   89 arg: ID •

    $default  reduce using rule 89 (arg)


State 107

   78 funcdef: FUNCTION argstart idlist • argend block

    RIGHT_PARENTHESIS  shift, and go to state 133

    argend  go to state 134


State 108

   86 idlist: arg •
   87       | arg • COMMA idlist

    COMMA  shift, and go to state 135

    $default  reduce using rule 86 (idlist)


State 109

   95 returnstmt: RETURN expression SEMICOLON •

    $default  reduce using rule 95 (returnstmt)


State 110

   16 expression: expression • op expression
   69 indexedelem: LEFT_BRACKET expression • COLON expression RIGHT_BRACKET

    AND               shift, and go to state 70
    OR                shift, and go to state 71
    COLON             shift, and go to state 136
    PLUS              shift, and go to state 73
    MINUS             shift, and go to state 74
    MULT              shift, and go to state 75
    DIV               shift, and go to state 76
    MOD               shift, and go to state 77
    EQUALS_EQUALS     shift, and go to state 78
    NOT_EQUALS        shift, and go to state 79
    GREATER_THAN      shift, and go to state 80
    LESS_THAN         shift, and go to state 81
    GREATER_OR_EQUAL  shift, and go to state 82
    LESS_OR_EQUAL     shift, and go to state 83

    op  go to state 84


State 111

   61 elist: expression COMMA • elist

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    MINUS             shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26

    $default  reduce using rule 62 (elist)

    expression  go to state 58
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 137
    objectdef   go to state 35
    const       go to state 39


State 112

   64 objectdef: LEFT_BRACE elist RIGHT_BRACE •

    $default  reduce using rule 64 (objectdef)


State 113

   65 objectdef: LEFT_BRACE indexed RIGHT_BRACE •

    $default  reduce using rule 65 (objectdef)


State 114

   67 indexed: indexedelem COMMA • indexed

    LEFT_BRACKET  shift, and go to state 57

    $default  reduce using rule 68 (indexed)

    indexed      go to state 138
    indexedelem  go to state 61


State 115

   31 term: LEFT_PARENTHESIS expression RIGHT_PARENTHESIS •

    $default  reduce using rule 31 (term)


State 116

   43 primary: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS •
   55 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS • LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 139

    $default  reduce using rule 43 (primary)


State 117

   55 call: LEFT_PARENTHESIS funcdef • RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 140


State 118

   16 expression: expression • op expression
   16           | expression op expression •

    AND               shift, and go to state 70
    OR                shift, and go to state 71
    PLUS              shift, and go to state 73
    MINUS             shift, and go to state 74
    MULT              shift, and go to state 75
    DIV               shift, and go to state 76
    MOD               shift, and go to state 77
    EQUALS_EQUALS     shift, and go to state 78
    NOT_EQUALS        shift, and go to state 79
    GREATER_THAN      shift, and go to state 80
    LESS_THAN         shift, and go to state 81
    GREATER_OR_EQUAL  shift, and go to state 82
    LESS_OR_EQUAL     shift, and go to state 83

    AND               [reduce using rule 16 (expression)]
    OR                [reduce using rule 16 (expression)]
    PLUS              [reduce using rule 16 (expression)]
    MINUS             [reduce using rule 16 (expression)]
    MULT              [reduce using rule 16 (expression)]
    DIV               [reduce using rule 16 (expression)]
    MOD               [reduce using rule 16 (expression)]
    EQUALS_EQUALS     [reduce using rule 16 (expression)]
    NOT_EQUALS        [reduce using rule 16 (expression)]
    GREATER_THAN      [reduce using rule 16 (expression)]
    LESS_THAN         [reduce using rule 16 (expression)]
    GREATER_OR_EQUAL  [reduce using rule 16 (expression)]
    LESS_OR_EQUAL     [reduce using rule 16 (expression)]
    $default          reduce using rule 16 (expression)

    op  go to state 84


State 119

   16 expression: expression • op expression
   50 member: lvalue LEFT_BRACE expression • RIGHT_BRACE

    AND               shift, and go to state 70
    OR                shift, and go to state 71
    RIGHT_BRACE       shift, and go to state 141
    PLUS              shift, and go to state 73
    MINUS             shift, and go to state 74
    MULT              shift, and go to state 75
    DIV               shift, and go to state 76
    MOD               shift, and go to state 77
    EQUALS_EQUALS     shift, and go to state 78
    NOT_EQUALS        shift, and go to state 79
    GREATER_THAN      shift, and go to state 80
    LESS_THAN         shift, and go to state 81
    GREATER_OR_EQUAL  shift, and go to state 82
    LESS_OR_EQUAL     shift, and go to state 83

    op  go to state 84


State 120

   58 normcall: LEFT_PARENTHESIS elist • RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 142


State 121

   49 member: lvalue DOT ID •

    $default  reduce using rule 49 (member)


State 122

   59 methodcall: DOUBLE_DOT ID • LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 143


State 123

   16 expression: expression • op expression
   39 assignexpr: lvalue EQUALS expression •

    AND               shift, and go to state 70
    OR                shift, and go to state 71
    PLUS              shift, and go to state 73
    MINUS             shift, and go to state 74
    MULT              shift, and go to state 75
    DIV               shift, and go to state 76
    MOD               shift, and go to state 77
    EQUALS_EQUALS     shift, and go to state 78
    NOT_EQUALS        shift, and go to state 79
    GREATER_THAN      shift, and go to state 80
    LESS_THAN         shift, and go to state 81
    GREATER_OR_EQUAL  shift, and go to state 82
    LESS_OR_EQUAL     shift, and go to state 83

    $default  reduce using rule 39 (assignexpr)

    op  go to state 84


State 124

   16 expression: expression • op expression
   52 member: call LEFT_BRACE expression • RIGHT_BRACE

    AND               shift, and go to state 70
    OR                shift, and go to state 71
    RIGHT_BRACE       shift, and go to state 144
    PLUS              shift, and go to state 73
    MINUS             shift, and go to state 74
    MULT              shift, and go to state 75
    DIV               shift, and go to state 76
    MOD               shift, and go to state 77
    EQUALS_EQUALS     shift, and go to state 78
    NOT_EQUALS        shift, and go to state 79
    GREATER_THAN      shift, and go to state 80
    LESS_THAN         shift, and go to state 81
    GREATER_OR_EQUAL  shift, and go to state 82
    LESS_OR_EQUAL     shift, and go to state 83

    op  go to state 84


State 125

   53 call: call LEFT_PARENTHESIS elist • RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 145


State 126

   51 member: call DOT ID •

    $default  reduce using rule 51 (member)


State 127

   75 blockstmt: statement blockstmt •

    $default  reduce using rule 75 (blockstmt)


State 128

   71 block: blockstart blockstmt blockend •

    $default  reduce using rule 71 (block)


State 129

   90 ifstmt: IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS • statement
   91       | IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS • statement ELSE statement

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    IF                shift, and go to state 7
    WHILE             shift, and go to state 8
    FOR               shift, and go to state 9
    FUNCTION          shift, and go to state 10
    RETURN            shift, and go to state 11
    BREAK             shift, and go to state 12
    CONTINUE          shift, and go to state 13
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SEMICOLON         shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    MINUS             shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26

    statement   go to state 146
    expression  go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    blockstart  go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 130

   92 whilestmt: WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS • statement

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    IF                shift, and go to state 7
    WHILE             shift, and go to state 8
    FOR               shift, and go to state 9
    FUNCTION          shift, and go to state 10
    RETURN            shift, and go to state 11
    BREAK             shift, and go to state 12
    CONTINUE          shift, and go to state 13
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SEMICOLON         shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    MINUS             shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26

    statement   go to state 147
    expression  go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    blockstart  go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 131

   93 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON • expression SEMICOLON elist RIGHT_PARENTHESIS statement

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    MINUS             shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26

    expression  go to state 148
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 132

   77 funcdef: FUNCTION ID argstart idlist • argend block

    RIGHT_PARENTHESIS  shift, and go to state 133

    argend  go to state 149


State 133

   80 argend: RIGHT_PARENTHESIS •

    $default  reduce using rule 80 (argend)


State 134

   78 funcdef: FUNCTION argstart idlist argend • block

    LEFT_BRACKET  shift, and go to state 20

    block       go to state 150
    blockstart  go to state 37


State 135

   87 idlist: arg COMMA • idlist

    ID  shift, and go to state 106

    $default  reduce using rule 88 (idlist)

    idlist  go to state 151
    arg     go to state 108


State 136

   69 indexedelem: LEFT_BRACKET expression COLON • expression RIGHT_BRACKET

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    MINUS             shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26

    expression  go to state 152
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 137

   61 elist: expression COMMA elist •

    $default  reduce using rule 61 (elist)


State 138

   67 indexed: indexedelem COMMA indexed •

    $default  reduce using rule 67 (indexed)


State 139

   55 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS • elist RIGHT_PARENTHESIS

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    MINUS             shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26

    $default  reduce using rule 62 (elist)

    expression  go to state 58
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 153
    objectdef   go to state 35
    const       go to state 39


State 140

   55 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS • LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 139


State 141

   50 member: lvalue LEFT_BRACE expression RIGHT_BRACE •

    $default  reduce using rule 50 (member)


State 142

   58 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS •

    $default  reduce using rule 58 (normcall)


State 143

   59 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS • elist RIGHT_PARENTHESIS

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    MINUS             shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26

    $default  reduce using rule 62 (elist)

    expression  go to state 58
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 154
    objectdef   go to state 35
    const       go to state 39


State 144

   52 member: call LEFT_BRACE expression RIGHT_BRACE •

    $default  reduce using rule 52 (member)


State 145

   53 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS •

    $default  reduce using rule 53 (call)


State 146

   90 ifstmt: IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement •
   91       | IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement • ELSE statement

    ELSE  shift, and go to state 155

    ELSE      [reduce using rule 90 (ifstmt)]
    $default  reduce using rule 90 (ifstmt)


State 147

   92 whilestmt: WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement •

    $default  reduce using rule 92 (whilestmt)


State 148

   16 expression: expression • op expression
   93 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expression • SEMICOLON elist RIGHT_PARENTHESIS statement

    AND               shift, and go to state 70
    OR                shift, and go to state 71
    SEMICOLON         shift, and go to state 156
    PLUS              shift, and go to state 73
    MINUS             shift, and go to state 74
    MULT              shift, and go to state 75
    DIV               shift, and go to state 76
    MOD               shift, and go to state 77
    EQUALS_EQUALS     shift, and go to state 78
    NOT_EQUALS        shift, and go to state 79
    GREATER_THAN      shift, and go to state 80
    LESS_THAN         shift, and go to state 81
    GREATER_OR_EQUAL  shift, and go to state 82
    LESS_OR_EQUAL     shift, and go to state 83

    op  go to state 84


State 149

   77 funcdef: FUNCTION ID argstart idlist argend • block

    LEFT_BRACKET  shift, and go to state 20

    block       go to state 157
    blockstart  go to state 37


State 150

   78 funcdef: FUNCTION argstart idlist argend block •

    $default  reduce using rule 78 (funcdef)


State 151

   87 idlist: arg COMMA idlist •

    $default  reduce using rule 87 (idlist)


State 152

   16 expression: expression • op expression
   69 indexedelem: LEFT_BRACKET expression COLON expression • RIGHT_BRACKET

    AND               shift, and go to state 70
    OR                shift, and go to state 71
    RIGHT_BRACKET     shift, and go to state 158
    PLUS              shift, and go to state 73
    MINUS             shift, and go to state 74
    MULT              shift, and go to state 75
    DIV               shift, and go to state 76
    MOD               shift, and go to state 77
    EQUALS_EQUALS     shift, and go to state 78
    NOT_EQUALS        shift, and go to state 79
    GREATER_THAN      shift, and go to state 80
    LESS_THAN         shift, and go to state 81
    GREATER_OR_EQUAL  shift, and go to state 82
    LESS_OR_EQUAL     shift, and go to state 83

    op  go to state 84


State 153

   55 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist • RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 159


State 154

   59 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS elist • RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 160


State 155

   91 ifstmt: IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE • statement

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    IF                shift, and go to state 7
    WHILE             shift, and go to state 8
    FOR               shift, and go to state 9
    FUNCTION          shift, and go to state 10
    RETURN            shift, and go to state 11
    BREAK             shift, and go to state 12
    CONTINUE          shift, and go to state 13
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SEMICOLON         shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    MINUS             shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26

    statement   go to state 161
    expression  go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    blockstart  go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 156

   93 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expression SEMICOLON • elist RIGHT_PARENTHESIS statement

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    MINUS             shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26

    $default  reduce using rule 62 (elist)

    expression  go to state 58
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 162
    objectdef   go to state 35
    const       go to state 39


State 157

   77 funcdef: FUNCTION ID argstart idlist argend block •

    $default  reduce using rule 77 (funcdef)


State 158

   69 indexedelem: LEFT_BRACKET expression COLON expression RIGHT_BRACKET •

    $default  reduce using rule 69 (indexedelem)


State 159

   55 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS •

    $default  reduce using rule 55 (call)


State 160

   59 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS •

    $default  reduce using rule 59 (methodcall)


State 161

   91 ifstmt: IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement ELSE statement •

    $default  reduce using rule 91 (ifstmt)


State 162

   93 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expression SEMICOLON elist • RIGHT_PARENTHESIS statement

    RIGHT_PARENTHESIS  shift, and go to state 163


State 163

   93 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expression SEMICOLON elist RIGHT_PARENTHESIS • statement

    NUM               shift, and go to state 4
    ID                shift, and go to state 5
    STRING            shift, and go to state 6
    IF                shift, and go to state 7
    WHILE             shift, and go to state 8
    FOR               shift, and go to state 9
    FUNCTION          shift, and go to state 10
    RETURN            shift, and go to state 11
    BREAK             shift, and go to state 12
    CONTINUE          shift, and go to state 13
    NOT               shift, and go to state 14
    LOCAL             shift, and go to state 15
    TRUE              shift, and go to state 16
    FALSE             shift, and go to state 17
    NIL               shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SEMICOLON         shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    MINUS             shift, and go to state 24
    PLUS_PLUS         shift, and go to state 25
    MINUS_MINUS       shift, and go to state 26

    statement   go to state 164
    expression  go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    blockstart  go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 164

   93 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expression SEMICOLON elist RIGHT_PARENTHESIS statement •

    $default  reduce using rule 93 (forstmt)
